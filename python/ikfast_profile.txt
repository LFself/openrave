Thu Dec 21 14:40:01 2017    ikfast_profile.out

         203514192 function calls (191809357 primitive calls) in 108.180 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.001    0.001  108.181  108.181 openrave.py:15(<module>)
        1    0.000    0.000  108.076  108.076 inversekinematics.py:1373(run)
        1    0.004    0.004  108.076  108.076 inversekinematics.py:1295(RunFromParser)
        1    0.009    0.009   91.245   91.245 __init__.py:235(RunFromParser)
        1    0.002    0.002   91.105   91.105 inversekinematics.py:684(autogenerate)
        1    0.001    0.001   91.102   91.102 inversekinematics.py:764(generate)
        1    0.001    0.001   78.281   78.281 ikfast_IKFastSolver.py:1158(generateIkSolver)
        1    0.000    0.000   78.199   78.199 inversekinematics.py:846(solveFullIK_6D)
        1    0.000    0.000   78.199   78.199 ikfast_IKFastSolver.py:2051(solveFullIK_6D)
        1    0.000    0.000   77.646   77.646 ikfast_IKFastSolver.py:2177(TestIntersectingAxes)
        1    0.000    0.000   77.521   77.521 ikfast_IKFastSolver.py:2512(solve6DIntersectingAxes)
    175/2    0.010    0.000   76.592   38.296 ikfast_IKFastSolver.py:6414(SolveAllEquations)
     80/2    0.031    0.000   76.411   38.205 ikfast_IKFastSolver.py:6805(AddSolution)
6834361/5322665    7.395    0.000   41.266    0.000 cache.py:74(wrapper)
      176    0.043    0.000   40.523    0.230 ikfast_IKFastSolver.py:8104(solveSingleVariable)
    17363    0.038    0.000   39.252    0.002 polytools.py:80(__new__)
    17525    0.018    0.000   38.658    0.002 polytools.py:205(_from_expr)
1665929/97008   10.181    0.000   38.143    0.000 expr.py:1869(expand)
     1675    0.035    0.000   36.935    0.022 ikfast_IKFastSolver.py:5899(SimplifyTransform)
17105/1003    0.043    0.000   31.964    0.032 ikfast_IKFastSolver.py:673(SimplifyAtan2)
     1048    0.048    0.000   29.664    0.028 ikfast_IKFastSolver.py:6030(_SimplifyRotationNorm)
11600/420    0.019    0.000   29.211    0.070 ikfast_IKFastSolver.py:889(checkForDivideByZero)
    17051    0.055    0.000   21.820    0.001 polytools.py:139(_from_dict)
    18377    0.102    0.000   21.072    0.001 constructor.py:195(construct_domain)
    14207    0.221    0.000   20.743    0.001 constructor.py:99(_construct_composite)
182130/148913    0.785    0.000   19.326    0.000 mul.py:570(_eval_expand_mul)
54611/44635    0.330    0.000   17.491    0.000 add.py:457(_eval_expand_mul)
    18320    0.059    0.000   16.842    0.001 polyutils.py:283(_dict_from_expr)
        1   16.826   16.826   16.826   16.826 inversekinematics.py:1097(testik)
      214    0.004    0.000   16.176    0.076 ikfast_IKFastSolver.py:978(ComputeSolutionComplexity)
420078/50012    0.293    0.000   16.061    0.000 basic.py:719(subs)
111681/96435    0.104    0.000   14.456    0.000 basic.py:756(_subs_old_new)
    16368    0.097    0.000   13.206    0.001 polyutils.py:263(_parallel_dict_from_expr)
        1    0.000    0.000   12.672   12.672 ikfast_IKFastSolver.py:1128(writeIkSolver)
        1    0.000    0.000   12.672   12.672 ikfast_generator_cpp.py:229(generate)
        1    0.000    0.000   12.672   12.672 ikfast_AST.py:607(generate)
        1    0.000    0.000   12.672   12.672 ikfast_generator_cpp.py:671(generateChain)
83070/53903    0.365    0.000   12.493    0.000 add.py:334(_eval_subs)
    14207    0.020    0.000   12.214    0.001 polyutils.py:258(parallel_dict_from_expr)
    332/1    0.001    0.000   11.422   11.422 ikfast_generator_cpp.py:1763(generateTree)
    123/1    0.000    0.000   11.413   11.413 ikfast_AST.py:412(generate)
    123/1    0.002    0.000   11.413   11.413 ikfast_generator_cpp.py:1617(generateCheckZeros)
      651    0.004    0.000   11.240    0.017 ikfast_generator_cpp.py:1843(WriteEquations2)
      651    0.015    0.000   10.921    0.017 ikfast_generator_cpp.py:1885(_WriteEquations)
     2028    0.025    0.000   10.726    0.005 simplify.py:1564(simplify)
      760    0.011    0.000   10.526    0.014 ikfast_generator_cpp.py:158(customcse)
      168    0.000    0.000    9.926    0.059 ikfast_AST.py:76(generate)
      168    0.007    0.000    9.847    0.059 ikfast_generator_cpp.py:1119(generateSolution)
146336/138395    0.428    0.000    9.191    0.000 operations.py:27(__new__)
     30/3    0.000    0.000    8.876    2.959 ikfast_AST.py:375(generate)
     30/3    0.002    0.000    8.876    2.959 ikfast_generator_cpp.py:1566(generateBranchConds)
      760    0.074    0.000    8.653    0.011 cse_main.py:71(cse)
595084/503073    0.323    0.000    8.121    0.000 decorators.py:72(__sympifyit_wrapper)
29442/29394    0.121    0.000    8.120    0.000 basic.py:769(_subs_list)
236398/176316    0.822    0.000    7.940    0.000 mul.py:952(_eval_subs)
7056513/6974998    4.147    0.000    7.568    0.000 {map}
10201/2774    0.042    0.000    7.274    0.003 function.py:159(__new__)
216501/205035    0.691    0.000    6.956    0.000 power.py:344(_eval_expand_multinomial)
77103/76200    0.127    0.000    6.842    0.000 function.py:135(_eval_subs)
217368/202441    0.482    0.000    6.595    0.000 power.py:262(_eval_expand_power_exp)
460095/455433    0.277    0.000    6.575    0.000 decorators.py:106(binary_op_wrapper)
96634/92660    1.663    0.000    6.462    0.000 mul.py:28(flatten)
     2186    0.008    0.000    6.119    0.003 euclidtools.py:1814(dmp_cancel)
11544/2190    0.015    0.000    6.101    0.003 euclidtools.py:1532(dmp_inner_gcd)
53238/49872    0.312    0.000    5.962    0.000 add.py:437(_eval_expand_power_exp)
6831/1838    0.009    0.000    5.952    0.003 euclidtools.py:1512(_dmp_inner_gcd)
7785/1838    0.016    0.000    5.946    0.003 euclidtools.py:1273(dmp_zz_heu_gcd)
232983/173446    0.389    0.000    5.934    0.000 mul.py:961(fallback)
183745/177215    0.732    0.000    5.505    0.000 mul.py:550(_eval_expand_power_exp)
7407/1969    0.010    0.000    5.425    0.003 euclidtools.py:898(_dmp_rr_trivial_gcd)
6513/1967    0.015    0.000    5.420    0.003 euclidtools.py:942(_dmp_simplify_gcd)
57145/50143    0.313    0.000    5.413    0.000 add.py:467(_eval_expand_multinomial)
     1244    0.019    0.000    5.333    0.004 solvers.py:251(solve)
  4648708    1.644    0.000    5.237    0.000 numbers.py:1126(__hash__)
     1244    0.010    0.000    5.075    0.004 solvers.py:519(_solve)
       94    0.021    0.000    5.062    0.054 ikfast_IKFastSolver.py:6349(PropagateSolvedConstants)
187446/165450    0.700    0.000    5.020    0.000 mul.py:599(_eval_expand_multinomial)
9360/3626    0.005    0.000    4.917    0.001 euclidtools.py:1580(dmp_gcd)
       58    0.000    0.000    4.774    0.082 fractionfield.py:38(__call__)
       58    0.001    0.000    4.774    0.082 polyclasses.py:917(__init__)
        4    0.004    0.001    4.693    1.173 ikfast_IKFastSolver.py:8735(SolvePairVariables)
     2405    0.017    0.000    4.406    0.002 polytools.py:5187(cancel)
163744/11321    0.559    0.000    4.335    0.000 expr.py:1062(extract_multiplicatively)
  5413409    1.701    0.000    4.228    0.000 numbers.py:819(__hash__)
11058420/10397347    1.890    0.000    4.199    0.000 {getattr}
      723    0.004    0.000    4.092    0.006 trigonometric.py:1362(eval)
3719/2382    0.009    0.000    4.075    0.002 euclidtools.py:1741(dmp_content)
3680208/3665846    3.699    0.000    3.871    0.000 sympify.py:23(sympify)
2067/1968    0.008    0.000    3.695    0.002 complexes.py:246(eval)
53242/52258    0.293    0.000    3.425    0.000 add.py:447(_eval_expand_power_base)
      265    0.005    0.000    3.382    0.013 solvers.py:839(solve_linear_system)
     5092    0.414    0.000    3.363    0.001 euclidtools.py:1149(dup_zz_heu_gcd)
63085/54669    0.367    0.000    3.344    0.000 add.py:477(_eval_expand_log)
245905/245903    0.212    0.000    3.288    0.000 expr.py:111(__div__)
     4326    0.003    0.000    3.201    0.001 cse_main.py:46(postprocess_for_cse)
     4326    0.018    0.000    3.198    0.001 cse_opts.py:62(sub_post)
     1048    0.019    0.000    3.190    0.003 ikfast_IKFastSolver.py:6126(_SimplifyRotationDot)
     1048    0.018    0.000    3.076    0.003 ikfast_IKFastSolver.py:6230(_SimplifyRotationCross)
1125415/347353    0.350    0.000    3.049    0.000 assumptions.py:365(getit)
46981/46941    0.106    0.000    2.982    0.000 evalf.py:983(evalf)
223316/41134    0.904    0.000    2.932    0.000 assumptions.py:188(_what_known_about)
3521/1663    0.011    0.000    2.930    0.002 expr.py:1247(could_extract_minus_sign)
183780/183184    0.697    0.000    2.916    0.000 mul.py:560(_eval_expand_power_base)
63085/54669    0.329    0.000    2.916    0.000 add.py:427(_eval_expand_basic)
14416/12372    0.036    0.000    2.911    0.000 cse_opts.py:32(_eval_subs)
202915/179923    0.792    0.000    2.864    0.000 mul.py:609(_eval_expand_log)
2159716/1999187    1.217    0.000    2.762    0.000 basic.py:374(__eq__)
   217368    0.404    0.000    2.744    0.000 power.py:279(_eval_expand_power_base)
18442773/17527803    2.368    0.000    2.739    0.000 basic.py:179(__hash__)
  5690328    1.957    0.000    2.729    0.000 numbers.py:194(__hash__)
  2226034    0.549    0.000    2.673    0.000 sympify.py:161(_sympify)
202915/179923    0.730    0.000    2.474    0.000 mul.py:540(_eval_expand_basic)
     2161    0.004    0.000    2.386    0.001 polytools.py:3596(parallel_poly_from_expr)
        1    0.002    0.002    2.371    2.371 ikfast_IKFastSolver.py:7521(SolvePairVariablesHalfAngle)
       82    0.000    0.000    2.359    0.029 ikfast_AST.py:546(generate)
       82    0.000    0.000    2.359    0.029 ikfast_generator_cpp.py:1756(generateSequence)
       82    0.000    0.000    2.358    0.029 ikfast_AST.py:488(generate)
       82    0.000    0.000    2.358    0.029 ikfast_generator_cpp.py:1681(generateRotation)
     2161    0.043    0.000    2.349    0.001 polytools.py:3601(_parallel_poly_from_expr)
16648/16208    0.149    0.000    2.209    0.000 add.py:260(as_numer_denom)
       77    0.003    0.000    2.191    0.028 ikfast_IKFastSolver.py:7982(solveHighDegreeEquationsHalfAngle)
2989/2957    0.016    0.000    2.177    0.001 add.py:395(as_real_imag)
17152/9324    0.007    0.000    2.153    0.000 function.py:184(_should_evalf)
825866/815295    0.104    0.000    2.102    0.000 {max}
      733    0.004    0.000    2.083    0.003 ikfast_IKFastSolver.py:635(trigsimp_new)
    22359    0.025    0.000    2.046    0.000 expr.py:935(as_real_imag)
16363/8535    0.006    0.000    1.999    0.000 function.py:178(<genexpr>)
 21327200    1.987    0.000    1.987    0.000 cache.py:96(<lambda>)
97449/70404    0.081    0.000    1.961    0.000 str.py:471(sstr)
2475/2297    0.003    0.000    1.945    0.001 mul.py:474(_eval_evalf)
499389/72661    0.145    0.000    1.931    0.000 {any}
    11673    0.023    0.000    1.887    0.000 polytools.py:758(terms)
    16456    0.018    0.000    1.839    0.000 basic.py:847(has)
    17065    0.009    0.000    1.836    0.000 densearith.py:1652(dmp_div)
48202/17033    0.094    0.000    1.826    0.000 densearith.py:1386(dmp_rr_div)
103198/76153    0.053    0.000    1.826    0.000 printer.py:222(doprint)
    16537    0.447    0.000    1.823    0.000 polyutils.py:173(_parallel_dict_from_expr_no_gens)
    26170    0.222    0.000    1.816    0.000 polyutils.py:298(expr_from_dict)
       58    0.009    0.000    1.795    0.031 ikfast_IKFastSolver.py:8050(checkFinalEquation)
95175/74721    0.189    0.000    1.787    0.000 basic.py:475(__str__)
150840/76153    0.225    0.000    1.786    0.000 printer.py:226(_print)
    14150    0.319    0.000    1.783    0.000 function.py:1368(count_ops)
    57259    0.025    0.000    1.757    0.000 basic.py:889(<genexpr>)
222274/216753    0.702    0.000    1.751    0.000 power.py:488(_eval_expand_log)
    19635    0.022    0.000    1.743    0.000 polynomialring.py:50(to_sympy)
    42049    0.404    0.000    1.729    0.000 add.py:17(flatten)
   241473    1.722    0.000    1.725    0.000 numbers.py:36(igcd)
429936/40803    0.464    0.000    1.711    0.000 basic.py:871(search)
    18151    0.021    0.000    1.666    0.000 polyutils.py:248(_dict_from_expr_if_gens)
222274/216753    0.667    0.000    1.646    0.000 power.py:252(_eval_expand_basic)
    18151    0.410    0.000    1.644    0.000 polyutils.py:130(_parallel_dict_from_expr_if_gens)
    90542    0.029    0.000    1.583    0.000 pythonintegerring.py:93(gcd)
41175/2870    0.204    0.000    1.572    0.001 simplify.py:1128(powsimp)
     1122    0.017    0.000    1.556    0.001 ikfast_IKFastSolver.py:9256(groupTerms)
85243/84457    0.052    0.000    1.531    0.000 expr.py:93(__mul__)
     4227    0.002    0.000    1.525    0.000 expr.py:761(as_coefficient)
     2128    0.011    0.000    1.475    0.001 polytools.py:3003(cancel)
11688/6541    0.010    0.000    1.474    0.000 mul.py:943(_eval_is_even)
381012/362768    0.324    0.000    1.468    0.000 numbers.py:1056(__mul__)
   138253    0.289    0.000    1.440    0.000 {method 'sort' of 'list' objects}
25183/2680    0.049    0.000    1.412    0.001 ikfast_generator_cpp.py:108(evalNumbers)
2201/1888    0.016    0.000    1.405    0.001 str.py:43(_print_Add)
     2128    0.006    0.000    1.388    0.001 polyclasses.py:623(cancel)
  8868434    1.361    0.000    1.361    0.000 {hasattr}
11545/4191    0.006    0.000    1.358    0.000 evalf.py:1053(_evalf)
815861/131386    0.128    0.000    1.350    0.000 basic.py:880(<genexpr>)
31392/28259    0.092    0.000    1.345    0.000 {sorted}
    11280    0.025    0.000    1.338    0.000 expr.py:450(count_ops)
109848/106167    0.346    0.000    1.321    0.000 power.py:334(_eval_expand_mul)
   383536    0.400    0.000    1.318    0.000 numbers.py:751(__eq__)
4143/1757    0.010    0.000    1.282    0.001 operations.py:261(_eval_evalf)
   608831    0.192    0.000    1.267    0.000 basic.py:1214(_eval_subs)
     2163    0.009    0.000    1.245    0.001 complexes.py:39(eval)
301579/46983    0.513    0.000    1.230    0.000 densebasic.py:921(dmp_from_dict)
  968/820    0.003    0.000    1.219    0.001 power.py:585(_eval_evalf)
      672    0.003    0.000    1.158    0.002 matrices.py:757(row)
   256592    0.194    0.000    1.142    0.000 numbers.py:1084(__eq__)
58557/55552    0.157    0.000    1.125    0.000 mul.py:775(as_numer_denom)
      510    0.001    0.000    1.119    0.002 solvers.py:918(<lambda>)
     2680    0.002    0.000    1.049    0.000 cse_main.py:25(preprocess_for_cse)
     2680    0.026    0.000    1.047    0.000 cse_opts.py:38(sub_pre)
81954/77755    0.090    0.000    1.016    0.000 numbers.py:650(__mul__)
     1311    0.003    0.000    1.015    0.001 __init__.py:1267(_log)
8838/4826    0.031    0.000    0.984    0.000 mul.py:521(_expandsums)
     1311    0.002    0.000    0.972    0.001 __init__.py:1288(handle)
     1311    0.005    0.000    0.970    0.001 __init__.py:1320(callHandlers)
    95534    0.805    0.000    0.966    0.000 compatibility.py:109(cmp_to_key)
     2622    0.004    0.000    0.965    0.000 __init__.py:746(handle)
45632/40593    0.118    0.000    0.956    0.000 ikfast.py:279(Pow_eval_subs)
     2622    0.006    0.000    0.944    0.000 __init__.py:849(emit)
6246600/6246483    0.927    0.000    0.929    0.000 {isinstance}
     2622    0.002    0.000    0.904    0.000 __init__.py:723(format)
     2622    0.010    0.000    0.902    0.000 __init__.py:452(format)
   154429    0.088    0.000    0.901    0.000 compatibility.py:118(__lt__)
     2622    0.007    0.000    0.889    0.000 __init__.py:312(getMessage)
    31090    0.035    0.000    0.879    0.000 densearith.py:170(dmp_mul_term)
11698/7510    0.042    0.000    0.867    0.000 mul.py:878(_eval_is_positive)
      462    0.863    0.002    0.863    0.002 euclidtools.py:1134(_dup_zz_gcd_interpolate)
    35257    0.041    0.000    0.859    0.000 ikfast_IKFastSolver.py:407(equal)
    14960    0.006    0.000    0.845    0.000 densearith.py:1705(dmp_quo)
    31868    0.031    0.000    0.843    0.000 expr.py:84(__sub__)
    16869    0.057    0.000    0.825    0.000 polyutils.py:26(_sort_gens)
2936/2611    0.012    0.000    0.823    0.000 expr.py:309(as_ordered_terms)
202640/40070    0.254    0.000    0.818    0.000 densearith.py:812(dmp_mul)
175073/154723    0.251    0.000    0.814    0.000 basic.py:210(compare)
3529/1717    0.012    0.000    0.804    0.000 add.py:296(_eval_is_positive)
7065/5688    0.052    0.000    0.802    0.000 str.py:197(_print_Mul)
  2183064    0.651    0.000    0.795    0.000 densebasic.py:653(dmp_zero_p)
2936/2611    0.090    0.000    0.759    0.000 expr.py:344(as_terms)
        1    0.000    0.000    0.758    0.758 ikfast_IKFastSolver.py:3147(buildEquationsFromPositions)
    78734    0.073    0.000    0.749    0.000 polyclasses.py:146(__init__)
   221037    0.293    0.000    0.748    0.000 numbers.py:396(__eq__)
51348/6181    0.121    0.000    0.744    0.000 ikfast_IKFastSolver.py:9167(isValidSolution)
    69941    0.061    0.000    0.735    0.000 polyoptions.py:689(build_options)
3505/3478    0.009    0.000    0.731    0.000 add.py:282(_eval_is_odd)
     2201    0.004    0.000    0.719    0.000 printer.py:255(_as_ordered_terms)
        1    0.000    0.000    0.719    0.719 ikfast_IKFastSolver.py:3058(buildEquationsFromTwoSides)
25763/21792    0.048    0.000    0.716    0.000 polyclasses.py:234(to_sympy_dict)
     1462    0.014    0.000    0.700    0.000 ikfast_IKFastSolver.py:9384(removecommonexprs)
   340079    0.201    0.000    0.683    0.000 assumptions.py:315(_learn_new_facts)
   392373    0.088    0.000    0.680    0.000 basic.py:886(<lambda>)
    35029    0.317    0.000    0.671    0.000 polyoptions.py:120(__init__)
    49993    0.138    0.000    0.665    0.000 polyutils.py:38(order_key)
     1437    0.002    0.000    0.653    0.000 rationaltools.py:6(together)
  9705082    0.650    0.000    0.650    0.000 {method 'append' of 'list' objects}
18082/1437    0.019    0.000    0.647    0.000 rationaltools.py:57(_together)
  5790255    0.629    0.000    0.629    0.000 basic.py:647(args)
      979    0.012    0.000    0.620    0.001 solvers.py:752(solve_linear)
   949484    0.241    0.000    0.619    0.000 densebasic.py:148(dmp_degree)
    17051    0.015    0.000    0.603    0.000 polyclasses.py:251(from_dict)
11693/7617    0.035    0.000    0.603    0.000 mul.py:903(_eval_is_negative)
      173    0.001    0.000    0.602    0.003 ikfast_AST.py:60(subs)
   410203    0.254    0.000    0.600    0.000 densebasic.py:264(dmp_strip)
     1388    0.010    0.000    0.597    0.000 exprtools.py:366(gcd_terms)
    81230    0.040    0.000    0.591    0.000 expr.py:70(__neg__)
    35822    0.126    0.000    0.587    0.000 simplify.py:23(fraction)
    72476    0.228    0.000    0.585    0.000 mul.py:967(breakup)
147944/51057    0.066    0.000    0.583    0.000 {sum}
     5741    0.008    0.000    0.582    0.000 polytools.py:892(as_expr)
39306/20706    0.021    0.000    0.571    0.000 str.py:23(parenthesize)
230010/33846    0.159    0.000    0.565    0.000 densearith.py:652(dmp_sub)
   376243    0.104    0.000    0.563    0.000 basic.py:1210(matches)
    23703    0.019    0.000    0.559    0.000 polynomialring.py:38(__call__)
262677/40377    0.276    0.000    0.554    0.000 densebasic.py:1014(dmp_to_dict)
       62    0.000    0.000    0.547    0.009 __init__.py:1169(warning)
     3354    0.008    0.000    0.526    0.000 ikfast_IKFastSolver.py:6298(CheckExpressionUnique)
47909/47647    0.097    0.000    0.523    0.000 function.py:443(_eval_expand_mul)
  700/687    0.002    0.000    0.522    0.001 complexes.py:166(eval)
        1    0.001    0.001    0.517    0.517 ikfast_IKFastSolver.py:1483(ComputeConsistentValues)
      734    0.002    0.000    0.503    0.001 function.py:1108(expand)
     2163    0.007    0.000    0.503    0.000 complexes.py:111(eval)
     1388    0.022    0.000    0.487    0.000 exprtools.py:325(_gcd_terms)
     1311    0.002    0.000    0.487    0.000 __init__.py:948(emit)
   327537    0.261    0.000    0.480    0.000 operations.py:57(_new_rawargs)
   340252    0.403    0.000    0.475    0.000 facts.py:821(deduce_all_facts)
    17270    0.037    0.000    0.472    0.000 add.py:517(__neg__)
   536339    0.361    0.000    0.459    0.000 basic.py:82(__new__)
      764    0.451    0.001    0.451    0.001 densetools.py:274(dup_eval)
368222/348543    0.187    0.000    0.435    0.000 {hash}
9352168/9351569    0.413    0.000    0.414    0.000 {len}
    52926    0.027    0.000    0.409    0.000 expr.py:75(__add__)
426860/20492    0.235    0.000    0.409    0.000 ikfast_IKFastSolver.py:839(codeComplexity)
628773/451936    0.109    0.000    0.401    0.000 {cmp}
74421/74174    0.163    0.000    0.398    0.000 function.py:467(_eval_expand_log)
    11396    0.024    0.000    0.388    0.000 expr.py:131(__complex__)
   342809    0.263    0.000    0.385    0.000 basic.py:399(__ne__)
19196/15981    0.010    0.000    0.382    0.000 str.py:231(<lambda>)
     1670    0.003    0.000    0.382    0.000 ikfast_IKFastSolver.py:6781(_SubstituteGlobalSymbols)
14408/4240    0.066    0.000    0.380    0.000 ikfast_generator_cpp.py:1924(_WriteExprCode)
    12484    0.006    0.000    0.378    0.000 densebasic.py:1636(dmp_list_terms)
    11673    0.008    0.000    0.376    0.000 polyclasses.py:291(terms)
     2266    0.005    0.000    0.374    0.000 basic.py:471(__repr__)
392837/89570    0.073    0.000    0.374    0.000 ikfast_IKFastSolver.py:843(<genexpr>)
12166/7229    0.050    0.000    0.373    0.000 expr.py:12(sort_key)
179931/12484    0.175    0.000    0.371    0.000 densebasic.py:1617(_rec_list_terms)
      952    0.003    0.000    0.368    0.000 __init__.py:1157(info)
     5660    0.003    0.000    0.362    0.000 basic.py:1085(match)
74421/74174    0.150    0.000    0.356    0.000 function.py:407(_eval_expand_basic)
   538038    0.200    0.000    0.347    0.000 basic.py:675(iter_basic_args)
 3261/512    0.026    0.000    0.347    0.001 operations.py:162(_matches_commutative)
   151335    0.156    0.000    0.344    0.000 mul.py:783(as_coeff_Mul)
      532    0.002    0.000    0.341    0.001 basic.py:691(as_poly)
32143/31594    0.055    0.000    0.337    0.000 power.py:616(as_numer_denom)
   110834    0.175    0.000    0.331    0.000 core.py:220(__cmp__)
66921/66676    0.132    0.000    0.330    0.000 function.py:419(_eval_expand_power_exp)
     7065    0.014    0.000    0.322    0.000 expr.py:282(as_ordered_factors)
   276919    0.120    0.000    0.321    0.000 numbers.py:448(__hash__)
64183/48748    0.094    0.000    0.317    0.000 evalf.py:953(evalf)
66935/66714    0.129    0.000    0.311    0.000 function.py:431(_eval_expand_power_base)
   412726    0.281    0.000    0.304    0.000 polyoptions.py:60(getter)
111309/72601    0.120    0.000    0.296    0.000 expr.py:176(is_number)
  1767366    0.295    0.000    0.295    0.000 {method 'update' of 'dict' objects}
    19496    0.008    0.000    0.289    0.000 expr.py:307(<lambda>)
     6831    0.061    0.000    0.287    0.000 densebasic.py:1275(dmp_multi_deflate)
 2670/976    0.003    0.000    0.278    0.000 mul.py:667(matches)
  2169813    0.278    0.000    0.278    0.000 basic.py:622(func)
      946    0.004    0.000    0.270    0.000 ikfast_AST.py:93(checkValidSolution)
5909/5678    0.009    0.000    0.265    0.000 str.py:118(_print_Function)
3512/3511    0.003    0.000    0.263    0.000 add.py:289(_eval_is_irrational)
 4898/963    0.007    0.000    0.263    0.000 expr.py:1831(diff)
 4898/963    0.038    0.000    0.258    0.000 function.py:630(__new__)
5909/5678    0.006    0.000    0.254    0.000 str.py:29(stringify)
      108    0.001    0.000    0.251    0.002 polytools.py:178(_from_poly)
      106    0.000    0.000    0.250    0.002 ikfast_generator_cpp.py:1838(writeEquations)
  3056286    0.250    0.000    0.250    0.000 {method 'iteritems' of 'dict' objects}
      166    0.005    0.000    0.250    0.002 power.py:502(as_real_imag)
9417/8250    0.006    0.000    0.245    0.000 misc.py:5(default_sort_key)
267623/219443    0.058    0.000    0.243    0.000 {all}
27337/26541    0.038    0.000    0.242    0.000 numbers.py:340(__mul__)
    56014    0.090    0.000    0.242    0.000 numbers.py:770(__ne__)
       32    0.000    0.000    0.240    0.007 polytools.py:3944(div)
    18157    0.081    0.000    0.240    0.000 polyoptions.py:256(preprocess)
   389035    0.158    0.000    0.233    0.000 operations.py:264(make_args)
    74/64    0.000    0.000    0.233    0.004 trigonometric.py:947(eval)
    57651    0.041    0.000    0.230    0.000 function.py:1446(isneg)
   252284    0.119    0.000    0.228    0.000 exprtools.py:13(decompose_power)
    21579    0.063    0.000    0.228    0.000 densearith.py:1336(dup_rr_div)
   114762    0.148    0.000    0.223    0.000 densearith.py:774(dup_mul)
    83561    0.129    0.000    0.221    0.000 densebasic.py:865(dup_from_dict)
    63401    0.081    0.000    0.221    0.000 function.py:455(_eval_expand_multinomial)
    97450    0.146    0.000    0.206    0.000 printer.py:190(__init__)
   186280    0.138    0.000    0.203    0.000 power.py:243(as_base_exp)
   107274    0.048    0.000    0.203    0.000 symbol.py:35(__new__)
2790/2326    0.008    0.000    0.202    0.000 matrices.py:77(__init__)
31034/31030    0.022    0.000    0.201    0.000 densetools.py:571(dup_content)
354146/352652    0.038    0.000    0.200    0.000 {min}
    14165    0.042    0.000    0.200    0.000 domain.py:357(poly_ring)
   163957    0.066    0.000    0.197    0.000 simplify.py:941(powdenest)
    20230    0.046    0.000    0.196    0.000 symbol.py:72(sort_key)
  2009673    0.188    0.000    0.188    0.000 basic.py:204(_hashable_content)
   448928    0.187    0.000    0.187    0.000 {zip}
   623342    0.179    0.000    0.181    0.000 numbers.py:989(__new__)
71689/67942    0.068    0.000    0.177    0.000 operations.py:252(_eval_template_is_attr)
    25329    0.019    0.000    0.177    0.000 numbers.py:1042(__sub__)
  1323160    0.175    0.000    0.175    0.000 symbol.py:69(_hashable_content)
    42787    0.023    0.000    0.174    0.000 pythonrationalfield.py:26(from_sympy)
      384    0.001    0.000    0.171    0.000 matrices.py:407(__mul__)
      378    0.001    0.000    0.170    0.000 matrices.py:2543(matrix_multiply)
    78081    0.066    0.000    0.170    0.000 precedence.py:57(precedence)
50818/50234    0.045    0.000    0.169    0.000 numbers.py:1028(__add__)
16785/15047    0.004    0.000    0.168    0.000 {method 'join' of 'str' objects}
   117110    0.090    0.000    0.167    0.000 numbers.py:1091(__ne__)
128132/128130    0.091    0.000    0.166    0.000 densearith.py:615(dup_sub)
  2366336    0.166    0.000    0.166    0.000 expr.py:1842(_eval_expand_basic)
  2366336    0.166    0.000    0.166    0.000 expr.py:1857(_eval_expand_log)
  1165263    0.165    0.000    0.165    0.000 power.py:91(base)
        3    0.000    0.000    0.163    0.054 matrices.py:400(subs)
       44    0.000    0.000    0.163    0.004 matrices.py:401(<lambda>)
    16363    0.004    0.000    0.162    0.000 function.py:179(<genexpr>)
    95534    0.161    0.000    0.161    0.000 compatibility.py:115(K)
    14208    0.025    0.000    0.158    0.000 polynomialring.py:20(__init__)
     2451    0.002    0.000    0.157    0.000 matrices.py:2583(<lambda>)
1358/1350    0.003    0.000    0.156    0.000 {__import__}
    21660    0.036    0.000    0.155    0.000 numbers.py:294(__new__)
    55867    0.033    0.000    0.155    0.000 pythonrationaltype.py:26(__init__)
     2829    0.007    0.000    0.154    0.000 cse_main.py:119(insert)
   458090    0.097    0.000    0.153    0.000 {method 'setdefault' of 'dict' objects}
  1193272    0.150    0.000    0.150    0.000 power.py:95(exp)
218050/190110    0.061    0.000    0.148    0.000 densearith.py:571(dmp_add)
264593/169665    0.063    0.000    0.146    0.000 expr.py:197(<genexpr>)
       85    0.000    0.000    0.142    0.002 simplify.py:705(trigsimp)
      135    0.009    0.000    0.141    0.001 polynomials.py:46(polyroots)
     1116    0.005    0.000    0.140    0.000 euclidtools.py:1256(_dmp_zz_gcd_interpolate)
43478/2856    0.033    0.000    0.140    0.000 densetools.py:602(dmp_ground_content)
   224/16    0.002    0.000    0.138    0.009 simplify.py:751(trigsimp_nonrecursive)
    60054    0.032    0.000    0.136    0.000 numbers.py:162(__float__)
   971763    0.135    0.000    0.135    0.000 {method 'items' of 'dict' objects}
       80    0.000    0.000    0.135    0.002 ikfast_IKFastSolver.py:9340(AreAllImaginaryByEval)
      951    0.002    0.000    0.132    0.000 densetools.py:724(dmp_ground_extract)
26294/26168    0.014    0.000    0.131    0.000 expr.py:102(__pow__)
        1    0.046    0.046    0.131    0.131 __init__.py:171(InitializeFromParser)
     5199    0.012    0.000    0.131    0.000 numbers.py:436(__le__)
    20885    0.016    0.000    0.131    0.000 libmpf.py:465(from_rational)
   116659    0.011    0.000    0.130    0.000 {abs}
18927/18847    0.026    0.000    0.130    0.000 numbers.py:678(__add__)
      855    0.003    0.000    0.128    0.000 polytools.py:3432(__eq__)
    82634    0.057    0.000    0.128    0.000 numbers.py:319(_new)
14125/7865    0.004    0.000    0.128    0.000 expr.py:41(<genexpr>)
    72274    0.059    0.000    0.127    0.000 function.py:224(is_commutative)
  751/748    0.002    0.000    0.127    0.000 add.py:211(_eval_derivative)
     2832    0.004    0.000    0.126    0.000 relational.py:119(__new__)
     4036    0.003    0.000    0.126    0.000 exprtools.py:276(quo)
9241/5033    0.007    0.000    0.126    0.000 expr.py:16(key_inner)
     2538    0.001    0.000    0.125    0.000 relational.py:19(Eq)
    31829    0.017    0.000    0.125    0.000 core.py:252(__gt__)
        2    0.000    0.000    0.124    0.062 ikfast_IKFastSolver.py:2299(iterateThreeIntersectingAxes)
      417    0.002    0.000    0.123    0.000 ikfast_generator_cpp.py:1771(WriteDictEquations)
     4060    0.006    0.000    0.122    0.000 densetools.py:697(dup_extract)
     5474    0.010    0.000    0.121    0.000 basic.py:789(_subs_dict)
   206749    0.053    0.000    0.120    0.000 {method 'add' of 'set' objects}
       54    0.000    0.000    0.119    0.002 polytools.py:3312(__add__)
    82923    0.021    0.000    0.118    0.000 iterables.py:204(next)
     1908    0.005    0.000    0.118    0.000 densetools.py:298(dmp_eval)
  1906908    0.117    0.000    0.117    0.000 expr.py:1845(_eval_expand_power_exp)
   107302    0.082    0.000    0.117    0.000 densebasic.py:964(dup_to_dict)
10230/9791    0.013    0.000    0.116    0.000 power.py:74(__new__)
  1915869    0.116    0.000    0.116    0.000 expr.py:1848(_eval_expand_power_base)
  1829567    0.116    0.000    0.116    0.000 expr.py:1854(_eval_expand_multinomial)
    42454    0.041    0.000    0.116    0.000 pythonrationalfield.py:22(to_sympy)
   200663    0.113    0.000    0.115    0.000 {method 'index' of 'list' objects}
   226459    0.061    0.000    0.115    0.000 numbers.py:201(as_coeff_mul)
    42010    0.037    0.000    0.114    0.000 symbol.py:127(__new__)
     2610    0.015    0.000    0.113    0.000 ikfast_IKFastSolver.py:157(__init__)
 2940/482    0.007    0.000    0.111    0.000 expr.py:240(conjugate)
    18377    0.042    0.000    0.110    0.000 constructor.py:9(_construct_simple)
   602280    0.110    0.000    0.110    0.000 {built-in method __new__ of type object at 0x5653c9d8abc0}
  1733617    0.110    0.000    0.110    0.000 expr.py:1851(_eval_expand_mul)
     4858    0.003    0.000    0.108    0.000 {reduce}
31276/31272    0.024    0.000    0.107    0.000 domain.py:69(convert)
       39    0.014    0.000    0.107    0.003 __init__.py:1(<module>)
      297    0.001    0.000    0.106    0.000 __init__.py:1145(debug)
 2046/411    0.001    0.000    0.105    0.000 complexes.py:334(eval)
  813/411    0.002    0.000    0.104    0.000 mul.py:1188(_eval_conjugate)
      108    0.002    0.000    0.103    0.001 ikfast_generator_cpp.py:1795(_WriteDictEquations)
     8829    0.003    0.000    0.102    0.000 matrices.py:2585(<lambda>)
       18    0.000    0.000    0.101    0.006 ikfast_IKFastSolver.py:400(multiplyMatrix)
   291587    0.101    0.000    0.101    0.000 densebasic.py:677(dmp_zero)
   503407    0.082    0.000    0.101    0.000 densebasic.py:131(dup_degree)
320244/82923    0.081    0.000    0.097    0.000 iterables.py:170(_preorder_traversal)
        2    0.000    0.000    0.095    0.048 ccompiler.py:875(spawn)
        2    0.000    0.000    0.095    0.048 spawn.py:18(spawn)
        2    0.000    0.000    0.095    0.048 spawn.py:116(_spawn_posix)
      496    0.001    0.000    0.095    0.000 expr.py:72(__abs__)
    12204    0.026    0.000    0.093    0.000 ctx_mp_python.py:47(__new__)
     3356    0.009    0.000    0.093    0.000 power.py:648(matches)
     4325    0.009    0.000    0.093    0.000 polyclasses.py:256(from_monoms_coeffs)
        2    0.091    0.045    0.091    0.045 {posix.waitpid}
    26675    0.040    0.000    0.090    0.000 libmpf.py:924(mpf_div)
59509/7333    0.019    0.000    0.089    0.000 densearith.py:287(dmp_mul_ground)
     8200    0.011    0.000    0.089    0.000 exprtools.py:73(as_expr)
3811/3581    0.012    0.000    0.088    0.000 evalf.py:346(evalf_mul)
    11378    0.007    0.000    0.087    0.000 evalf.py:917(<lambda>)
43951/43625    0.016    0.000    0.087    0.000 mul.py:819(<lambda>)
  1026968    0.086    0.000    0.086    0.000 {method 'get' of 'dict' objects}
    14208    0.010    0.000    0.085    0.000 polyclasses.py:212(zero)
        1    0.000    0.000    0.084    0.084 ikfast_IKFastSolver.py:3199(buildEquationsFromRotation)
    68641    0.059    0.000    0.083    0.000 libmpf.py:64(dps_to_prec)
   249416    0.062    0.000    0.083    0.000 densebasic.py:238(dup_strip)
        2    0.004    0.002    0.082    0.041 __init__.py:13(<module>)
    44034    0.031    0.000    0.082    0.000 symbol.py:56(__new_stage2__)
    29894    0.021    0.000    0.081    0.000 precedence.py:35(precedence_Mul)
        2    0.000    0.000    0.080    0.040 inversekinematics.py:258(__init__)
        1    0.000    0.000    0.080    0.080 inversekinematics.py:1309(<lambda>)
        1    0.010    0.010    0.080    0.080 ikfast.py:179(<module>)
11187/4915    0.013    0.000    0.077    0.000 basic.py:835(__contains__)
    28858    0.020    0.000    0.077    0.000 basic.py:1050(matches)
    31090    0.032    0.000    0.076    0.000 densearith.py:47(dmp_add_term)
      852    0.001    0.000    0.076    0.000 densearith.py:1546(dup_div)
   108562    0.034    0.000    0.075    0.000 libmpf.py:330(from_int)
    33709    0.039    0.000    0.075    0.000 libmpf.py:291(from_man_exp)
   157/74    0.004    0.000    0.075    0.001 simplify.py:174(collect)
    17920    0.008    0.000    0.075    0.000 {math.isinf}
   498705    0.074    0.000    0.074    0.000 expr.py:963(as_base_exp)
     1124    0.001    0.000    0.074    0.000 ikfast_IKFastSolver.py:1014(checkpow)
     5617    0.008    0.000    0.073    0.000 mul.py:1001(ndiv)
   521565    0.072    0.000    0.072    0.000 function.py:131(func)
     2217    0.011    0.000    0.071    0.000 polytools.py:355(_unify)
     1812    0.008    0.000    0.071    0.000 function.py:236(_eval_evalf)
    32951    0.071    0.000    0.071    0.000 densearith.py:267(dup_mul_ground)
     4848    0.007    0.000    0.070    0.000 str.py:362(_print_Float)
     6546    0.007    0.000    0.070    0.000 expr.py:115(__rdiv__)
    18146    0.010    0.000    0.069    0.000 core.py:247(__lt__)
     1337    0.002    0.000    0.069    0.000 function.py:1271(expand_mul)
     9134    0.010    0.000    0.067    0.000 mul.py:991(rejoin)
    40666    0.066    0.000    0.066    0.000 facts.py:846(x_new_facts)
    26264    0.033    0.000    0.066    0.000 polytools.py:100(new)
5019/4966    0.009    0.000    0.065    0.000 str.py:336(_print_Pow)
  785/782    0.004    0.000    0.064    0.000 mul.py:649(_eval_derivative)
        1    0.000    0.000    0.064    0.064 __init__.py:15(loadlatest)
        1    0.000    0.000    0.064    0.064 __init__.py:18(_loadversion)
        1    0.023    0.023    0.064    0.064 __init__.py:22(<module>)
      166    0.001    0.000    0.064    0.000 polytools.py:5327(poly)
4398/3700    0.009    0.000    0.064    0.000 evalf.py:315(evalf_add)
        3    0.001    0.000    0.063    0.021 __init__.py:10(<module>)
     4714    0.004    0.000    0.063    0.000 euclidtools.py:1476(dup_inner_gcd)
     4036    0.010    0.000    0.063    0.000 exprtools.py:264(mul)
      201    0.001    0.000    0.062    0.000 evalf.py:1063(_to_mpmath)
        1    0.000    0.000    0.061    0.061 ccompiler.py:510(compile)
        1    0.000    0.000    0.061    0.061 unixccompiler.py:115(_compile)
18838/2754    0.008    0.000    0.061    0.000 densetools.py:489(dmp_ground_trunc)
      749    0.001    0.000    0.061    0.000 polytools.py:1701(TC)
     4036    0.005    0.000    0.060    0.000 exprtools.py:273(inv)
3529/3521    0.008    0.000    0.060    0.000 add.py:315(_eval_is_negative)
  332/166    0.002    0.000    0.060    0.000 polytools.py:5342(_poly)
      945    0.003    0.000    0.059    0.000 mul.py:399(_eval_power)
     7277    0.010    0.000    0.059    0.000 mul.py:505(as_coeff_mul)
      111    0.000    0.000    0.059    0.001 add.py:424(_eval_conjugate)
    34208    0.045    0.000    0.058    0.000 polyoptions.py:177(clone)
    20969    0.007    0.000    0.057    0.000 {_functools.reduce}
     4848    0.017    0.000    0.057    0.000 libmpf.py:1179(to_str)
    24166    0.056    0.000    0.056    0.000 densearith.py:149(dup_mul_term)
     9566    0.007    0.000    0.056    0.000 ctx_mp_python.py:80(mpf_convert_arg)
     8395    0.011    0.000    0.056    0.000 mul.py:1048(<genexpr>)
    45600    0.030    0.000    0.055    0.000 numbers.py:907(as_numer_denom)
     9439    0.004    0.000    0.054    0.000 numbers.py:739(_as_mpf_val)
    17919    0.006    0.000    0.053    0.000 {math.isnan}
       32    0.000    0.000    0.053    0.002 matrices.py:2092(berkowitz_det)
      792    0.002    0.000    0.052    0.000 polynomialring.py:54(from_sympy)
    12933    0.010    0.000    0.052    0.000 numbers.py:1063(__rmul__)
    55279    0.044    0.000    0.052    0.000 libmpf.py:858(python_mpf_mul)
45733/3659    0.015    0.000    0.052    0.000 densearith.py:339(dmp_quo_ground)
     7499    0.004    0.000    0.052    0.000 expr.py:79(__radd__)
   169708    0.051    0.000    0.051    0.000 libmpf.py:511(mpf_eq)
        3    0.002    0.001    0.051    0.017 __init__.py:15(<module>)
    27564    0.019    0.000    0.051    0.000 numbers.py:158(_as_mpf_op)
    31387    0.023    0.000    0.050    0.000 libmpf.py:676(mpf_add)
   578715    0.050    0.000    0.050    0.000 {iter}
    74583    0.021    0.000    0.050    0.000 libintmath.py:83(python_bitcount)
     6378    0.002    0.000    0.050    0.000 matrices.py:2584(<lambda>)
      128    0.000    0.000    0.050    0.000 ikfast_IKFastSolver.py:8090(<genexpr>)
        8    0.004    0.001    0.050    0.006 __init__.py:2(<module>)
        1    0.001    0.001    0.050    0.050 ikfast_IKFastSolver.py:437(forwardKinematicsChain)
    90644    0.050    0.000    0.050    0.000 libmpf.py:208(_normalize1)
       54    0.000    0.000    0.049    0.001 polytools.py:1214(add)
      271    0.000    0.000    0.049    0.000 polytools.py:867(as_dict)
   536666    0.048    0.000    0.048    0.000 {method 'extend' of 'list' objects}
  943/687    0.002    0.000    0.047    0.000 trigonometric.py:284(_eval_expand_trig)
     9842    0.013    0.000    0.047    0.000 libmpf.py:410(from_float)
    14208    0.007    0.000    0.047    0.000 polyclasses.py:216(one)
   372256    0.047    0.000    0.047    0.000 {method 'pop' of 'list' objects}
      215    0.000    0.000    0.046    0.000 polytools.py:276(args)
       32    0.001    0.000    0.046    0.001 matrices.py:2008(berkowitz)
  952/696    0.002    0.000    0.046    0.000 trigonometric.py:506(_eval_expand_trig)
     3522    0.002    0.000    0.045    0.000 add.py:276(<lambda>)
     3351    0.002    0.000    0.045    0.000 ikfast_IKFastSolver.py:9451(<genexpr>)
    10566    0.042    0.000    0.044    0.000 densetools.py:440(dup_trunc)
     1000    0.001    0.000    0.044    0.000 polynomials.py:156(<lambda>)
5523/5396    0.009    0.000    0.044    0.000 numbers.py:361(__add__)
    14756    0.015    0.000    0.044    0.000 exprtools.py:220(__init__)
     1000    0.004    0.000    0.044    0.000 polynomials.py:9(polyval)
    18487    0.006    0.000    0.042    0.000 basic.py:1223(__contains__)
    57079    0.024    0.000    0.042    0.000 numbers.py:982(_as_mpf_val)
11693/11690    0.010    0.000    0.041    0.000 mul.py:869(_eval_is_irrational)
     2217    0.003    0.000    0.041    0.000 domain.py:191(unify)
  575/547    0.001    0.000    0.041    0.000 power.py:128(_eval_is_positive)
      694    0.002    0.000    0.041    0.000 ikfast_IKFastSolver.py:618(has)
     2784    0.002    0.000    0.040    0.000 ctx_mp_python.py:510(__div__)
    27077    0.040    0.000    0.040    0.000 densearith.py:310(dup_quo_ground)
      318    0.001    0.000    0.040    0.000 expr.py:136(__lt__)
   200506    0.040    0.000    0.040    0.000 compatibility.py:116(__init__)
      474    0.003    0.000    0.040    0.000 ikfast_IKFastSolver.py:250(convertRealToRational)
        3    0.000    0.000    0.039    0.013 ikfast_AST.py:183(generate)
        3    0.000    0.000    0.039    0.013 ikfast_generator_cpp.py:1327(generatePolynomialRoots)
      792    0.001    0.000    0.039    0.000 polyutils.py:278(dict_from_expr)
    10865    0.009    0.000    0.039    0.000 numbers.py:1035(__radd__)
     1906    0.003    0.000    0.039    0.000 mul.py:740(_combine_inverse)
    60276    0.026    0.000    0.039    0.000 libmpf.py:429(to_float)
   630522    0.038    0.000    0.038    0.000 polyoptions.py:37(postprocess)
     2784    0.006    0.000    0.038    0.000 libmpc.py:194(mpc_div)
    29668    0.022    0.000    0.038    0.000 densebasic.py:758(dmp_ground)
       43    0.000    0.000    0.038    0.001 polytools.py:477(_eval_subs)
     1388    0.003    0.000    0.038    0.000 exprtools.py:261(as_expr)
     4848    0.017    0.000    0.038    0.000 libmpf.py:1127(to_digits_exp)
     4931    0.014    0.000    0.037    0.000 numbers.py:848(gcd)
    50292    0.037    0.000    0.037    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
      389    0.000    0.000    0.037    0.000 densetools.py:637(dup_primitive)
   145239    0.028    0.000    0.037    0.000 function.py:226(<genexpr>)
     2648    0.004    0.000    0.037    0.000 exprtools.py:287(gcd)
45726/1902    0.017    0.000    0.037    0.000 densearith.py:1780(dmp_max_norm)
     1355    0.001    0.000    0.036    0.000 pythonintegerring.py:101(sqrt)
      250    0.001    0.000    0.036    0.000 add.py:497(_eval_expand_trig)
     2362    0.006    0.000    0.036    0.000 libintmath.py:271(sqrtrem_python)
  329/324    0.001    0.000    0.036    0.000 power.py:248(_eval_conjugate)
     1355    0.001    0.000    0.035    0.000 groundtypes.py:77(python_sqrt)
   340253    0.035    0.000    0.035    0.000 symbol.py:96(is_number)
    11396    0.011    0.000    0.035    0.000 expr.py:271(key)
    44268    0.028    0.000    0.034    0.000 exprtools.py:60(__init__)
     1421    0.001    0.000    0.034    0.000 libintmath.py:291(isqrt_python)
        1    0.000    0.000    0.034    0.034 ccompiler.py:682(link_shared_object)
        1    0.000    0.000    0.034    0.034 unixccompiler.py:152(link)
      509    0.001    0.000    0.034    0.000 constructor.py:14(<lambda>)
    57164    0.019    0.000    0.034    0.000 constructor.py:111(<genexpr>)
  538/404    0.001    0.000    0.034    0.000 ikfast_IKFastSolver.py:261(ConvertRealToRationalEquation)
    34901    0.022    0.000    0.033    0.000 compatibility.py:11(iterable)
    11690    0.013    0.000    0.033    0.000 mul.py:846(_eval_is_imaginary)
        1    0.002    0.002    0.033    0.033 __init__.py:23(<module>)
        1    0.001    0.001    0.032    0.032 __init__.py:106(<module>)
     8929    0.006    0.000    0.032    0.000 simplify.py:116(separate)
      290    0.000    0.000    0.032    0.000 ikfast_IKFastSolver.py:7392(<genexpr>)
32439/32415    0.005    0.000    0.032    0.000 ikfast_IKFastSolver.py:846(<genexpr>)
      397    0.001    0.000    0.032    0.000 ikfast_AST.py:43(__init__)
      363    0.001    0.000    0.032    0.000 re.py:230(_compile)
     1311    0.002    0.000    0.031    0.000 __init__.py:1254(makeRecord)
 1059/509    0.004    0.000    0.031    0.000 ask.py:46(ask)
      101    0.000    0.000    0.031    0.000 re.py:192(compile)
18515/6510    0.019    0.000    0.031    0.000 basic.py:580(free_symbols)
      289    0.000    0.000    0.031    0.000 ikfast_IKFastSolver.py:6442(<genexpr>)
      100    0.000    0.000    0.031    0.000 sre_compile.py:567(compile)
    83589    0.013    0.000    0.031    0.000 {method 'difference' of 'set' objects}
      597    0.003    0.000    0.030    0.000 mul.py:629(_eval_expand_trig)
    43698    0.015    0.000    0.030    0.000 polyclasses.py:905(__nonzero__)
      150    0.000    0.000    0.030    0.000 polyclasses.py:939(_parse)
    63227    0.014    0.000    0.030    0.000 cse_opts.py:9(assumed)
    77412    0.030    0.000    0.030    0.000 {_bisect.bisect}
     1311    0.015    0.000    0.029    0.000 __init__.py:237(__init__)
    26416    0.029    0.000    0.029    0.000 libmpf.py:153(_normalize)
     4183    0.002    0.000    0.029    0.000 str.py:232(<lambda>)
      678    0.020    0.000    0.029    0.000 multinomial.py:22(multinomial_coefficients)
     1506    0.001    0.000    0.029    0.000 solvers.py:910(<lambda>)
78602/26084    0.024    0.000    0.029    0.000 densearith.py:511(dmp_neg)
11688/11683    0.005    0.000    0.028    0.000 mul.py:818(<lambda>)
      332    0.002    0.000    0.028    0.000 polytools.py:544(reorder)
    42345    0.023    0.000    0.028    0.000 function.py:1540(<genexpr>)
        2    0.000    0.000    0.028    0.014 __init__.py:3125(_call_aside)
        1    0.000    0.000    0.028    0.028 __init__.py:3140(_initialize_master_working_set)
      956    0.001    0.000    0.028    0.000 densetools.py:665(dmp_ground_primitive)
     4557    0.007    0.000    0.028    0.000 simplify.py:390(parse_expression)
131881/131815    0.020    0.000    0.027    0.000 densearith.py:534(dup_add)
    12409    0.007    0.000    0.027    0.000 numbers.py:647(__neg__)
        1    0.000    0.000    0.027    0.027 expr.py:1(<module>)
    31258    0.015    0.000    0.027    0.000 pythonintegerring.py:23(to_sympy)
       80    0.000    0.000    0.027    0.000 ikfast_AST.py:534(generate)
       80    0.004    0.000    0.027    0.000 ikfast_generator_cpp.py:1714(generateStoreSolution)
    14843    0.010    0.000    0.027    0.000 matrices.py:227(__getitem__)
     3784    0.004    0.000    0.026    0.000 ctx_mp_python.py:491(__mul__)
    13223    0.003    0.000    0.026    0.000 libmpf.py:771(mpf_sub)
       68    0.003    0.000    0.026    0.000 ikfast_IKFastSolver.py:9467(det_bareis)
        2    0.000    0.000    0.026    0.013 ikfast_AST.py:161(subs)
     2622    0.004    0.000    0.025    0.000 __init__.py:838(flush)
        1    0.000    0.000    0.025    0.025 add_newdocs.py:10(<module>)
      176    0.024    0.000    0.025    0.000 libintmath.py:223(isqrt_fast_python)
3980/3973    0.002    0.000    0.025    0.000 add.py:280(<lambda>)
    12108    0.012    0.000    0.025    0.000 exprtools.py:101(mul)
    11688    0.009    0.000    0.024    0.000 mul.py:926(_eval_is_odd)
     1576    0.004    0.000    0.024    0.000 add.py:527(primitive)
     2670    0.002    0.000    0.024    0.000 mul.py:659(_matches_simple)
 1059/509    0.001    0.000    0.024    0.000 assume.py:83(_eval_ask)
      707    0.000    0.000    0.023    0.000 expr.py:97(__rmul__)
     4564    0.002    0.000    0.023    0.000 polyclasses.py:272(convert)
   198682    0.023    0.000    0.023    0.000 numbers.py:288(_as_mpf_val)
     2668    0.002    0.000    0.023    0.000 numbers.py:1049(__rsub__)
    11396    0.015    0.000    0.023    0.000 expr.py:260(neg)
 1059/509    0.006    0.000    0.023    0.000 assume.py:132(eval)
       62    0.000    0.000    0.023    0.000 __init__.py:668(add_entry)
       72    0.000    0.000    0.023    0.000 ikfast_IKFastSolver.py:7130(<genexpr>)
      358    0.002    0.000    0.022    0.000 add.py:227(_combine_inverse)
      207    0.000    0.000    0.022    0.000 ikfast_IKFastSolver.py:7433(<genexpr>)
   162974    0.022    0.000    0.022    0.000 {method 'copy' of 'dict' objects}
   675/33    0.001    0.000    0.022    0.001 ikfast_IKFastSolver.py:2438(RoundEquationTerms)
7926/6055    0.008    0.000    0.022    0.000 densearith.py:898(dmp_sqr)
     3084    0.002    0.000    0.022    0.000 expr.py:88(__rsub__)
    40803    0.014    0.000    0.021    0.000 basic.py:882(_match)
    20493    0.011    0.000    0.021    0.000 densebasic.py:1381(dmp_inflate)
8006/7027    0.008    0.000    0.021    0.000 matrices.py:276(__setitem__)
    12019    0.015    0.000    0.021    0.000 add.py:191(as_coeff_add)
    90490    0.021    0.000    0.021    0.000 expr.py:1012(as_coeff_add)
    24166    0.020    0.000    0.021    0.000 densearith.py:17(dup_add_term)
     1903    0.005    0.000    0.021    0.000 ikfast_IKFastSolver.py:6794(_AddToGlobalSymbols)
3551/3478    0.008    0.000    0.021    0.000 numbers.py:523(__new__)
     6696    0.003    0.000    0.021    0.000 evalf.py:918(<lambda>)
    14423    0.014    0.000    0.020    0.000 densearith.py:857(dup_sqr)
      284    0.002    0.000    0.020    0.000 __init__.py:2098(find_on_path)
   211494    0.020    0.000    0.020    0.000 numbers.py:197(is_number)
     4933    0.008    0.000    0.020    0.000 numbers.py:410(__ne__)
        1    0.000    0.000    0.020    0.020 type_check.py:3(<module>)
 4688/181    0.003    0.000    0.020    0.000 densebasic.py:508(dmp_convert)
     1604    0.001    0.000    0.020    0.000 evalf.py:141(evalf_abs)
   316889    0.020    0.000    0.020    0.000 {method 'iterkeys' of 'dict' objects}
    35029    0.019    0.000    0.020    0.000 polyoptions.py:443(postprocess)
     4036    0.013    0.000    0.020    0.000 exprtools.py:76(normal)
    25528    0.006    0.000    0.019    0.000 densearith.py:1760(dup_max_norm)
     2916    0.003    0.000    0.019    0.000 function.py:146(__contains__)
     3784    0.002    0.000    0.019    0.000 ctx_mp_python.py:477(__sub__)
      100    0.000    0.000    0.019    0.000 sre_parse.py:706(parse)
      191    0.000    0.000    0.019    0.000 matrices.py:386(__rmul__)
       58    0.000    0.000    0.019    0.000 fractionfield.py:50(to_sympy)
  406/100    0.001    0.000    0.019    0.000 sre_parse.py:317(_parse_sub)
    79571    0.018    0.000    0.018    0.000 {method 'insert' of 'list' objects}
    24166    0.018    0.000    0.018    0.000 ring.py:15(exquo)
  567/106    0.007    0.000    0.018    0.000 sre_parse.py:395(_parse)
       92    0.000    0.000    0.018    0.000 ikfast_IKFastSolver.py:881(sortComplexity)
        2    0.000    0.000    0.018    0.009 ikfast_AST.py:200(getPresetCheckForZeros)
     2784    0.003    0.000    0.018    0.000 libmpc.py:145(mpc_mul)
       55    0.000    0.000    0.018    0.000 trigonometric.py:584(eval)
     1604    0.001    0.000    0.018    0.000 evalf.py:120(get_abs)
   107353    0.017    0.000    0.018    0.000 polyoptions.py:267(<genexpr>)
      813    0.000    0.000    0.018    0.000 ikfast_IKFastSolver.py:884(<lambda>)
     3124    0.005    0.000    0.018    0.000 iterables.py:435(numbered_symbols)
    15103    0.003    0.000    0.018    0.000 matrices.py:104(<lambda>)
        1    0.000    0.000    0.017    0.017 inversereachability.py:46(<module>)
     1402    0.002    0.000    0.017    0.000 numbers.py:334(_eval_is_negative)
    38647    0.013    0.000    0.017    0.000 numbers.py:176(sort_key)
     6611    0.006    0.000    0.017    0.000 numbers.py:337(__neg__)
    40918    0.011    0.000    0.017    0.000 densebasic.py:781(dmp_zeros)
        1    0.001    0.001    0.017    0.017 __init__.py:126(<module>)
    83826    0.017    0.000    0.017    0.000 {method 'write' of 'cStringIO.StringO' objects}
   165642    0.016    0.000    0.016    0.000 {method 'pop' of 'dict' objects}
     5281    0.004    0.000    0.016    0.000 ctx_mp_python.py:167(_cmp)
    35310    0.005    0.000    0.016    0.000 operations.py:139(<genexpr>)
      500    0.001    0.000    0.016    0.000 expr.py:124(__float__)
     3784    0.002    0.000    0.016    0.000 libmpc.py:96(mpc_sub)
        8    0.000    0.000    0.016    0.002 ikfast_IKFastSolver.py:305(RoundMatrix)
     1375    0.001    0.000    0.016    0.000 matrices.py:389(<lambda>)
      626    0.002    0.000    0.016    0.000 numbers.py:424(__lt__)
     1236    0.002    0.000    0.016    0.000 numbers.py:331(_eval_is_positive)
      908    0.004    0.000    0.016    0.000 matrices.py:929(submatrix)
      289    0.000    0.000    0.016    0.000 sets.py:417(Mul)
   108685    0.016    0.000    0.016    0.000 str.py:434(_print_Symbol)
        1    0.000    0.000    0.016    0.016 mul.py:1(<module>)
    11690    0.011    0.000    0.015    0.000 mul.py:824(_eval_is_real)
     2638    0.003    0.000    0.015    0.000 numbers.py:284(num)
      289    0.001    0.000    0.015    0.000 sets.py:443(test_closed_group)
      232    0.001    0.000    0.015    0.000 __init__.py:2506(from_location)
      348    0.001    0.000    0.015    0.000 polytools.py:1678(LC)
        1    0.001    0.001    0.015    0.015 numbers.py:1(<module>)
     4364    0.008    0.000    0.015    0.000 expr.py:455(args_cnc)
     1390    0.002    0.000    0.015    0.000 polytools.py:3700(_keep_coeff)
    74017    0.014    0.000    0.015    0.000 {round}
     1816    0.001    0.000    0.015    0.000 add.py:277(<lambda>)
        7    0.000    0.000    0.015    0.002 ikfast_IKFastSolver.py:2188(_ExtractTranslationsOutsideOfMatrixMultiplication)
   150012    0.015    0.000    0.015    0.000 densebasic.py:15(poly_LC)
     3732    0.001    0.000    0.014    0.000 solvers.py:418(<genexpr>)
    48664    0.006    0.000    0.014    0.000 {method 'intersection' of 'set' objects}
     2559    0.002    0.000    0.014    0.000 numbers.py:1105(__lt__)
      958    0.002    0.000    0.014    0.000 solvers.py:57(checksol)
    66448    0.014    0.000    0.014    0.000 polyutils.py:268(<genexpr>)
     5244    0.004    0.000    0.014    0.000 __init__.py:703(acquire)
     2936    0.013    0.000    0.014    0.000 expr.py:245(_parse_order)
   106329    0.014    0.000    0.014    0.000 expr.py:2008(as_numer_denom)
      152    0.000    0.000    0.013    0.000 matrices.py:460(__neg__)
      493    0.001    0.000    0.013    0.000 solvers.py:448(<lambda>)
    87625    0.013    0.000    0.013    0.000 pythonrationaltype.py:177(__nonzero__)
        1    0.000    0.000    0.013    0.013 matrices.py:1898(adjugate)
        1    0.000    0.000    0.013    0.013 matrices.py:1220(cofactorMatrix)
       16    0.000    0.000    0.013    0.001 matrices.py:1221(<lambda>)
       16    0.000    0.000    0.013    0.001 matrices.py:1237(cofactor)
     2488    0.002    0.000    0.013    0.000 solvers.py:409(sympified_list)
     4899    0.005    0.000    0.013    0.000 containers.py:30(__new__)
      493    0.001    0.000    0.013    0.000 numbers.py:789(__lt__)
    43656    0.013    0.000    0.013    0.000 {math.ldexp}
     1635    0.002    0.000    0.013    0.000 densebasic.py:486(dup_convert)
       32    0.000    0.000    0.013    0.000 polytools.py:1451(div)
      640    0.001    0.000    0.013    0.000 miscellaneous.py:30(sqrt)
       16    0.000    0.000    0.013    0.001 matrices.py:1225(minorEntry)
     3784    0.004    0.000    0.013    0.000 <string>:2(__add__)
       47    0.000    0.000    0.012    0.000 trigonometric.py:151(eval)
   123459    0.012    0.000    0.012    0.000 polyoptions.py:29(default)
       47    0.000    0.000    0.012    0.000 trigonometric.py:368(eval)
  573/572    0.002    0.000    0.012    0.000 power.py:141(_eval_is_negative)
       16    0.000    0.000    0.012    0.001 matrices.py:1830(det)
    11261    0.007    0.000    0.012    0.000 densearith.py:454(dup_abs)
        1    0.000    0.000    0.012    0.012 __init__.py:626(_build_master)
        1    0.000    0.000    0.012    0.012 __init__.py:613(__init__)
     1509    0.002    0.000    0.012    0.000 piecewise.py:270(piecewise_fold)
     2622    0.012    0.000    0.012    0.000 {method 'flush' of 'file' objects}
     4377    0.003    0.000    0.011    0.000 polytools.py:393(per)
      565    0.001    0.000    0.011    0.000 matrices.py:2616(zeros)
     4036    0.002    0.000    0.011    0.000 exprtools.py:138(quo)
    14187    0.008    0.000    0.011    0.000 domain.py:62(__call__)
        2    0.001    0.000    0.011    0.006 ctx_fp.py:1(<module>)
     3183    0.005    0.000    0.011    0.000 add.py:238(as_two_terms)
        2    0.000    0.000    0.011    0.006 ikfast_IKFastSolver.py:7823(solveVariablesLinearly)
    91509    0.011    0.000    0.011    0.000 domain.py:379(is_one)
     1000    0.001    0.000    0.011    0.000 ctx_mp_python.py:406(__abs__)
      100    0.000    0.000    0.011    0.000 sre_compile.py:552(_code)
    37563    0.006    0.000    0.011    0.000 basic.py:884(<lambda>)
    33969    0.011    0.000    0.011    0.000 sympify.py:9(__init__)
      169    0.000    0.000    0.011    0.000 polyutils.py:253(_dict_from_expr_no_gens)
      166    0.000    0.000    0.011    0.000 polytools.py:1327(pow)
        1    0.001    0.001    0.011    0.011 ikfast_IKFastSolver.py:1(<module>)
        1    0.000    0.000    0.011    0.011 evalf.py:4(<module>)
    49993    0.011    0.000    0.011    0.000 {method 'groups' of '_sre.SRE_Match' objects}
    12399    0.008    0.000    0.011    0.000 densebasic.py:58(dmp_ground_LC)
      809    0.000    0.000    0.011    0.000 polytools.py:743(monoms)
    33330    0.011    0.000    0.011    0.000 pythonintegerring.py:27(from_sympy)
     5245    0.004    0.000    0.011    0.000 numbers.py:390(__abs__)
        2    0.001    0.001    0.011    0.005 ctx_base.py:1(<module>)
   111717    0.010    0.000    0.010    0.000 polyutils.py:182(_is_coeff)
     3184    0.001    0.000    0.010    0.000 ctx_mp_python.py:177(__lt__)
     5273    0.008    0.000    0.010    0.000 threading.py:147(acquire)
     5296    0.005    0.000    0.010    0.000 exprtools.py:156(gcd)
      809    0.001    0.000    0.010    0.000 polyclasses.py:287(monoms)
      166    0.000    0.000    0.010    0.000 polyclasses.py:436(pow)
    81661    0.010    0.000    0.010    0.000 {method 'keys' of 'dict' objects}
     1766    0.002    0.000    0.010    0.000 numbers.py:155(_eval_evalf)
     1000    0.000    0.000    0.010    0.000 libmpc.py:117(mpc_abs)
        5    0.000    0.000    0.010    0.002 __init__.py:34(load_module)
     5244    0.002    0.000    0.010    0.000 __init__.py:710(release)
        1    0.000    0.000    0.010    0.010 __init__.py:7(<module>)
     1000    0.001    0.000    0.010    0.000 libmpf.py:1366(mpf_hypot)
     1505    0.001    0.000    0.009    0.000 evalf.py:922(<lambda>)
      166    0.000    0.000    0.009    0.000 densearith.py:983(dmp_pow)
      382    0.000    0.000    0.009    0.000 symbol.py:85(as_real_imag)
       29    0.000    0.000    0.009    0.000 ikfast_IKFastSolver.py:388(affineInverse)
    48185    0.009    0.000    0.009    0.000 numbers.py:328(_hashable_content)
     4036    0.005    0.000    0.009    0.000 exprtools.py:116(div)
    75402    0.009    0.000    0.009    0.000 densearith.py:494(dup_neg)
    35029    0.009    0.000    0.009    0.000 polyoptions.py:597(postprocess)
  248/242    0.002    0.000    0.009    0.000 numbers.py:1137(_eval_power)
  967/815    0.002    0.000    0.009    0.000 evalf.py:416(evalf_pow)
        1    0.000    0.000    0.009    0.009 sympify.py:1(<module>)
        1    0.000    0.000    0.009    0.009 nonlin.py:110(<module>)
        1    0.000    0.000    0.009    0.009 core.py:1(<module>)
     2155    0.002    0.000    0.009    0.000 operations.py:322(__new__)
        1    0.000    0.000    0.009    0.009 assumptions.py:1(<module>)
        7    0.000    0.000    0.009    0.001 ikfast_IKFastSolver.py:383(rodrigues2)
3505/3501    0.001    0.000    0.009    0.000 add.py:279(<lambda>)
     4388    0.006    0.000    0.009    0.000 operations.py:149(flatten)
     2658    0.009    0.000    0.009    0.000 {method 'write' of 'file' objects}
    29352    0.009    0.000    0.009    0.000 domain.py:109(of_type)
9819/2199    0.006    0.000    0.008    0.000 densebasic.py:1359(_rec_inflate)
        1    0.000    0.000    0.008    0.008 assumptions.py:12(AssumeMeths)
     1934    0.001    0.000    0.008    0.000 polytools.py:1642(degree_list)
        1    0.000    0.000    0.008    0.008 facts.py:681(__init__)
 1123/100    0.004    0.000    0.008    0.000 sre_compile.py:64(_compile)
     2097    0.001    0.000    0.008    0.000 ctx_mp_python.py:178(__gt__)
     1505    0.003    0.000    0.008    0.000 libelefun.py:114(f)
      118    0.000    0.000    0.008    0.000 __init__.py:2825(_reload_version)
        1    0.000    0.000    0.008    0.008 function.py:31(<module>)
     4801    0.005    0.000    0.008    0.000 symbol.py:179(matches)
    18058    0.006    0.000    0.008    0.000 polyconfig.py:29(query)
       78    0.000    0.000    0.008    0.000 polynomialring.py:103(from_PolynomialRing)
     1311    0.005    0.000    0.008    0.000 __init__.py:1233(findCaller)
      118    0.000    0.000    0.008    0.000 __init__.py:2478(_version_from_file)
        9    0.000    0.000    0.008    0.001 getlimits.py:94(__new__)
     3227    0.001    0.000    0.008    0.000 mul.py:816(<lambda>)
        2    0.000    0.000    0.008    0.004 getlimits.py:127(_init)
    35029    0.008    0.000    0.008    0.000 polyoptions.py:474(postprocess)
        2    0.000    0.000    0.008    0.004 machar.py:98(__init__)
    35029    0.008    0.000    0.008    0.000 polyoptions.py:459(postprocess)
        2    0.003    0.001    0.008    0.004 machar.py:116(_do_init)
       51    0.000    0.000    0.008    0.000 matrices.py:404(__sub__)
     4848    0.007    0.000    0.007    0.000 libintmath.py:123(bin_to_radix)
    11700    0.006    0.000    0.007    0.000 libmpf.py:548(mpf_cmp)
     5273    0.006    0.000    0.007    0.000 threading.py:187(release)
      437    0.000    0.000    0.007    0.000 polytools.py:219(__hash__)
    28324    0.007    0.000    0.007    0.000 {range}
        1    0.000    0.000    0.007    0.007 metaclass.py:1(<module>)
     8762    0.005    0.000    0.007    0.000 symbol.py:137(_hashable_content)
        1    0.000    0.000    0.007    0.007 polytools.py:1(<module>)
    38752    0.007    0.000    0.007    0.000 function.py:301(as_base_exp)
        1    0.000    0.000    0.007    0.007 inspect.py:25(<module>)
    35029    0.007    0.000    0.007    0.000 polyoptions.py:531(postprocess)
    35029    0.007    0.000    0.007    0.000 polyoptions.py:507(postprocess)
    10802    0.004    0.000    0.007    0.000 numbers.py:1015(__neg__)
      344    0.000    0.000    0.007    0.000 __init__.py:1358(safe_version)
      795    0.001    0.000    0.007    0.000 solvers.py:732(<genexpr>)
     3784    0.001    0.000    0.007    0.000 libmpc.py:92(mpc_add_mpf)
    20440    0.004    0.000    0.007    0.000 {method 'update' of 'set' objects}
    10079    0.002    0.000    0.007    0.000 sre_parse.py:212(get)
        1    0.000    0.000    0.007    0.007 parser.py:5(<module>)
      995    0.002    0.000    0.007    0.000 libmpf.py:1338(mpf_sqrt)
        1    0.000    0.000    0.007    0.007 feedparser.py:20(<module>)
     2269    0.002    0.000    0.007    0.000 operations.py:337(_new_args_filter)
  635/163    0.001    0.000    0.006    0.000 polyclasses.py:162(__hash__)
     1934    0.001    0.000    0.006    0.000 polyclasses.py:492(degree_list)
        1    0.000    0.000    0.006    0.006 specifiers.py:14(<module>)
       66    0.000    0.000    0.006    0.000 polyclasses.py:264(to_field)
    63453    0.006    0.000    0.006    0.000 mul.py:1046(<genexpr>)
        1    0.000    0.000    0.006    0.006 optimize.py:18(<module>)
      410    0.002    0.000    0.006    0.000 polyutils.py:316(_dict_reorder)
      530    0.000    0.000    0.006    0.000 polytools.py:3149(is_linear)
        1    0.000    0.000    0.006    0.006 decorators.py:15(<module>)
     4972    0.005    0.000    0.006    0.000 libmpf.py:59(prec_to_dps)
     9786    0.005    0.000    0.006    0.000 symbol.py:100(free_symbols)
     9845    0.004    0.000    0.006    0.000 libmpf.py:627(mpf_pos)
        1    0.000    0.000    0.006    0.006 message.py:5(<module>)
     4606    0.004    0.000    0.006    0.000 polyclasses.py:197(per)
        1    0.001    0.001    0.006    0.006 utils.py:4(<module>)
      530    0.001    0.000    0.006    0.000 polyclasses.py:779(is_linear)
      419    0.001    0.000    0.006    0.000 matrices.py:171(transpose)
     5307    0.003    0.000    0.006    0.000 libmpf.py:605(mpf_le)
     9659    0.005    0.000    0.006    0.000 numbers.py:1760(__hash__)
        1    0.000    0.000    0.006    0.006 charset.py:6(<module>)
     4296    0.003    0.000    0.006    0.000 libmpf.py:600(mpf_lt)
20203/20115    0.005    0.000    0.006    0.000 {issubclass}
     1151    0.002    0.000    0.006    0.000 polytools.py:1620(degree)
      232    0.000    0.000    0.006    0.000 __init__.py:2494(__init__)
        1    0.000    0.000    0.006    0.006 specifiers.py:285(Specifier)
     1059    0.002    0.000    0.006    0.000 source.py:15(get_class)
       64    0.000    0.000    0.006    0.000 polyclasses.py:260(to_ring)
      580    0.000    0.000    0.006    0.000 __init__.py:2651(_get_metadata)
    25836    0.006    0.000    0.006    0.000 {divmod}
     3745    0.002    0.000    0.005    0.000 compatibility.py:54(is_sequence)
     1934    0.002    0.000    0.005    0.000 densebasic.py:218(dmp_degree_list)
        1    0.000    0.000    0.005    0.005 base64mime.py:25(<module>)
     4848    0.003    0.000    0.005    0.000 libintmath.py:141(numeral_python)
    30955    0.004    0.000    0.005    0.000 domain.py:399(abs)
        1    0.001    0.001    0.005    0.005 utils.py:5(<module>)
    11162    0.005    0.000    0.005    0.000 sre_parse.py:193(__next)
        2    0.000    0.000    0.005    0.003 ikfast_AST.py:464(generate)
        2    0.000    0.000    0.005    0.003 ikfast_generator_cpp.py:1651(generateFreeParameter)
    31706    0.005    0.000    0.005    0.000 numbers.py:1255(as_numer_denom)
       65    0.000    0.000    0.005    0.000 matrices.py:440(__add__)
        1    0.002    0.002    0.005    0.005 facts.py:134(apply_beta_to_alpha_route)
    15049    0.005    0.000    0.005    0.000 str.py:344(_print_Integer)
       65    0.000    0.000    0.005    0.000 matrices.py:2605(matrix_add)
      572    0.001    0.000    0.005    0.000 power.py:206(_eval_is_odd)
      326    0.000    0.000    0.005    0.000 basic.py:1013(find)
      344    0.002    0.000    0.005    0.000 version.py:208(__init__)
    43340    0.005    0.000    0.005    0.000 pythonrationaltype.py:211(numer)
      118    0.000    0.000    0.005    0.000 {next}
        1    0.000    0.000    0.005    0.005 tokenize.py:23(<module>)
       48    0.000    0.000    0.005    0.000 ikfast_IKFastSolver.py:7312(<genexpr>)
        1    0.000    0.000    0.005    0.005 rootoftools.py:1(<module>)
        1    0.000    0.000    0.005    0.005 __init__.py:948(subscribe)
    27512    0.005    0.000    0.005    0.000 basic.py:1226(class_key)
    37006    0.005    0.000    0.005    0.000 {method 'upper' of 'str' objects}
      106    0.000    0.000    0.005    0.000 __init__.py:3165(<lambda>)
      106    0.000    0.000    0.005    0.000 __init__.py:2656(activate)
        4    0.000    0.000    0.005    0.001 ikfast_AST.py:189(checkValidSolution)
        1    0.000    0.000    0.005    0.005 polyroots.py:1(<module>)
      839    0.004    0.000    0.005    0.000 ikfast_IKFastSolver.py:418(IsHinge)
      635    0.000    0.000    0.005    0.000 polyclasses.py:243(to_tuple)
    38814    0.005    0.000    0.005    0.000 polyoptions.py:238(default)
        2    0.001    0.000    0.005    0.002 __init__.py:6(<module>)
      418    0.000    0.000    0.005    0.000 polyclasses.py:230(to_dict)
        2    0.005    0.002    0.005    0.002 {posix.system}
       17    0.004    0.000    0.005    0.000 collections.py:305(namedtuple)
     2194    0.005    0.000    0.005    0.000 libintmath.py:197(isqrt_small_python)
      265    0.001    0.000    0.005    0.000 matrices.py:361(copyin_matrix)
        2    0.001    0.000    0.005    0.002 ctx_mp.py:4(<module>)
 4162/326    0.003    0.000    0.005    0.000 basic.py:1024(rec_find)
        1    0.000    0.000    0.005    0.005 platform.py:10(<module>)
        1    0.001    0.001    0.005    0.005 runtests.py:13(<module>)
        2    0.004    0.002    0.004    0.002 {posix.fork}
    43340    0.004    0.000    0.004    0.000 pythonrationaltype.py:215(denom)
 4672/635    0.003    0.000    0.004    0.000 densebasic.py:426(dmp_to_tuple)
        1    0.001    0.001    0.004    0.004 polyclasses.py:1(<module>)
     3958    0.002    0.000    0.004    0.000 densebasic.py:697(dmp_one_p)
     7860    0.003    0.000    0.004    0.000 inspect.py:339(getmro)
        1    0.000    0.000    0.004    0.004 ikfast_AST.py:613(leftmultiply)
      160    0.000    0.000    0.004    0.000 matrices.py:372(copyin_list)
    10863    0.004    0.000    0.004    0.000 {math.log}
        1    0.000    0.000    0.004    0.004 __init__.py:111(<module>)
        1    0.000    0.000    0.004    0.004 _internal.py:6(<module>)
      760    0.001    0.000    0.004    0.000 difflib.py:152(__init__)
     2835    0.002    0.000    0.004    0.000 ctx_mp_python.py:98(mpf_convert_rhs)
     1546    0.001    0.000    0.004    0.000 posixpath.py:97(splitext)
     2024    0.001    0.000    0.004    0.000 fromnumeric.py:1900(any)
     4898    0.003    0.000    0.004    0.000 containers.py:47(__iter__)
     2118    0.001    0.000    0.004    0.000 assume.py:123(__call__)
        1    0.000    0.000    0.004    0.004 tempfile.py:18(<module>)
7294/1502    0.002    0.000    0.004    0.000 densebasic.py:448(<genexpr>)
     4723    0.003    0.000    0.004    0.000 simplify.py:345(parse_term)
     4386    0.001    0.000    0.004    0.000 operations.py:323(<genexpr>)
    38647    0.004    0.000    0.004    0.000 numbers.py:172(class_key)
        2    0.001    0.000    0.004    0.002 __init__.py:45(<module>)
       14    0.000    0.000    0.004    0.000 ikfast_IKFastSolver.py:302(GetMatrixFromNumpy)
     2648    0.002    0.000    0.004    0.000 exprtools.py:166(lcm)
     9686    0.004    0.000    0.004    0.000 iterables.py:166(__init__)
      173    0.002    0.000    0.003    0.000 core.py:118(__init__)
8642/8542    0.002    0.000    0.003    0.000 logic.py:347(__new__)
2158/1934    0.002    0.000    0.003    0.000 densebasic.py:207(_rec_degree_list)
      760    0.001    0.000    0.003    0.000 difflib.py:221(set_seqs)
    23509    0.003    0.000    0.003    0.000 numbers.py:1012(__int__)
        1    0.000    0.000    0.003    0.003 ikfast_IKFastSolver.py:6336(verifyAllEquations)
     2097    0.001    0.000    0.003    0.000 libmpf.py:610(mpf_gt)
        2    0.000    0.000    0.003    0.002 ctx_mp_python.py:3(<module>)
      643    0.000    0.000    0.003    0.000 matrices.py:2613(<lambda>)
     1024    0.002    0.000    0.003    0.000 evalf.py:261(add_terms)
    22121    0.003    0.000    0.003    0.000 {method 'startswith' of 'str' objects}
      141    0.000    0.000    0.003    0.000 ikfast_IKFastSolver.py:578(countVariables)
    11455    0.003    0.000    0.003    0.000 expr.py:977(as_coeff_mul)
     4898    0.002    0.000    0.003    0.000 containers.py:41(__len__)
        2    0.000    0.000    0.003    0.002 polyroots.py:440(roots)
     2606    0.003    0.000    0.003    0.000 polyoptions.py:699(allowed_flags)
    10236    0.003    0.000    0.003    0.000 libmpf.py:637(mpf_neg)
      104    0.000    0.000    0.003    0.000 numbers.py:1119(__le__)
     1197    0.001    0.000    0.003    0.000 mul.py:477(as_two_terms)
     11/8    0.000    0.000    0.003    0.000 power.py:580(_eval_derivative)
     1311    0.002    0.000    0.003    0.000 __init__.py:1360(isEnabledFor)
       14    0.000    0.000    0.003    0.000 ctx_mp_python.py:277(binary_op)
     9842    0.003    0.000    0.003    0.000 {math.frexp}
        1    0.000    0.000    0.003    0.003 random.py:40(<module>)
     2585    0.003    0.000    0.003    0.000 function.py:202(class_key)
        2    0.000    0.000    0.003    0.001 ikfast_IKFastSolver.py:625(gen_trigsubs)
       14    0.003    0.000    0.003    0.000 exec_py2.py:1(exec_)
      104    0.000    0.000    0.003    0.000 numbers.py:804(__le__)
        2    0.000    0.000    0.003    0.001 libmpf.py:3(<module>)
     2474    0.002    0.000    0.003    0.000 {numpy.core.multiarray.array}
      969    0.001    0.000    0.003    0.000 expr.py:2003(_eval_derivative)
      166    0.001    0.000    0.003    0.000 symbol.py:205(symbols)
      737    0.000    0.000    0.003    0.000 expr.py:236(_eval_conjugate)
        1    0.001    0.001    0.003    0.003 euclidtools.py:1(<module>)
    12886    0.003    0.000    0.003    0.000 evalf.py:916(<lambda>)
        5    0.000    0.000    0.003    0.001 trigonometric.py:1173(eval)
    14255    0.003    0.000    0.003    0.000 precedence.py:45(precedence_Integer)
     2118    0.001    0.000    0.003    0.000 assume.py:47(__new__)
  571/569    0.001    0.000    0.003    0.000 power.py:160(_eval_is_integer)
      100    0.000    0.000    0.003    0.000 sre_compile.py:433(_compile_info)
        1    0.001    0.001    0.003    0.003 __init__.py:41(<module>)
        1    0.000    0.000    0.003    0.003 ask.py:1(<module>)
     3960    0.002    0.000    0.003    0.000 densebasic.py:729(dmp_ground_p)
       86    0.000    0.000    0.003    0.000 __init__.py:2164(_handle_ns)
      111    0.000    0.000    0.003    0.000 posixpath.py:372(realpath)
       78    0.001    0.000    0.003    0.000 str.py:267(_print_Poly)
     1151    0.001    0.000    0.003    0.000 polyclasses.py:485(degree)
  130/129    0.000    0.000    0.003    0.000 numbers.py:696(_eval_power)
     4848    0.003    0.000    0.003    0.000 libintmath.py:130(small_numeral)
     5092    0.002    0.000    0.003    0.000 euclidtools.py:870(_dup_rr_trivial_gcd)
      387    0.001    0.000    0.002    0.000 sre_compile.py:228(_compile_charset)
       76    0.000    0.000    0.002    0.000 matrices.py:2626(eye)
     1546    0.002    0.000    0.002    0.000 genericpath.py:93(_splitext)
        1    0.000    0.000    0.002    0.002 partfrac.py:1(<module>)
        3    0.000    0.000    0.002    0.001 decorator.py:4(threaded_factory)
        1    0.000    0.000    0.002    0.002 decorator.py:28(threaded)
       81    0.000    0.000    0.002    0.000 pkgutil.py:176(find_module)
        1    0.000    0.000    0.002    0.002 urllib.py:23(<module>)
    12266    0.002    0.000    0.002    0.000 domain.py:312(__eq__)
     2622    0.002    0.000    0.002    0.000 __init__.py:446(usesTime)
        1    0.000    0.000    0.002    0.002 __init__.py:4(<module>)
        1    0.000    0.000    0.002    0.002 version.py:14(<module>)
      197    0.000    0.000    0.002    0.000 ctx_mp_python.py:199(__rdiv__)
      773    0.001    0.000    0.002    0.000 difflib.py:259(set_seq2)
        1    0.000    0.000    0.002    0.002 decimal.py:116(<module>)
     78/8    0.000    0.000    0.002    0.000 solvers.py:184(guess_solve_strategy)
        1    0.000    0.000    0.002    0.002 doctest.py:46(<module>)
     2024    0.000    0.000    0.002    0.000 {method 'any' of 'numpy.ndarray' objects}
     4854    0.002    0.000    0.002    0.000 libmpf.py:483(to_fixed)
        1    0.000    0.000    0.002    0.002 galoistools.py:1(<module>)
     1429    0.001    0.000    0.002    0.000 numbers.py:1693(__eq__)
    14332    0.002    0.000    0.002    0.000 expr.py:325(<genexpr>)
      276    0.001    0.000    0.002    0.000 mul.py:795(as_base_exp)
    16869    0.002    0.000    0.002    0.000 polyoptions.py:310(default)
     4786    0.001    0.000    0.002    0.000 sre_parse.py:141(__getitem__)
        3    0.000    0.000    0.002    0.001 matrices.py:1(<module>)
    10806    0.002    0.000    0.002    0.000 expr.py:1823(as_coeff_Mul)
        1    0.002    0.002    0.002    0.002 hashlib.py:56(<module>)
   100/54    0.000    0.000    0.002    0.000 polyclasses.py:417(add)
     7128    0.002    0.000    0.002    0.000 libmpf.py:651(mpf_abs)
 1591/587    0.002    0.000    0.002    0.000 sre_parse.py:151(getwidth)
    16539    0.002    0.000    0.002    0.000 polyoptions.py:252(default)
      257    0.001    0.000    0.002    0.000 abc.py:128(__instancecheck__)
     2217    0.002    0.000    0.002    0.000 polyutils.py:73(_unify_gens)
      774    0.001    0.000    0.002    0.000 symbol.py:149(__new__)
     1004    0.001    0.000    0.002    0.000 libmpc.py:173(mpc_mul_mpf)
      148    0.000    0.000    0.002    0.000 ctx_mp_python.py:366(__new__)
        1    0.001    0.001    0.002    0.002 __init__.py:169(<module>)
     1311    0.001    0.000    0.002    0.000 posixpath.py:112(basename)
      111    0.000    0.000    0.002    0.000 posixpath.py:380(_joinrealpath)
    13698    0.002    0.000    0.002    0.000 constructor.py:16(<lambda>)
      591    0.000    0.000    0.002    0.000 add.py:218(_matches_simple)
       60    0.000    0.000    0.002    0.000 __init__.py:2011(get_metadata_lines)
     1311    0.002    0.000    0.002    0.000 __init__.py:148(getLevelName)
     5032    0.002    0.000    0.002    0.000 function.py:680(<genexpr>)
        3    0.000    0.000    0.002    0.001 matrices.py:1405(cross)
      524    0.001    0.000    0.002    0.000 ikfast_generator_cpp.py:224(copyequations)
     2024    0.000    0.000    0.002    0.000 _methods.py:37(_any)
      106    0.000    0.000    0.002    0.000 __init__.py:2240(fixup_namespace_packages)
     1811    0.001    0.000    0.002    0.000 ctx_mp_python.py:149(__abs__)
       60    0.000    0.000    0.002    0.000 __init__.py:2004(get_metadata)
     5664    0.002    0.000    0.002    0.000 {method 'rfind' of 'str' objects}
     7157    0.002    0.000    0.002    0.000 evalf.py:925(<lambda>)
      387    0.001    0.000    0.002    0.000 sre_compile.py:256(_optimize_charset)
      773    0.002    0.000    0.002    0.000 difflib.py:304(__chain_b)
        1    0.000    0.000    0.002    0.002 version.py:201(Version)
    14207    0.002    0.000    0.002    0.000 polyoptions.py:367(default)
     2061    0.001    0.000    0.002    0.000 ctx_mp_python.py:621(convert)
        6    0.000    0.000    0.002    0.000 ikfast_IKFastSolver.py:361(GetMatrixFromQuat)
        1    0.000    0.000    0.002    0.002 doctest.py:575(DocTestParser)
     1311    0.001    0.000    0.002    0.000 __init__.py:70(<lambda>)
      294    0.000    0.000    0.002    0.000 relational.py:193(__nonzero__)
    14596    0.002    0.000    0.002    0.000 logic.py:49(fuzzy_not)
      572    0.001    0.000    0.002    0.000 power.py:121(_eval_is_even)
        6    0.000    0.000    0.002    0.000 ctx_base.py:38(__init__)
     2064    0.002    0.000    0.002    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.001    0.001    0.002    0.002 numeric.py:1(<module>)
     9266    0.002    0.000    0.002    0.000 printer.py:218(order)
        2    0.000    0.000    0.002    0.001 libhyper.py:6(<module>)
     5016    0.002    0.000    0.002    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.002    0.002 core.py:21(<module>)
        8    0.000    0.000    0.002    0.000 matrices.py:508(__str__)
        1    0.000    0.000    0.002    0.002 files.py:12(<module>)
     4935    0.002    0.000    0.002    0.000 evalf.py:892(evalf_symbol)
     3143    0.002    0.000    0.002    0.000 polyclasses.py:171(unify)
     9796    0.002    0.000    0.002    0.000 function.py:673(<genexpr>)
     2346    0.001    0.000    0.002    0.000 matrices.py:990(slice2bounds)
       79    0.000    0.000    0.002    0.000 power.py:103(_eval_power)
      456    0.001    0.000    0.002    0.000 functools.py:17(update_wrapper)
        1    0.001    0.001    0.002    0.002 __init__.py:88(<module>)
        7    0.000    0.000    0.002    0.000 ikfast_IKFastSolver.py:354(numpyVectorToSympy)
        3    0.000    0.000    0.002    0.001 __init__.py:3(<module>)
        8    0.000    0.000    0.002    0.000 str.py:191(_print_Matrix)
        8    0.000    0.000    0.002    0.000 matrices.py:486(_format_str)
    10547    0.002    0.000    0.002    0.000 threading.py:64(_note)
     4149    0.001    0.000    0.002    0.000 densebasic.py:1330(dup_inflate)
     5071    0.002    0.000    0.002    0.000 {method 'getvalue' of 'cStringIO.StringO' objects}
     1083    0.001    0.000    0.002    0.000 polynomialring.py:42(__eq__)
      889    0.002    0.000    0.002    0.000 ikfast_generator_cpp.py:1244(<lambda>)
     3933    0.002    0.000    0.002    0.000 __init__.py:607(filter)
        6    0.000    0.000    0.002    0.000 functions.py:18(__init__)
        1    0.000    0.000    0.002    0.002 decomp_schur.py:1(<module>)
      507    0.000    0.000    0.002    0.000 polytools.py:404(per)
        2    0.000    0.000    0.002    0.001 polyroots.py:37(roots_quadratic)
        2    0.000    0.000    0.001    0.001 platform.py:1281(system)
        6    0.000    0.000    0.001    0.000 platform.py:1144(uname)
        1    0.000    0.000    0.001    0.001 inversekinematics.py:140(<module>)
        1    0.000    0.000    0.001    0.001 platform.py:978(_syscmd_uname)
       46    0.000    0.000    0.001    0.000 polyclasses.py:813(__add__)
      708    0.001    0.000    0.001    0.000 power.py:114(_eval_is_comparable)
        1    0.000    0.000    0.001    0.001 numerictypes.py:82(<module>)
      796    0.000    0.000    0.001    0.000 polynomialring.py:46(__ne__)
     4162    0.001    0.000    0.001    0.000 basic.py:1016(<lambda>)
     1311    0.001    0.000    0.001    0.000 __init__.py:1346(getEffectiveLevel)
        2    0.000    0.000    0.001    0.001 importtools.py:23(import_module)
     5088    0.001    0.000    0.001    0.000 numbers.py:1944(as_base_exp)
       97    0.001    0.000    0.001    0.000 {method 'read' of 'file' objects}
       50    0.000    0.000    0.001    0.000 str.py:192(<lambda>)
        1    0.001    0.001    0.001    0.001 index_tricks.py:1(<module>)
     1511    0.001    0.000    0.001    0.000 numbers.py:1098(__gt__)
     1151    0.000    0.000    0.001    0.000 densebasic.py:182(dmp_degree_in)
        2    0.000    0.000    0.001    0.001 gammazeta.py:14(<module>)
        1    0.000    0.000    0.001    0.001 cythonutils.py:1(<module>)
       60    0.000    0.000    0.001    0.000 power.py:560(_eval_expand_trig)
        1    0.001    0.001    0.001    0.001 case.py:1(<module>)
     3121    0.001    0.000    0.001    0.000 matrices.py:3202(a2idx)
     9255    0.001    0.000    0.001    0.000 domain.py:387(is_negative)
       65    0.000    0.000    0.001    0.000 matrices.py:789(row_swap)
        1    0.000    0.000    0.001    0.001 decomp_qr.py:1(<module>)
      232    0.001    0.000    0.001    0.000 __init__.py:743(add)
     8123    0.001    0.000    0.001    0.000 symbol.py:175(_hashable_content)
     1048    0.001    0.000    0.001    0.000 copy.py:66(copy)
       30    0.000    0.000    0.001    0.000 abc.py:86(__new__)
     1025    0.001    0.000    0.001    0.000 numbers.py:57(ilcm)
      197    0.000    0.000    0.001    0.000 ctx_mp_python.py:114(mpf_convert_lhs)
    13170    0.001    0.000    0.001    0.000 {thread.get_ident}
     1059    0.001    0.000    0.001    0.000 source.py:31(get_mod_func)
      106    0.001    0.000    0.001    0.000 __init__.py:2737(insert_on)
        1    0.000    0.000    0.001    0.001 special_matrices.py:2(<module>)
     1151    0.001    0.000    0.001    0.000 polytools.py:1602(_gen_to_level)
     1517    0.001    0.000    0.001    0.000 libelefun.py:94(g)
        1    0.000    0.000    0.001    0.001 __init__.py:37(<module>)
     3044    0.001    0.000    0.001    0.000 monomialtools.py:105(monomial_key)
        2    0.000    0.000    0.001    0.001 polyroots.py:372(preprocess_roots)
      749    0.001    0.000    0.001    0.000 polyclasses.py:504(TC)
      344    0.001    0.000    0.001    0.000 version.py:246(__str__)
      163    0.001    0.000    0.001    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.001    0.001 csr.py:1(<module>)
       52    0.001    0.000    0.001    0.000 {posix.listdir}
    11396    0.001    0.000    0.001    0.000 monomialtools.py:87(monomial_lex_key)
  870/863    0.001    0.000    0.001    0.000 polyclasses.py:867(__eq__)
        1    0.000    0.000    0.001    0.001 cython.py:7(<module>)
       44    0.000    0.000    0.001    0.000 domain.py:362(frac_field)
     9256    0.001    0.000    0.001    0.000 multinomial.py:54(<genexpr>)
      344    0.001    0.000    0.001    0.000 version.py:353(_cmpkey)
     1311    0.001    0.000    0.001    0.000 threading.py:1143(currentThread)
        1    0.000    0.000    0.001    0.001 polyutils.py:1(<module>)
        3    0.000    0.000    0.001    0.000 random.py:91(__init__)
        3    0.000    0.000    0.001    0.000 random.py:100(seed)
4178/3988    0.001    0.000    0.001    0.000 {setattr}
   113/33    0.000    0.000    0.001    0.000 facts.py:467(process_rule)
      477    0.000    0.000    0.001    0.000 __init__.py:2303(yield_lines)
        2    0.000    0.000    0.001    0.001 libintmath.py:7(<module>)
    10447    0.001    0.000    0.001    0.000 evalf.py:1060(_eval_evalf)
      273    0.000    0.000    0.001    0.000 function_base.py:3944(add_newdoc)
     3338    0.000    0.000    0.001    0.000 __init__.py:2280(_normalize_cached)
        1    0.000    0.000    0.001    0.001 ccompiler.py:4(<module>)
        1    0.000    0.000    0.001    0.001 polytools.py:4444(lcm)
     2655    0.001    0.000    0.001    0.000 {method 'acquire' of 'thread.lock' objects}
        1    0.000    0.000    0.001    0.001 pilutil.py:7(<module>)
    99/33    0.000    0.000    0.001    0.000 facts.py:541(_process_rule)
        1    0.001    0.001    0.001    0.001 socket.py:45(<module>)
        3    0.001    0.000    0.001    0.000 {function seed at 0x7fef2b577c80}
     2550    0.001    0.000    0.001    0.000 numbers.py:209(as_coeff_add)
      518    0.001    0.000    0.001    0.000 {posix.stat}
       25    0.000    0.000    0.001    0.000 trigonometric.py:731(_eval_subs)
        1    0.000    0.000    0.001    0.001 power.py:1(<module>)
      565    0.001    0.000    0.001    0.000 matrices.py:27(_dims_to_nm)
     1316    0.001    0.000    0.001    0.000 {posix.getpid}
     4860    0.001    0.000    0.001    0.000 numbers.py:1419(__neg__)
        1    0.000    0.000    0.001    0.001 fractions.py:4(<module>)
        1    0.000    0.000    0.001    0.001 inversekinematics.py:439(GetDefaultIndices)
     3151    0.000    0.000    0.001    0.000 sre_parse.py:206(match)
      886    0.001    0.000    0.001    0.000 matrices.py:342(tolist)
      626    0.000    0.000    0.001    0.000 posixpath.py:132(islink)
       46    0.000    0.000    0.001    0.000 fractionfield.py:20(__init__)
       60    0.001    0.000    0.001    0.000 {method 'read' of '_io.TextIOWrapper' objects}
        1    0.001    0.001    0.001    0.001 pdb.py:3(<module>)
     5073    0.001    0.000    0.001    0.000 {cStringIO.StringIO}
        2    0.000    0.000    0.001    0.000 ctx_iv.py:278(__init__)
       17    0.000    0.000    0.001    0.000 singleton.py:51(__init__)
        1    0.000    0.000    0.001    0.001 urlparse.py:29(<module>)
     8743    0.001    0.000    0.001    0.000 logic.py:57(name_not)
     4283    0.001    0.000    0.001    0.000 evalf.py:920(<lambda>)
        1    0.000    0.000    0.001    0.001 polyoptions.py:1(<module>)
      823    0.000    0.000    0.001    0.000 densebasic.py:713(dmp_one)
      289    0.000    0.000    0.001    0.000 genericpath.py:46(isdir)
        1    0.000    0.000    0.001    0.001 Shadow.py:2(<module>)
        1    0.000    0.000    0.001    0.001 base.py:12(<module>)
        2    0.000    0.000    0.001    0.000 common.py:10(<module>)
       70    0.000    0.000    0.001    0.000 matrices.py:793(col_swap)
        2    0.000    0.000    0.001    0.000 six.py:1(<module>)
     4447    0.001    0.000    0.001    0.000 numbers.py:638(_hashable_content)
     1095    0.001    0.000    0.001    0.000 posixpath.py:61(join)
        1    0.000    0.000    0.001    0.001 symbol.py:1(<module>)
     3474    0.001    0.000    0.001    0.000 libmpf.py:666(mpf_sign)
        2    0.001    0.000    0.001    0.000 backend.py:1(<module>)
    93/74    0.000    0.000    0.001    0.000 logic.py:195(__new__)
        1    0.000    0.000    0.001    0.001 openravepy_ext.py:14(<module>)
        3    0.001    0.000    0.001    0.000 facts.py:442(split_alpha_beta)
        2    0.000    0.000    0.001    0.000 tempfile.py:280(mkstemp)
     1000    0.000    0.000    0.001    0.000 ctx_mp_python.py:432(mpc_convert_lhs)
    81/23    0.000    0.000    0.001    0.000 abc.py:148(__subclasscheck__)
        1    0.001    0.001    0.001    0.001 shutil.py:5(<module>)
     5423    0.001    0.000    0.001    0.000 expr.py:1048(as_numer_denom)
        1    0.000    0.000    0.001    0.001 group.py:12(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:2208(declare_namespace)
        1    0.000    0.000    0.001    0.001 __init__.py:52(<module>)
     1311    0.001    0.000    0.001    0.000 threading.py:958(name)
      148    0.000    0.000    0.001    0.000 polynomials.py:182(<lambda>)
      232    0.000    0.000    0.001    0.000 __init__.py:1350(safe_name)
        2    0.000    0.000    0.001    0.000 inversekinematics.py:368(setrobot)
       30    0.000    0.000    0.001    0.000 __init__.py:2276(normalize_path)
        1    0.000    0.000    0.001    0.001 ssl.py:89(<module>)
      134    0.000    0.000    0.001    0.000 __init__.py:1607(has_metadata)
        1    0.000    0.000    0.001    0.001 facts.py:456(rules_alpha)
       25    0.000    0.000    0.001    0.000 trigonometric.py:901(_eval_subs)
     2647    0.001    0.000    0.001    0.000 {method 'find' of 'str' objects}
        1    0.000    0.000    0.001    0.001 summations.py:1(<module>)
      197    0.000    0.000    0.001    0.000 <string>:2(__div__)
        8    0.000    0.000    0.001    0.000 matrices.py:1034(evalf)
        8    0.000    0.000    0.001    0.000 matrices.py:1016(applyfunc)
     9686    0.001    0.000    0.001    0.000 iterables.py:207(__iter__)
        1    0.000    0.000    0.001    0.001 pretty.py:1(<module>)
      344    0.001    0.000    0.001    0.000 {method 'search' of '_sre.SRE_Pattern' objects}
       15    0.000    0.000    0.001    0.000 complexes.py:267(_eval_is_positive)
      150    0.000    0.000    0.001    0.000 function.py:267(_eval_is_comparable)
       92    0.000    0.000    0.001    0.000 polyclasses.py:926(new)
        1    0.000    0.000    0.001    0.001 npyio.py:1(<module>)
        1    0.000    0.000    0.001    0.001 polynomial.py:4(<module>)
      144    0.000    0.000    0.001    0.000 trigonometric.py:45(_pi_coeff)
      232    0.000    0.000    0.001    0.000 re.py:148(sub)
       61    0.000    0.000    0.001    0.000 __init__.py:1621(get_metadata_lines)
        2    0.000    0.000    0.001    0.000 polyroots.py:42(_simplify)
        2    0.000    0.000    0.001    0.000 polytools.py:4945(factor)
        2    0.000    0.000    0.001    0.000 polytools.py:4894(_generic_factor)
        1    0.000    0.000    0.001    0.001 gosper.py:1(<module>)
        1    0.000    0.000    0.001    0.001 result.py:1(<module>)
      751    0.000    0.000    0.001    0.000 densebasic.py:80(dmp_ground_TC)
        1    0.000    0.000    0.001    0.001 trigonometric.py:1(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:18(<module>)
      296    0.000    0.000    0.001    0.000 ctx_base.py:70(_im)
        2    0.000    0.000    0.001    0.000 __init__.py:9(<module>)
       54    0.000    0.000    0.001    0.000 Shadow.py:207(_pointer)
       61    0.000    0.000    0.001    0.000 __init__.py:1611(get_metadata)
     2025    0.001    0.000    0.001    0.000 numeric.py:484(asanyarray)
      573    0.001    0.000    0.001    0.000 power.py:174(_eval_is_real)
      647    0.001    0.000    0.001    0.000 _weakrefset.py:70(__contains__)
        1    0.000    0.000    0.001    0.001 difflib.py:27(<module>)
        1    0.000    0.000    0.001    0.001 __init__.py:11(<module>)
        2    0.000    0.000    0.001    0.000 polytools.py:4850(_symbolic_factor)
     2668    0.001    0.000    0.001    0.000 matrices.py:334(__len__)
        1    0.000    0.000    0.001    0.001 Image.py:27(<module>)
        6    0.000    0.000    0.001    0.000 warnings.py:67(filterwarnings)
     2654    0.001    0.000    0.001    0.000 {method 'release' of 'thread.lock' objects}
     1104    0.000    0.000    0.001    0.000 numbers.py:291(_as_mpf_op)
       62    0.000    0.000    0.001    0.000 __init__.py:2066(find_distributions)
      886    0.000    0.000    0.001    0.000 pythonintegerring.py:44(from_QQ_python)
        1    0.000    0.000    0.001    0.001 factor_.py:3(<module>)
        4    0.000    0.000    0.001    0.000 inversekinematics.py:580(getfilename)
        1    0.000    0.000    0.001    0.001 linsolve.py:1(<module>)
     1180    0.001    0.000    0.001    0.000 ctx_mp_python.py:595(make_mpf)
        2    0.000    0.000    0.001    0.000 polytools.py:690(retract)
      108    0.001    0.000    0.001    0.000 Shadow.py:301(pointer)
        3    0.000    0.000    0.001    0.000 tempfile.py:135(next)
       61    0.001    0.000    0.001    0.000 {_io.open}
        1    0.000    0.000    0.001    0.001 plistlib.py:51(<module>)
2390/2364    0.001    0.000    0.001    0.000 ikfast_IKFastSolver.py:9319(frontnumbers)
      840    0.000    0.000    0.001    0.000 polyoptions.py:389(preprocess)
        1    0.000    0.000    0.001    0.001 version.py:12(<module>)
        6    0.001    0.000    0.001    0.000 {imp.load_module}
        7    0.000    0.000    0.001    0.000 nonlin.py:1429(_nonlin_wrapper)
      656    0.000    0.000    0.001    0.000 __init__.py:2565(key)
        3    0.000    0.000    0.001    0.000 tempfile.py:124(rng)
        1    0.001    0.001    0.001    0.001 integrals.py:1(<module>)
     3486    0.001    0.000    0.001    0.000 evalf.py:919(<lambda>)
        1    0.000    0.000    0.001    0.001 zipfile.py:3(<module>)
        5    0.000    0.000    0.001    0.000 ccompiler.py:963(new_compiler)
      499    0.000    0.000    0.001    0.000 {method 'remove' of 'list' objects}
      483    0.000    0.000    0.001    0.000 sre_compile.py:428(_simple)
        2    0.000    0.000    0.001    0.000 ctx_fp.py:18(__init__)
      121    0.000    0.000    0.001    0.000 posixpath.py:358(abspath)
        1    0.000    0.000    0.001    0.001 polyfuncs.py:1(<module>)
        1    0.000    0.000    0.001    0.001 complexes.py:1(<module>)
      826    0.001    0.000    0.001    0.000 ikfast_AST.py:83(numsolutions)
       74    0.000    0.000    0.001    0.000 ikfast_generator_cpp.py:688(<lambda>)
        1    0.001    0.001    0.001    0.001 convexdecomposition.py:63(<module>)
        1    0.001    0.001    0.001    0.001 core.py:2683(MaskedArray)
       46    0.000    0.000    0.001    0.000 polyclasses.py:1083(zero)
     1392    0.001    0.000    0.001    0.000 {sys._getframe}
      105    0.000    0.000    0.001    0.000 simplify.py:300(make_expression)
       63    0.000    0.000    0.001    0.000 __init__.py:3057(_find_adapter)
     2405    0.001    0.000    0.001    0.000 numbers.py:1349(__neg__)
        1    0.000    0.000    0.001    0.001 collections.py:11(<module>)
      945    0.001    0.000    0.001    0.000 difflib.py:233(set_seq1)
      128    0.000    0.000    0.001    0.000 matrices.py:1036(<lambda>)
      512    0.000    0.000    0.001    0.000 matrices.py:141(<lambda>)
     3442    0.001    0.000    0.001    0.000 mul.py:748(check)
       61    0.000    0.000    0.001    0.000 __init__.py:1724(_get)
       87    0.001    0.000    0.001    0.000 {imp.find_module}
     6326    0.001    0.000    0.001    0.000 {method 'endswith' of 'str' objects}
      348    0.000    0.000    0.001    0.000 polyclasses.py:500(LC)
        4    0.000    0.000    0.001    0.000 ctx_mp_python.py:982(f)
        1    0.000    0.000    0.001    0.001 specialpolys.py:1(<module>)
     2538    0.001    0.000    0.001    0.000 relational.py:109(get_relational_class)
       16    0.000    0.000    0.001    0.000 matrices.py:1231(minorMatrix)
        1    0.000    0.000    0.001    0.001 sysconfig.py:10(<module>)
       45    0.000    0.000    0.001    0.000 optparse.py:1008(add_option)
        1    0.000    0.000    0.001    0.001 specifiers.py:224(LegacySpecifier)
        1    0.000    0.000    0.001    0.001 polyoptions.py:374(Domain)
      626    0.001    0.000    0.001    0.000 {posix.lstat}
       16    0.000    0.000    0.001    0.000 matrices.py:1541(delRowCol)
        1    0.000    0.000    0.001    0.001 inversekinematics.py:334(save)
        1    0.000    0.000    0.001    0.001 densebasic.py:1(<module>)
        4    0.000    0.000    0.001    0.000 libelefun.py:912(mpf_asin)
     1748    0.000    0.000    0.001    0.000 sre_parse.py:149(append)
        6    0.000    0.000    0.000    0.000 libelefun.py:842(mpf_atan)
        1    0.000    0.000    0.000    0.000 inversekinematics.py:1241(CreateOptionParser)
       63    0.000    0.000    0.000    0.000 __init__.py:3050(_get_mro)
      126    0.000    0.000    0.000    0.000 posixpath.py:329(normpath)
       61    0.000    0.000    0.000    0.000 {method 'splitlines' of 'str' objects}
      950    0.000    0.000    0.000    0.000 pythonrationalfield.py:36(from_ZZ_python)
       59    0.000    0.000    0.000    0.000 <string>:2(__mul__)
     1048    0.000    0.000    0.000    0.000 copy.py:113(_copy_with_constructor)
      528    0.000    0.000    0.000    0.000 ctx_mp_python.py:379(<lambda>)
        1    0.000    0.000    0.000    0.000 polynomial.py:55(<module>)
    277/9    0.000    0.000    0.000    0.000 densebasic.py:465(dmp_normal)
     2071    0.000    0.000    0.000    0.000 numbers.py:1393(__neg__)
       43    0.000    0.000    0.000    0.000 core.py:113(get_object_signature)
    51/50    0.000    0.000    0.000    0.000 power.py:210(_eval_is_bounded)
        1    0.000    0.000    0.000    0.000 basic.py:6(<module>)
        2    0.000    0.000    0.000    0.000 polytools.py:4819(_symbolic_factor_list)
     2118    0.000    0.000    0.000    0.000 assume.py:71(func)
      118    0.000    0.000    0.000    0.000 ctx_mp_python.py:610(_set_prec)
     1821    0.000    0.000    0.000    0.000 numbers.py:230(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 __init__.py:24(<module>)
     1302    0.000    0.000    0.000    0.000 version.py:217(<genexpr>)
      134    0.000    0.000    0.000    0.000 __init__.py:1712(_has)
      156    0.000    0.000    0.000    0.000 genericpath.py:23(exists)
     2232    0.000    0.000    0.000    0.000 sre_parse.py:137(__len__)
        1    0.000    0.000    0.000    0.000 version.py:27(<module>)
        1    0.000    0.000    0.000    0.000 basic.py:1(<module>)
        6    0.000    0.000    0.000    0.000 libelefun.py:817(atan_taylor)
        2    0.000    0.000    0.000    0.000 tempfile.py:268(gettempdir)
        2    0.000    0.000    0.000    0.000 libmpc.py:3(<module>)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:20(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:6(<module>)
        1    0.000    0.000    0.000    0.000 tempfile.py:176(_get_default_tempdir)
       15    0.000    0.000    0.000    0.000 complexes.py:264(_eval_is_nonzero)
      577    0.000    0.000    0.000    0.000 __init__.py:2692(__getattr__)
     5482    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 io.py:34(<module>)
       26    0.000    0.000    0.000    0.000 core.py:6353(__init__)
      154    0.000    0.000    0.000    0.000 libintmath.py:15(giant_steps)
        1    0.000    0.000    0.000    0.000 __init__.py:2343(EntryPoint)
        1    0.000    0.000    0.000    0.000 misc.py:152(parseGlobal)
        1    0.000    0.000    0.000    0.000 linkstatistics.py:57(<module>)
        1    0.000    0.000    0.000    0.000 misc.py:65(InitOpenRAVELogging)
      127    0.000    0.000    0.000    0.000 ctx_mp_python.py:155(__pos__)
        1    0.000    0.000    0.000    0.000 loader.py:1(<module>)
        6    0.000    0.000    0.000    0.000 libelefun.py:802(atan_taylor_get_cached)
      224    0.000    0.000    0.000    0.000 ctx_base.py:65(_re)
       26    0.000    0.000    0.000    0.000 core.py:6358(getdoc)
        5    0.000    0.000    0.000    0.000 ccompiler.py:907(get_default_compiler)
      536    0.000    0.000    0.000    0.000 libmpf.py:322(<genexpr>)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:57(__init__)
      193    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1627(<lambda>)
       45    0.000    0.000    0.000    0.000 optparse.py:561(__init__)
        5    0.000    0.000    0.000    0.000 libelefun.py:784(atan_newton)
        1    0.000    0.000    0.000    0.000 stringpict.py:13(<module>)
        1    0.000    0.000    0.000    0.000 util.py:1(<module>)
        2    0.000    0.000    0.000    0.000 utils.py:1(<module>)
       75    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:686(<genexpr>)
     3811    0.000    0.000    0.000    0.000 {method 'group' of '_sre.SRE_Match' objects}
        2    0.000    0.000    0.000    0.000 shutil.py:66(copyfile)
     4456    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:8262(<lambda>)
        2    0.000    0.000    0.000    0.000 tempfile.py:235(_mkstemp_inner)
        1    0.000    0.000    0.000    0.000 dataset.py:12(<module>)
        4    0.000    0.000    0.000    0.000 polytools.py:115(from_dict)
       16    0.000    0.000    0.000    0.000 abc.py:105(register)
       30    0.000    0.000    0.000    0.000 re.py:138(match)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:62(__init__)
       20    0.000    0.000    0.000    0.000 expr.py:494(coeff)
        2    0.000    0.000    0.000    0.000 polytools.py:1244(sub)
        1    0.000    0.000    0.000    0.000 ccode.py:10(<module>)
        6    0.000    0.000    0.000    0.000 matrices.py:1443(norm)
      139    0.000    0.000    0.000    0.000 polynomialring.py:35(__hash__)
       32    0.000    0.000    0.000    0.000 polynomialring.py:32(__str__)
        1    0.000    0.000    0.000    0.000 threading.py:1(<module>)
     1123    0.000    0.000    0.000    0.000 sre_parse.py:92(__init__)
       71    0.000    0.000    0.000    0.000 {open}
       32    0.000    0.000    0.000    0.000 polyclasses.py:464(div)
     2040    0.000    0.000    0.000    0.000 factor_.py:18(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:147(CreateOptionParser)
      238    0.000    0.000    0.000    0.000 <string>:2(__eq__)
       32    0.000    0.000    0.000    0.000 numeric.py:1553(cross)
      166    0.000    0.000    0.000    0.000 {method 'split' of '_sre.SRE_Pattern' objects}
        1    0.000    0.000    0.000    0.000 domain.py:1(<module>)
        2    0.000    0.000    0.000    0.000 optparse.py:1191(__init__)
     1314    0.000    0.000    0.000    0.000 {time.time}
     2163    0.000    0.000    0.000    0.000 matrices.py:382(shape)
        1    0.000    0.000    0.000    0.000 facts.py:49(<module>)
        1    0.000    0.000    0.000    0.000 basic.py:10(Basic)
      196    0.000    0.000    0.000    0.000 __init__.py:1673(_fn)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:1(<module>)
      410    0.000    0.000    0.000    0.000 ctx_fp.py:51(_wrap_specfun)
        3    0.000    0.000    0.000    0.000 trigonometric.py:762(eval)
     1041    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       10    0.000    0.000    0.000    0.000 libelefun.py:1391(cos_sin_fixed)
       23    0.000    0.000    0.000    0.000 expr.py:106(__rpow__)
        1    0.000    0.000    0.000    0.000 sets.py:1(<module>)
     3161    0.000    0.000    0.000    0.000 expr.py:233(_eval_power)
        1    0.000    0.000    0.000    0.000 codeprinter.py:1(<module>)
     1926    0.000    0.000    0.000    0.000 domain.py:395(is_nonnegative)
        1    0.000    0.000    0.000    0.000 inversekinematics.py:344(load)
     2536    0.000    0.000    0.000    0.000 multinomial.py:55(<genexpr>)
        2    0.000    0.000    0.000    0.000 polytools.py:773(all_coeffs)
        3    0.000    0.000    0.000    0.000 polytools.py:3553(_poly_from_expr)
     2128    0.000    0.000    0.000    0.000 ring.py:11(get_ring)
       38    0.000    0.000    0.000    0.000 decimal.py:514(__new__)
       46    0.000    0.000    0.000    0.000 logic.py:134(fromstring)
      222    0.000    0.000    0.000    0.000 ctx_mp_python.py:143(__float__)
      210    0.000    0.000    0.000    0.000 densebasic.py:450(dup_normal)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:1(<module>)
      114    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:9191(_GetSumSquares)
        1    0.000    0.000    0.000    0.000 csr.py:8(<module>)
       10    0.000    0.000    0.000    0.000 numbers.py:189(__gt__)
      174    0.000    0.000    0.000    0.000 core.py:101(__setattr__)
       18    0.000    0.000    0.000    0.000 __init__.py:1567(getLogger)
        1    0.000    0.000    0.000    0.000 {posix.popen}
     3600    0.000    0.000    0.000    0.000 {callable}
        1    0.000    0.000    0.000    0.000 hyperbolic.py:1(<module>)
      164    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:200(CheckCases)
     1712    0.000    0.000    0.000    0.000 iterables.py:184(skip)
        1    0.000    0.000    0.000    0.000 arrayprint.py:5(<module>)
        2    0.000    0.000    0.000    0.000 ctx_iv.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polynomials.py:7(<module>)
        1    0.000    0.000    0.000    0.000 pyANN.py:15(<module>)
     2118    0.000    0.000    0.000    0.000 assume.py:52(arg)
        1    0.000    0.000    0.000    0.000 groundtypes.py:1(<module>)
        2    0.000    0.000    0.000    0.000 polytools.py:650(to_field)
        1    0.000    0.000    0.000    0.000 facts.py:69(deduce_alpha_implications)
        1    0.000    0.000    0.000    0.000 csr.py:10(swig_import_helper)
        1    0.000    0.000    0.000    0.000 version.py:63(StrictVersion)
      635    0.000    0.000    0.000    0.000 domain.py:59(__hash__)
      293    0.000    0.000    0.000    0.000 sre_parse.py:268(_escape)
       18    0.000    0.000    0.000    0.000 __init__.py:1025(getLogger)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:7(<module>)
        8    0.000    0.000    0.000    0.000 boolalg.py:11(__and__)
        3    0.000    0.000    0.000    0.000 bessel.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linalg.py:10(<module>)
      118    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
       10    0.000    0.000    0.000    0.000 libelefun.py:1122(cos_sin_basecase)
     3515    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 polytools.py:2365(primitive)
      232    0.000    0.000    0.000    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
        2    0.000    0.000    0.000    0.000 shutil.py:46(copyfileobj)
        1    0.000    0.000    0.000    0.000 test_dataset.py:17(<module>)
      178    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1594(<lambda>)
       76    0.000    0.000    0.000    0.000 ctx_mp_python.py:400(__pos__)
      376    0.000    0.000    0.000    0.000 ctx_mp_python.py:378(<lambda>)
     1562    0.000    0.000    0.000    0.000 mul.py:469(class_key)
      494    0.000    0.000    0.000    0.000 {method 'has_key' of 'dict' objects}
      292    0.000    0.000    0.000    0.000 {filter}
      498    0.000    0.000    0.000    0.000 polyoptions.py:49(preprocess)
     1029    0.000    0.000    0.000    0.000 str.py:91(_print_Dummy)
      963    0.000    0.000    0.000    0.000 evalf.py:921(<lambda>)
        1    0.000    0.000    0.000    0.000 arpack.py:7(<module>)
       53    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:194(GetHandledConditions)
        1    0.000    0.000    0.000    0.000 minpack.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:99(IKFastSolver)
        1    0.000    0.000    0.000    0.000 lapack.py:5(<module>)
      530    0.000    0.000    0.000    0.000 polyoptions.py:490(preprocess)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:4(AST)
        1    0.000    0.000    0.000    0.000 monomialtools.py:1(<module>)
      410    0.000    0.000    0.000    0.000 ctx_iv.py:341(_wrap_specfun)
       93    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
        2    0.000    0.000    0.000    0.000 optparse.py:1258(_populate_option_list)
        1    0.000    0.000    0.000    0.000 zipfile.py:501(ZipExtFile)
       24    0.000    0.000    0.000    0.000 matrices.py:1482(<genexpr>)
      154    0.000    0.000    0.000    0.000 posixpath.py:120(dirname)
       42    0.000    0.000    0.000    0.000 cache.py:50(__cacheit)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 defmatrix.py:1(<module>)
       38    0.000    0.000    0.000    0.000 _inspect.py:142(formatargspec)
       90    0.000    0.000    0.000    0.000 __init__.py:2001(has_metadata)
        1    0.000    0.000    0.000    0.000 solvers.py:14(<module>)
        1    0.000    0.000    0.000    0.000 boolalg.py:1(<module>)
        4    0.000    0.000    0.000    0.000 gettext.py:641(gettext)
       46    0.000    0.000    0.000    0.000 polyclasses.py:1087(one)
        1    0.000    0.000    0.000    0.000 iterative.py:1(<module>)
        3    0.000    0.000    0.000    0.000 optparse.py:1368(parse_args)
      243    0.000    0.000    0.000    0.000 cythonutils.py:8(cythonized)
      365    0.000    0.000    0.000    0.000 str.py:353(_print_Rational)
        4    0.000    0.000    0.000    0.000 gettext.py:603(dgettext)
      410    0.000    0.000    0.000    0.000 ctx_mp_python.py:1007(_wrap_specfun)
        2    0.000    0.000    0.000    0.000 function_base.py:1(<module>)
       71    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:183(AddCases)
      151    0.000    0.000    0.000    0.000 sre_parse.py:236(_class_escape)
     1004    0.000    0.000    0.000    0.000 polytools.py:437(get_domain)
      824    0.000    0.000    0.000    0.000 relational.py:139(lhs)
       46    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:123(__str__)
      354    0.000    0.000    0.000    0.000 __init__.py:2483(<lambda>)
     1302    0.000    0.000    0.000    0.000 version.py:254(<genexpr>)
     1034    0.000    0.000    0.000    0.000 densebasic.py:35(poly_TC)
       93    0.000    0.000    0.000    0.000 logic.py:259(flatten)
        4    0.000    0.000    0.000    0.000 gettext.py:537(translation)
        1    0.000    0.000    0.000    0.000 __init__.py:1778(MemoizedZipManifests)
        1    0.000    0.000    0.000    0.000 ellipse.py:8(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:301(_add_aliases)
        4    0.000    0.000    0.000    0.000 gettext.py:497(find)
        2    0.000    0.000    0.000    0.000 ctx_iv.py:296(_init_builtins)
      835    0.000    0.000    0.000    0.000 six.py:184(find_module)
       34    0.000    0.000    0.000    0.000 ctx_iv.py:379(_mpq)
       99    0.000    0.000    0.000    0.000 multinomial.py:1(binomial_coefficients)
       76    0.000    0.000    0.000    0.000 libmpc.py:105(mpc_pos)
        1    0.000    0.000    0.000    0.000 test_group.py:17(<module>)
      168    0.000    0.000    0.000    0.000 ikfast_AST.py:80(end)
     1346    0.000    0.000    0.000    0.000 posixpath.py:44(normcase)
        2    0.000    0.000    0.000    0.000 polyclasses.py:651(primitive)
      108    0.000    0.000    0.000    0.000 polyoptions.py:333(default)
       21    0.000    0.000    0.000    0.000 logic.py:293(_eval_propagate_not)
        6    0.000    0.000    0.000    0.000 fractionfield.py:102(from_PolynomialRing)
       52    0.000    0.000    0.000    0.000 densebasic.py:829(dmp_negative_p)
       63    0.000    0.000    0.000    0.000 genericpath.py:34(isfile)
        1    0.000    0.000    0.000    0.000 dis.py:1(<module>)
        1    0.000    0.000    0.000    0.000 main.py:1(<module>)
      899    0.000    0.000    0.000    0.000 facts.py:55(list_populate)
      344    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        7    0.000    0.000    0.000    0.000 matrices.py:331(__array__)
        1    0.000    0.000    0.000    0.000 errors.py:9(<module>)
       55    0.000    0.000    0.000    0.000 libmpf.py:880(python_mpf_mul_int)
       60    0.000    0.000    0.000    0.000 codecs.py:311(decode)
        1    0.000    0.000    0.000    0.000 inversekinematics.py:1212(getcompiler)
        1    0.000    0.000    0.000    0.000 zipfile.py:420(_ZipDecrypter)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:51(<module>)
       49    0.000    0.000    0.000    0.000 sre_compile.py:411(_mk_bitmap)
       64    0.000    0.000    0.000    0.000 integerring.py:20(get_field)
        7    0.000    0.000    0.000    0.000 matrices.py:3193(matrix2numpy)
        1    0.000    0.000    0.000    0.000 zipfile.py:433(_GenerateCRCTable)
        3    0.000    0.000    0.000    0.000 optparse.py:1319(get_default_values)
       27    0.000    0.000    0.000    0.000 function.py:88(__new__)
      812    0.000    0.000    0.000    0.000 ikfast_AST.py:109(getEquationsUsed)
      622    0.000    0.000    0.000    0.000 stat.py:55(S_ISLNK)
        3    0.000    0.000    0.000    0.000 factorials.py:1(<module>)
       37    0.000    0.000    0.000    0.000 nosetester.py:170(__init__)
       43    0.000    0.000    0.000    0.000 _inspect.py:98(getargspec)
      302    0.000    0.000    0.000    0.000 libintmath.py:341(ifac)
        1    0.000    0.000    0.000    0.000 test_attrs.py:16(<module>)
      118    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        1    0.000    0.000    0.000    0.000 numbers.py:8(<module>)
        6    0.000    0.000    0.000    0.000 polynomialring.py:175(gcd)
        2    0.000    0.000    0.000    0.000 misc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bsr.py:8(<module>)
        1    0.000    0.000    0.000    0.000 facts.py:301(split_rules_tt_tf_ft_ff)
     1177    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        6    0.000    0.000    0.000    0.000 polyclasses.py:613(gcd)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:15(<module>)
        1    0.000    0.000    0.000    0.000 indexed.py:88(<module>)
        5    0.000    0.000    0.000    0.000 libelefun.py:1011(exponential_series)
        2    0.000    0.000    0.000    0.000 libelefun.py:10(<module>)
        1    0.000    0.000    0.000    0.000 extras.py:10(<module>)
        1    0.000    0.000    0.000    0.000 polycontext.py:1(<module>)
        1    0.000    0.000    0.000    0.000 umfpack.py:6(<module>)
        1    0.000    0.000    0.000    0.000 logic.py:8(<module>)
        1    0.000    0.000    0.000    0.000 polyerrors.py:1(<module>)
        6    0.000    0.000    0.000    0.000 matrices.py:446(__div__)
       41    0.000    0.000    0.000    0.000 decorators.py:50(deco)
      116    0.000    0.000    0.000    0.000 polyclasses.py:1071(half_per)
        1    0.000    0.000    0.000    0.000 visibilitymodel.py:66(<module>)
        1    0.000    0.000    0.000    0.000 quoprimime.py:27(<module>)
        9    0.000    0.000    0.000    0.000 numbers.py:822(factors)
      100    0.000    0.000    0.000    0.000 sre_parse.py:189(__init__)
        3    0.000    0.000    0.000    0.000 inversekinematics.py:640(getstatsfilename)
        1    0.000    0.000    0.000    0.000 __init__.py:2843(DistInfoDistribution)
        1    0.000    0.000    0.000    0.000 test_h5.py:10(<module>)
       63    0.000    0.000    0.000    0.000 {h5py._objects.with_phil}
        1    0.000    0.000    0.000    0.000 linalg.py:458(inv)
      110    0.000    0.000    0.000    0.000 ctx_mp_python.py:348(_mpf_)
      485    0.000    0.000    0.000    0.000 urllib.py:1217(<genexpr>)
      288    0.000    0.000    0.000    0.000 stat.py:40(S_ISDIR)
      691    0.000    0.000    0.000    0.000 collections.py:349(<genexpr>)
        2    0.000    0.000    0.000    0.000 functions.py:1(<module>)
        2    0.000    0.000    0.000    0.000 evalf.py:606(evalf_atan)
       41    0.000    0.000    0.000    0.000 decorators.py:55(__sympifyit)
      485    0.000    0.000    0.000    0.000 urlparse.py:332(<genexpr>)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:1(<module>)
      323    0.000    0.000    0.000    0.000 logic.py:11(fuzzy_bool)
      109    0.000    0.000    0.000    0.000 ikfast_AST.py:400(__init__)
        1    0.000    0.000    0.000    0.000 doctest.py:1106(DocTestRunner)
        2    0.000    0.000    0.000    0.000 visualization.py:3(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:74(<module>)
      219    0.000    0.000    0.000    0.000 sre_parse.py:74(opengroup)
        1    0.000    0.000    0.000    0.000 limits.py:1(<module>)
       19    0.000    0.000    0.000    0.000 nosetester.py:511(_numpy_tester)
        1    0.000    0.000    0.000    0.000 Grasper.py:11(<module>)
     2413    0.000    0.000    0.000    0.000 expr.py:1863(_eval_expand_trig)
      578    0.000    0.000    0.000    0.000 sre_compile.py:101(fixup)
      735    0.000    0.000    0.000    0.000 add.py:187(class_key)
        8    0.000    0.000    0.000    0.000 numbers.py:1423(_eval_power)
        1    0.000    0.000    0.000    0.000 __init__.py:262(_reset_cache)
       60    0.000    0.000    0.000    0.000 {method 'splitlines' of 'unicode' objects}
      509    0.000    0.000    0.000    0.000 numbers.py:1018(__abs__)
        1    0.000    0.000    0.000    0.000 misc.py:127(addOptions)
        3    0.000    0.000    0.000    0.000 numeric.py:365(extend_all)
       60    0.000    0.000    0.000    0.000 {_codecs.utf_8_decode}
       32    0.000    0.000    0.000    0.000 densearith.py:1491(dmp_ff_div)
       71    0.000    0.000    0.000    0.000 sre_parse.py:227(isname)
       12    0.000    0.000    0.000    0.000 ctx_iv.py:385(convert)
      258    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:243(_CheckPreemptFn)
        5    0.000    0.000    0.000    0.000 ssl.py:115(_import_symbols)
       45    0.000    0.000    0.000    0.000 optparse.py:610(_set_attrs)
       32    0.000    0.000    0.000    0.000 decimal.py:986(as_tuple)
       19    0.000    0.000    0.000    0.000 factor_.py:726(factorint)
        1    0.000    0.000    0.000    0.000 version.py:228(LooseVersion)
        1    0.000    0.000    0.000    0.000 kinematicreachability.py:49(<module>)
        1    0.000    0.000    0.000    0.000 simplify.py:1(<module>)
        1    0.000    0.000    0.000    0.000 test_h5f.py:10(<module>)
       16    0.000    0.000    0.000    0.000 {dir}
        2    0.000    0.000    0.000    0.000 six.py:689(exec_)
       58    0.000    0.000    0.000    0.000 polyclasses.py:1091(numer)
        1    0.000    0.000    0.000    0.000 test_h5p.py:10(<module>)
      123    0.000    0.000    0.000    0.000 ikfast_AST.py:415(end)
        1    0.000    0.000    0.000    0.000 grasping.py:150(<module>)
       14    0.000    0.000    0.000    0.000 numbers.py:370(_eval_power)
      731    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 bsr.py:10(swig_import_helper)
      517    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 expr.py:9(Expr)
        2    0.000    0.000    0.000    0.000 optparse.py:1248(_add_help_option)
        3    0.000    0.000    0.000    0.000 optparse.py:838(__init__)
       39    0.000    0.000    0.000    0.000 fromnumeric.py:1743(sum)
      148    0.000    0.000    0.000    0.000 pkgutil.py:366(get_importer)
        1    0.000    0.000    0.000    0.000 runner.py:1(<module>)
      166    0.000    0.000    0.000    0.000 numbers.py:1112(__ge__)
       27    0.000    0.000    0.000    0.000 symbol.py:160(__xnew__)
      191    0.000    0.000    0.000    0.000 core.py:80(__setattr__)
       55    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:173(Clone)
        1    0.000    0.000    0.000    0.000 test_file.py:14(<module>)
     1736    0.000    0.000    0.000    0.000 {chr}
       25    0.000    0.000    0.000    0.000 libmpf.py:1016(mpf_pow_int)
        1    0.000    0.000    0.000    0.000 exponential.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:95(init_builtins)
       51    0.000    0.000    0.000    0.000 ikfast_AST.py:569(__init__)
      100    0.000    0.000    0.000    0.000 {_sre.compile}
      824    0.000    0.000    0.000    0.000 relational.py:143(rhs)
       78    0.000    0.000    0.000    0.000 polytools.py:457(get_modulus)
        1    0.000    0.000    0.000    0.000 test_h5t.py:10(<module>)
       41    0.000    0.000    0.000    0.000 numbers.py:1705(__ne__)
        1    0.000    0.000    0.000    0.000 {cPickle.dump}
        1    0.000    0.000    0.000    0.000 decomp.py:15(<module>)
        1    0.000    0.000    0.000    0.000 test_objects.py:10(<module>)
        1    0.000    0.000    0.000    0.000 _iotools.py:3(<module>)
        1    0.000    0.000    0.000    0.000 pythonfinitefield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 relational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 base.py:1(<module>)
       64    0.000    0.000    0.000    0.000 rationalfield.py:18(get_ring)
        1    0.000    0.000    0.000    0.000 numerictypes.py:957(_register_types)
        1    0.000    0.000    0.000    0.000 optparse.py:1253(_add_version_option)
       26    0.000    0.000    0.000    0.000 numerictypes.py:229(bitname)
        1    0.000    0.000    0.000    0.000 _polybase.py:8(<module>)
        1    0.000    0.000    0.000    0.000 csc.py:8(<module>)
        2    0.000    0.000    0.000    0.000 rational.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polytools.py:73(Poly)
        1    0.000    0.000    0.000    0.000 inversekinematics.py:416(getDefaultFreeIncrements)
      512    0.000    0.000    0.000    0.000 evalf.py:94(complex_accuracy)
      465    0.000    0.000    0.000    0.000 numbers.py:641(_eval_is_positive)
      974    0.000    0.000    0.000    0.000 stat.py:24(S_IFMT)
        1    0.000    0.000    0.000    0.000 piecewise.py:1(<module>)
      451    0.000    0.000    0.000    0.000 {method 'get' of 'dictproxy' objects}
       29    0.000    0.000    0.000    0.000 __init__.py:205(_acquireLock)
        8    0.000    0.000    0.000    0.000 ctx_iv.py:40(__new__)
        1    0.000    0.000    0.000    0.000 __init__.py:12(<module>)
        2    0.000    0.000    0.000    0.000 polytools.py:1003(eject)
       58    0.000    0.000    0.000    0.000 polyclasses.py:1095(denom)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:90(init_builtins)
      106    0.000    0.000    0.000    0.000 polyclasses.py:1293(__nonzero__)
        1    0.000    0.000    0.000    0.000 py3k.py:71(sixu)
        1    0.000    0.000    0.000    0.000 operations.py:1(<module>)
        1    0.000    0.000    0.000    0.000 csc.py:10(swig_import_helper)
        1    0.000    0.000    0.000    0.000 point.py:7(<module>)
    11/10    0.000    0.000    0.000    0.000 factor_.py:201(perfect_power)
      219    0.000    0.000    0.000    0.000 sre_parse.py:85(closegroup)
       68    0.000    0.000    0.000    0.000 numeric.py:1835(array_str)
     1032    0.000    0.000    0.000    0.000 version.py:308(_parse_letter_version)
      261    0.000    0.000    0.000    0.000 sets.py:429(Rational)
      168    0.000    0.000    0.000    0.000 pretty_symbology.py:10(U)
        1    0.000    0.000    0.000    0.000 test_slicing.py:17(<module>)
      166    0.000    0.000    0.000    0.000 six.py:141(__init__)
        9    0.000    0.000    0.000    0.000 extras.py:232(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:6(<module>)
       38    0.000    0.000    0.000    0.000 _inspect.py:67(getargs)
      600    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1169(<lambda>)
        9    0.000    0.000    0.000    0.000 extras.py:236(getdoc)
       46    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:120(__unicode__)
        2    0.000    0.000    0.000    0.000 zetazeros.py:16(<module>)
        2    0.000    0.000    0.000    0.000 {posix.remove}
        1    0.000    0.000    0.000    0.000 __init__.py:71(search_function)
       13    0.000    0.000    0.000    0.000 {eval}
      233    0.000    0.000    0.000    0.000 posixpath.py:52(isabs)
        3    0.000    0.000    0.000    0.000 boolalg.py:15(__or__)
        1    0.000    0.000    0.000    0.000 products.py:1(<module>)
      200    0.000    0.000    0.000    0.000 sre_compile.py:546(isstring)
       13    0.000    0.000    0.000    0.000 difflib.py:348(find_longest_match)
       40    0.000    0.000    0.000    0.000 expr.py:592(arglist)
      210    0.000    0.000    0.000    0.000 numbers.py:1508(__gt__)
       55    0.000    0.000    0.000    0.000 ikfast_AST.py:582(generate)
        1    0.000    0.000    0.000    0.000 line.py:10(<module>)
       12    0.000    0.000    0.000    0.000 ctypeslib.py:330(prep_simple)
        1    0.000    0.000    0.000    0.000 linesearch.py:1(<module>)
        8    0.000    0.000    0.000    0.000 gettext.py:205(_expand_lang)
        2    0.000    0.000    0.000    0.000 quadrature.py:1(<module>)
        1    0.000    0.000    0.000    0.000 test_dataset_getitem.py:41(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:14(<module>)
      168    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1261(endSolution)
       80    0.000    0.000    0.000    0.000 ikfast_AST.py:537(end)
        2    0.000    0.000    0.000    0.000 numbers.py:1918(_eval_power)
        1    0.000    0.000    0.000    0.000 slsqp.py:6(<module>)
        1    0.000    0.000    0.000    0.000 lbfgsb.py:27(<module>)
      944    0.000    0.000    0.000    0.000 {_sre.getlower}
        1    0.000    0.000    0.000    0.000 TaskManipulation.py:11(<module>)
      708    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
       29    0.000    0.000    0.000    0.000 __init__.py:214(_releaseLock)
      210    0.000    0.000    0.000    0.000 pythonrationaltype.py:48(__hash__)
      442    0.000    0.000    0.000    0.000 numbers.py:1373(__nonzero__)
        4    0.000    0.000    0.000    0.000 facts.py:267(rules_2prereq)
        1    0.000    0.000    0.000    0.000 assume.py:1(<module>)
        3    0.000    0.000    0.000    0.000 polytools.py:2605(factor_list)
        1    0.000    0.000    0.000    0.000 generate.py:3(<module>)
     1438    0.000    0.000    0.000    0.000 {ord}
      103    0.000    0.000    0.000    0.000 {method 'encode' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 opcode.py:5(<module>)
        1    0.000    0.000    0.000    0.000 ImagePalette.py:19(<module>)
      212    0.000    0.000    0.000    0.000 ikfast_AST.py:106(getPresetCheckForZeros)
        1    0.000    0.000    0.000    0.000 format.py:149(<module>)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:1(<module>)
      368    0.000    0.000    0.000    0.000 {method 'startswith' of 'unicode' objects}
       61    0.000    0.000    0.000    0.000 power.py:12(integer_nthroot)
        8    0.000    0.000    0.000    0.000 core.py:7777(__init__)
      168    0.000    0.000    0.000    0.000 {unicodedata.lookup}
      216    0.000    0.000    0.000    0.000 ctx_mp_python.py:127(<lambda>)
       74    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        1    0.000    0.000    0.000    0.000 __init__.py:5(<module>)
      114    0.000    0.000    0.000    0.000 ctx_mp_python.py:618(<lambda>)
        1    0.000    0.000    0.000    0.000 hermite.py:59(<module>)
        1    0.000    0.000    0.000    0.000 heapq.py:31(<module>)
      512    0.000    0.000    0.000    0.000 libintmath.py:58(python_trailing)
        1    0.000    0.000    0.000    0.000 hyper.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sets.py:3(<module>)
      111    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       18    0.000    0.000    0.000    0.000 factor_.py:626(_factorint_small)
       82    0.000    0.000    0.000    0.000 ikfast_AST.py:491(end)
       39    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
        2    0.000    0.000    0.000    0.000 polytools.py:4815(_factors_product)
      6/2    0.000    0.000    0.000    0.000 polyclasses.py:422(sub)
        4    0.000    0.000    0.000    0.000 exponential.py:297(eval)
        1    0.000    0.000    0.000    0.000 cse_main.py:2(<module>)
       28    0.000    0.000    0.000    0.000 inversekinematics.py:595(<genexpr>)
        1    0.000    0.000    0.000    0.000 chebyshev.py:87(<module>)
        1    0.000    0.000    0.000    0.000 polytools.py:2275(lcm)
        1    0.000    0.000    0.000    0.000 cache.py:1(<module>)
       10    0.000    0.000    0.000    0.000 ctx_iv.py:218(_binary_op)
        1    0.000    0.000    0.000    0.000 hermite_e.py:59(<module>)
        1    0.000    0.000    0.000    0.000 legendre.py:83(<module>)
       68    0.000    0.000    0.000    0.000 arrayprint.py:340(array2string)
        1    0.000    0.000    0.000    0.000 numbers.py:469(Rational)
        7    0.000    0.000    0.000    0.000 boolalg.py:19(__invert__)
        1    0.000    0.000    0.000    0.000 dataset.py:173(Dataset)
        3    0.000    0.000    0.000    0.000 __init__.py:1507(basicConfig)
       11    0.000    0.000    0.000    0.000 ikfast_AST.py:146(__init__)
        1    0.000    0.000    0.000    0.000 coo.py:8(<module>)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:3(<module>)
        2    0.000    0.000    0.000    0.000 polytools.py:967(inject)
        1    0.000    0.000    0.000    0.000 laguerre.py:59(<module>)
       60    0.000    0.000    0.000    0.000 codecs.py:302(__init__)
        1    0.000    0.000    0.000    0.000 exprtools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 flinalg.py:5(<module>)
        1    0.000    0.000    0.000    0.000 integers.py:1(<module>)
        1    0.000    0.000    0.000    0.000 python.py:3(<module>)
        1    0.000    0.000    0.000    0.000 fftpack.py:32(<module>)
        2    0.000    0.000    0.000    0.000 optimization.py:1(<module>)
      483    0.000    0.000    0.000    0.000 sre_parse.py:145(__setitem__)
        1    0.000    0.000    0.000    0.000 base64.py:3(<module>)
        2    0.000    0.000    0.000    0.000 math2.py:6(<module>)
       27    0.000    0.000    0.000    0.000 core.py:903(__init__)
        2    0.000    0.000    0.000    0.000 identification.py:4(<module>)
        8    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:8678(SolvePrismaticHingePairVariables)
        1    0.000    0.000    0.000    0.000 coo.py:10(swig_import_helper)
        4    0.000    0.000    0.000    0.000 __init__.py:827(__init__)
        1    0.000    0.000    0.000    0.000 token.py:1(<module>)
        1    0.000    0.000    0.000    0.000 errors.py:5(<module>)
        1    0.000    0.000    0.000    0.000 misc.py:15(<module>)
        1    0.000    0.000    0.000    0.000 printer.py:66(<module>)
       52    0.000    0.000    0.000    0.000 {posix.access}
      173    0.000    0.000    0.000    0.000 {method 'iteritems' of 'dictproxy' objects}
        1    0.000    0.000    0.000    0.000 test_dataset_swmr.py:1(<module>)
       81    0.000    0.000    0.000    0.000 logic.py:83(__new__)
        8    0.000    0.000    0.000    0.000 core.py:7782(getdoc)
        1    0.000    0.000    0.000    0.000 BaseManipulation.py:11(<module>)
        1    0.000    0.000    0.000    0.000 cobyla.py:9(<module>)
       83    0.000    0.000    0.000    0.000 collections.py:375(<genexpr>)
        6    0.000    0.000    0.000    0.000 quadrature.py:458(__init__)
       61    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}
        2    0.000    0.000    0.000    0.000 __init__.py:895(__init__)
        1    0.000    0.000    0.000    0.000 polyclasses.py:141(DMP)
        1    0.000    0.000    0.000    0.000 sympyfinitefield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 compressed.py:2(<module>)
        7    0.000    0.000    0.000    0.000 inspect.py:803(getargspec)
        1    0.000    0.000    0.000    0.000 sympyrationalfield.py:1(<module>)
      117    0.000    0.000    0.000    0.000 functools.py:39(wraps)
        7    0.000    0.000    0.000    0.000 polytools.py:1761(LM)
        1    0.000    0.000    0.000    0.000 dia.py:8(<module>)
        2    0.000    0.000    0.000    0.000 facts.py:460(rules_beta)
        1    0.000    0.000    0.000    0.000 polygon.py:1(<module>)
        1    0.000    0.000    0.000    0.000 add.py:1(<module>)
        4    0.000    0.000    0.000    0.000 numbers.py:1353(_eval_power)
        4    0.000    0.000    0.000    0.000 __init__.py:665(__init__)
        1    0.000    0.000    0.000    0.000 finitefield.py:1(<module>)
        3    0.000    0.000    0.000    0.000 libelefun.py:233(pi_fixed)
        1    0.000    0.000    0.000    0.000 zeros.py:2(<module>)
        1    0.000    0.000    0.000    0.000 gmpyfinitefield.py:1(<module>)
      630    0.000    0.000    0.000    0.000 numbers.py:1412(_eval_evalf)
        1    0.000    0.000    0.000    0.000 csgraph.py:8(<module>)
        2    0.000    0.000    0.000    0.000 polyclasses.py:343(eject)
        1    0.000    0.000    0.000    0.000 nnls.py:1(<module>)
      105    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:118(__init__)
        1    0.000    0.000    0.000    0.000 blas.py:6(<module>)
        3    0.000    0.000    0.000    0.000 polyclasses.py:708(factor_list)
       90    0.000    0.000    0.000    0.000 ctx_mp_python.py:972(_wrap_libmp_function)
        1    0.000    0.000    0.000    0.000 attrs.py:15(<module>)
        1    0.000    0.000    0.000    0.000 textplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 order.py:1(<module>)
       56    0.000    0.000    0.000    0.000 rational.py:31(__new__)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:583(__init__)
       19    0.000    0.000    0.000    0.000 ask.py:139(register_handler)
        1    0.000    0.000    0.000    0.000 densetools.py:1(<module>)
        5    0.000    0.000    0.000    0.000 ccompiler.py:93(__init__)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:10(ExpressionDomain)
        2    0.000    0.000    0.000    0.000 densebasic.py:1520(dmp_eject)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:604(getClassInit)
        6    0.000    0.000    0.000    0.000 matrices.py:735(__init__)
        2    0.000    0.000    0.000    0.000 polyclasses.py:338(inject)
        2    0.000    0.000    0.000    0.000 optparse.py:1277(set_usage)
        1    0.000    0.000    0.000    0.000 densearith.py:1(<module>)
        1    0.000    0.000    0.000    0.000 runtests.py:70(get_sympy_dir)
       43    0.000    0.000    0.000    0.000 complexes.py:273(_eval_power)
        1    0.000    0.000    0.000    0.000 dia.py:10(swig_import_helper)
        1    0.000    0.000    0.000    0.000 csgraph.py:10(swig_import_helper)
       82    0.000    0.000    0.000    0.000 ikfast_AST.py:549(end)
        1    0.000    0.000    0.000    0.000 str.py:3(<module>)
        1    0.000    0.000    0.000    0.000 records.py:36(<module>)
        2    0.000    0.000    0.000    0.000 libmpi.py:4(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:285(_add_types)
        2    0.000    0.000    0.000    0.000 densebasic.py:1485(dmp_inject)
        1    0.000    0.000    0.000    0.000 polyutils.py:45(<module>)
        1    0.000    0.000    0.000    0.000 polyclasses.py:618(lcm)
      314    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:415(chop)
        1    0.000    0.000    0.000    0.000 weakref.py:47(__init__)
        1    0.000    0.000    0.000    0.000 test_attrs_data.py:14(<module>)
        4    0.000    0.000    0.000    0.000 matrices.py:961(extract)
       16    0.000    0.000    0.000    0.000 pythonrationaltype.py:75(__add__)
        1    0.000    0.000    0.000    0.000 os.py:35(_get_exports_list)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
      686    0.000    0.000    0.000    0.000 _structures.py:43(__neg__)
        1    0.000    0.000    0.000    0.000 numerictypes.py:451(_set_array_types)
        1    0.000    0.000    0.000    0.000 Image.py:444(Image)
        1    0.000    0.000    0.000    0.000 polyoptions.py:157(_init_dependencies_order)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 defchararray.py:17(<module>)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {posix.open}
        1    0.000    0.000    0.000    0.000 gruntz.py:117(<module>)
        1    0.000    0.000    0.000    0.000 selections.py:15(<module>)
        1    0.000    0.000    0.000    0.000 factortools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:14(__sympy_debug)
        3    0.000    0.000    0.000    0.000 factortools.py:1211(dmp_factor_list)
  186/180    0.000    0.000    0.000    0.000 logic.py:94(__hash__)
       90    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        1    0.000    0.000    0.000    0.000 euclidtools.py:1716(dmp_lcm)
      310    0.000    0.000    0.000    0.000 {method 'seek' of 'cStringIO.StringO' objects}
        1    0.000    0.000    0.000    0.000 euclidtools.py:1646(dup_lcm)
      244    0.000    0.000    0.000    0.000 functions.py:84(defun)
        1    0.000    0.000    0.000    0.000 anneal.py:5(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:75(CFUNCTYPE)
        1    0.000    0.000    0.000    0.000 euclidtools.py:1599(dup_rr_lcm)
        1    0.000    0.000    0.000    0.000 _datasource.py:35(<module>)
        1    0.000    0.000    0.000    0.000 numberfields.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:58(pretty_try_use_unicode)
      271    0.000    0.000    0.000    0.000 {numpy.core.multiarray.add_docstring}
        2    0.000    0.000    0.000    0.000 ctx_iv.py:134(__new__)
        1    0.000    0.000    0.000    0.000 spawn.py:7(<module>)
        1    0.000    0.000    0.000    0.000 test_dimension_scales.py:10(<module>)
       16    0.000    0.000    0.000    0.000 __init__.py:1127(__init__)
        3    0.000    0.000    0.000    0.000 factortools.py:1143(dup_factor_list)
       45    0.000    0.000    0.000    0.000 optparse.py:636(_check_type)
        1    0.000    0.000    0.000    0.000 piecewise.py:44(Piecewise)
      107    0.000    0.000    0.000    0.000 __init__.py:726(__iter__)
      173    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:6819(<lambda>)
       14    0.000    0.000    0.000    0.000 __init__.py:144(_check_size)
       74    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 sympyrationalfield.py:14(SymPyRationalField)
      100    0.000    0.000    0.000    0.000 sre_parse.py:67(__init__)
       77    0.000    0.000    0.000    0.000 {repr}
      344    0.000    0.000    0.000    0.000 version.py:342(_parse_local_version)
        8    0.000    0.000    0.000    0.000 locale.py:365(normalize)
        6    0.000    0.000    0.000    0.000 ikfast_AST.py:155(numsolutions)
       15    0.000    0.000    0.000    0.000 __init__.py:1071(_fixupParents)
        1    0.000    0.000    0.000    0.000 delta_functions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 threading.py:1081(__init__)
       56    0.000    0.000    0.000    0.000 rational.py:7(create_reduced)
      430    0.000    0.000    0.000    0.000 domain.py:66(normal)
        1    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:206(__init__)
       83    0.000    0.000    0.000    0.000 collections.py:373(<genexpr>)
        1    0.000    0.000    0.000    0.000 doccer.py:2(<module>)
      436    0.000    0.000    0.000    0.000 version.py:362(<lambda>)
        2    0.000    0.000    0.000    0.000 linalg.py:99(<module>)
      172    0.000    0.000    0.000    0.000 __init__.py:2035(__init__)
     27/3    0.000    0.000    0.000    0.000 libelefun.py:211(bs_chudnovsky)
      107    0.000    0.000    0.000    0.000 ikfast_AST.py:112(GetZeroThreshold)
        3    0.000    0.000    0.000    0.000 {posix.urandom}
      163    0.000    0.000    0.000    0.000 polytools.py:215(_hashable_content)
       26    0.000    0.000    0.000    0.000 numbers.py:1070(__mod__)
        4    0.000    0.000    0.000    0.000 logic.py:338(_eval_propagate_not)
       55    0.000    0.000    0.000    0.000 ikfast_AST.py:585(end)
      546    0.000    0.000    0.000    0.000 str.py:467(_print_Zero)
        2    0.000    0.000    0.000    0.000 ccompiler.py:881(mkpath)
       20    0.000    0.000    0.000    0.000 os.py:512(getenv)
      110    0.000    0.000    0.000    0.000 ctx_mp.py:108(<lambda>)
       63    0.000    0.000    0.000    0.000 __init__.py:2287(_is_unpacked_egg)
       11    0.000    0.000    0.000    0.000 case.py:78(skipUnless)
        2    0.000    0.000    0.000    0.000 extrapolation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 containers.py:7(<module>)
        1    0.000    0.000    0.000    0.000 contextlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {cPickle.load}
        1    0.000    0.000    0.000    0.000 bdb.py:1(<module>)
        1    0.000    0.000    0.000    0.000 realdomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:781(_construct_lookups)
        1    0.000    0.000    0.000    0.000 _endian.py:1(<module>)
      252    0.000    0.000    0.000    0.000 six.py:88(__init__)
        1    0.000    0.000    0.000    0.000 dok.py:1(<module>)
        2    0.000    0.000    0.000    0.000 qfunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1147(resource_filename)
      110    0.000    0.000    0.000    0.000 logic.py:98(__eq__)
        1    0.000    0.000    0.000    0.000 ccompiler.py:323(_setup_compile)
       45    0.000    0.000    0.000    0.000 optparse.py:589(_set_opt_strings)
       10    0.000    0.000    0.000    0.000 metaclass.py:31(__init__)
        2    0.000    0.000    0.000    0.000 odes.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tnc.py:33(<module>)
       98    0.000    0.000    0.000    0.000 _inspect.py:133(strseq)
       64    0.000    0.000    0.000    0.000 {method 'split' of 'unicode' objects}
      155    0.000    0.000    0.000    0.000 {method 'read' of 'cStringIO.StringO' objects}
        1    0.000    0.000    0.000    0.000 signals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 colorize.py:4(<module>)
       16    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:430(IsPrismatic)
      372    0.000    0.000    0.000    0.000 sre_parse.py:221(isident)
       96    0.000    0.000    0.000    0.000 numeric.py:1404(rollaxis)
      492    0.000    0.000    0.000    0.000 {globals}
       16    0.000    0.000    0.000    0.000 ctx_iv.py:28(convert_mpf_)
        7    0.000    0.000    0.000    0.000 case.py:87(expectedFailure)
        1    0.000    0.000    0.000    0.000 iterables.py:583(topological_sort)
       55    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1661(generateBreak)
       18    0.000    0.000    0.000    0.000 core.py:981(__init__)
      237    0.000    0.000    0.000    0.000 operations.py:38(<genexpr>)
        1    0.000    0.000    0.000    0.000 inversekinematics.py:622(getsourcefilename)
        4    0.000    0.000    0.000    0.000 polyclasses.py:825(__sub__)
       41    0.000    0.000    0.000    0.000 UserDict.py:91(get)
        2    0.000    0.000    0.000    0.000 polynomialring.py:142(get_field)
        5    0.000    0.000    0.000    0.000 contextlib.py:54(contextmanager)
        1    0.000    0.000    0.000    0.000 latex.py:3(<module>)
      217    0.000    0.000    0.000    0.000 numbers.py:532(<genexpr>)
        1    0.000    0.000    0.000    0.000 sets.py:10(Set)
        6    0.000    0.000    0.000    0.000 numeric.py:2576(seterr)
        1    0.000    0.000    0.000    0.000 mpmathrealdomain.py:1(<module>)
       30    0.000    0.000    0.000    0.000 numerictypes.py:443(_add_array_type)
        1    0.000    0.000    0.000    0.000 iterables.py:1(<module>)
        8    0.000    0.000    0.000    0.000 trigonometric.py:15(_peeloff_pi)
        1    0.000    0.000    0.000    0.000 ode.py:203(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:417(get_provider)
       48    0.000    0.000    0.000    0.000 evalf.py:66(fastlog)
        1    0.000    0.000    0.000    0.000 message.py:92(Message)
      137    0.000    0.000    0.000    0.000 domain.py:316(__ne__)
        3    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
       86    0.000    0.000    0.000    0.000 six.py:105(__init__)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:8(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:338(_add_integer_aliases)
        1    0.000    0.000    0.000    0.000 files.py:133(File)
        1    0.000    0.000    0.000    0.000 cse_opts.py:3(<module>)
        7    0.000    0.000    0.000    0.000 inspect.py:743(getargs)
        1    0.000    0.000    0.000    0.000 error_functions.py:1(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:490(PYFUNCTYPE)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1987(all)
       24    0.000    0.000    0.000    0.000 pretty_symbology.py:100(<lambda>)
        2    0.000    0.000    0.000    0.000 os.py:136(makedirs)
        4    0.000    0.000    0.000    0.000 trigonometric.py:1065(eval)
        1    0.000    0.000    0.000    0.000 importtools.py:1(<module>)
      180    0.000    0.000    0.000    0.000 {method 'lower' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 FixTk.py:1(<module>)
        2    0.000    0.000    0.000    0.000 zeta.py:1(<module>)
       12    0.000    0.000    0.000    0.000 quadrature.py:21(__init__)
      166    0.000    0.000    0.000    0.000 functions.py:81(defun_wrapped)
      100    0.000    0.000    0.000    0.000 six.py:177(_add_module)
        1    0.000    0.000    0.000    0.000 compatibility.py:4(<module>)
        1    0.000    0.000    0.000    0.000 getlimits.py:3(<module>)
        4    0.000    0.000    0.000    0.000 calculus.py:1(<module>)
       26    0.000    0.000    0.000    0.000 matrices.py:797(row_del)
       18    0.000    0.000    0.000    0.000 matrices.py:410(<lambda>)
        2    0.000    0.000    0.000    0.000 dir_util.py:19(mkpath)
        1    0.000    0.000    0.000    0.000 test_base.py:14(<module>)
        1    0.000    0.000    0.000    0.000 base.py:201(HLObject)
       60    0.000    0.000    0.000    0.000 _inspect.py:146(<lambda>)
       30    0.000    0.000    0.000    0.000 ikfast_AST.py:377(end)
       40    0.000    0.000    0.000    0.000 ccompiler.py:162(set_executable)
        1    0.000    0.000    0.000    0.000 polyconfig.py:1(<module>)
       61    0.000    0.000    0.000    0.000 stat.py:49(S_ISREG)
       72    0.000    0.000    0.000    0.000 numerictypes.py:127(english_lower)
      123    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1649(endCheckZeros)
        1    0.000    0.000    0.000    0.000 base.py:64(default_lapl)
        1    0.000    0.000    0.000    0.000 result.py:26(TestResult)
        1    0.000    0.000    0.000    0.000 numbers.py:234(Float)
        4    0.000    0.000    0.000    0.000 ctx_base.py:47(_init_aliases)
        3    0.000    0.000    0.000    0.000 decimal.py:3782(__init__)
        6    0.000    0.000    0.000    0.000 six.py:91(__get__)
        1    0.000    0.000    0.000    0.000 __init__.py:1691(__init__)
        9    0.000    0.000    0.000    0.000 boolalg.py:149(eval)
        3    0.000    0.000    0.000    0.000 optparse.py:1420(_process_args)
       74    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
       21    0.000    0.000    0.000    0.000 inversekinematics.py:662(<genexpr>)
        3    0.000    0.000    0.000    0.000 numeric.py:2967(__enter__)
        1    0.000    0.000    0.000    0.000 datatype.py:12(<module>)
        1    0.000    0.000    0.000    0.000 polyconfig.py:33(configure)
        8    0.000    0.000    0.000    0.000 {method 'close' of 'file' objects}
        2    0.000    0.000    0.000    0.000 ctx_fp.py:12(FPContext)
       21    0.000    0.000    0.000    0.000 numerictypes.py:216(_evalname)
       72    0.000    0.000    0.000    0.000 optparse.py:833(isbasestring)
      310    0.000    0.000    0.000    0.000 {method 'tell' of 'cStringIO.StringO' objects}
        1    0.000    0.000    0.000    0.000 lobpcg.py:11(<module>)
        3    0.000    0.000    0.000    0.000 {posix.unlink}
        5    0.000    0.000    0.000    0.000 threading.py:114(RLock)
      191    0.000    0.000    0.000    0.000 numbers.py:1386(_eval_evalf)
        2    0.000    0.000    0.000    0.000 metaclass.py:20(__new__)
       74    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        1    0.000    0.000    0.000    0.000 filters.py:39(<module>)
       65    0.000    0.000    0.000    0.000 numeric.py:414(asarray)
       24    0.000    0.000    0.000    0.000 generate.py:211(primerange)
       17    0.000    0.000    0.000    0.000 posixpath.py:82(split)
       29    0.000    0.000    0.000    0.000 generate.py:132(nextprime)
        1    0.000    0.000    0.000    0.000 twodim_base.py:3(<module>)
       24    0.000    0.000    0.000    0.000 polyoptions.py:59(__init__)
        4    0.000    0.000    0.000    0.000 __init__.py:646(_addHandlerRef)
       48    0.000    0.000    0.000    0.000 ctx_iv.py:369(make_mpf)
        2    0.000    0.000    0.000    0.000 inversekinematics.py:365(getikname)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:18(<module>)
        4    0.000    0.000    0.000    0.000 numbers.py:191(__ge__)
        1    0.000    0.000    0.000    0.000 lil.py:2(<module>)
        1    0.000    0.000    0.000    0.000 singleton.py:1(<module>)
        7    0.000    0.000    0.000    0.000 specifiers.py:276(_require_version_compare)
       10    0.000    0.000    0.000    0.000 getlimits.py:151(<lambda>)
       14    0.000    0.000    0.000    0.000 boolalg.py:93(eval)
        2    0.000    0.000    0.000    0.000 expintegrals.py:1(<module>)
       23    0.000    0.000    0.000    0.000 matrices.py:2185(__getattr__)
       16    0.000    0.000    0.000    0.000 matrices.py:801(col_del)
       19    0.000    0.000    0.000    0.000 __init__.py:22(find_module)
        1    0.000    0.000    0.000    0.000 inference.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pythonrationaltype.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _globals.py:17(<module>)
        2    0.000    0.000    0.000    0.000 {_ctypes.POINTER}
        1    0.000    0.000    0.000    0.000 ccompiler.py:461(_need_link)
        1    0.000    0.000    0.000    0.000 threading.py:647(__init__)
        1    0.000    0.000    0.000    0.000 integerring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 visualfeedback.py:11(<module>)
        1    0.000    0.000    0.000    0.000 scimath.py:17(<module>)
        1    0.000    0.000    0.000    0.000 interface.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bsr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 realdomain.py:11(RealDomain)
       28    0.000    0.000    0.000    0.000 ctx_mp_python.py:334(__new__)
        2    0.000    0.000    0.000    0.000 hypergeometric.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linalg.py:76(_determine_error_states)
        1    0.000    0.000    0.000    0.000 sympyrealdomain.py:1(<module>)
        4    0.000    0.000    0.000    0.000 decorators.py:23(deprecated)
        1    0.000    0.000    0.000    0.000 memmap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ask.py:8(Q)
        2    0.000    0.000    0.000    0.000 polytools.py:1043(terms_gcd)
        1    0.000    0.000    0.000    0.000 _import_tools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 symbol.py:3(<module>)
        2    0.000    0.000    0.000    0.000 elliptic.py:63(<module>)
        3    0.000    0.000    0.000    0.000 optparse.py:1480(_process_long_opt)
      174    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        3    0.000    0.000    0.000    0.000 utils.py:117(deprecate)
       43    0.000    0.000    0.000    0.000 _inspect.py:15(ismethod)
        1    0.000    0.000    0.000    0.000 algebraicfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 test_slicing.py:289(TestFieldNames)
       15    0.000    0.000    0.000    0.000 {numpy.core.multiarray.dot}
        1    0.000    0.000    0.000    0.000 _compat.py:38(__new__)
        1    0.000    0.000    0.000    0.000 nosetester.py:6(<module>)
        1    0.000    0.000    0.000    0.000 fcode.py:18(<module>)
      112    0.000    0.000    0.000    0.000 precedence.py:40(precedence_Rational)
        1    0.000    0.000    0.000    0.000 numbers.py:131(bernoulli)
        1    0.000    0.000    0.000    0.000 ImageColor.py:20(<module>)
        6    0.000    0.000    0.000    0.000 case.py:58(decorator)
        1    0.000    0.000    0.000    0.000 test_selections.py:12(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:974(Environment)
        3    0.000    0.000    0.000    0.000 result.py:14(failfast)
       44    0.000    0.000    0.000    0.000 calculus.py:4(defun)
        2    0.000    0.000    0.000    0.000 shutil.py:54(_samefile)
        1    0.000    0.000    0.000    0.000 importtools.py:12(__sympy_debug)
      608    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
       20    0.000    0.000    0.000    0.000 assume.py:111(__new__)
        1    0.000    0.000    0.000    0.000 lambdify.py:4(<module>)
      100    0.000    0.000    0.000    0.000 matrices.py:1572(is_square)
        1    0.000    0.000    0.000    0.000 add.py:8(Add)
      106    0.000    0.000    0.000    0.000 __init__.py:956(_added_new)
        2    0.000    0.000    0.000    0.000 inversekinematics.py:310(__del__)
        1    0.000    0.000    0.000    0.000 filters.py:57(_gen_filter_tuples)
        1    0.000    0.000    0.000    0.000 trigonometry.py:3(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1695(_setup_prefix)
        1    0.000    0.000    0.000    0.000 openravepy_ext.py:83(_registerEnumPicklers)
       78    0.000    0.000    0.000    0.000 domain.py:53(__str__)
        1    0.000    0.000    0.000    0.000 coo.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 test_datatype.py:14(<module>)
        1    0.000    0.000    0.000    0.000 coreerrors.py:1(<module>)
       72    0.000    0.000    0.000    0.000 numbers.py:1415(__abs__)
      5/3    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:2282(using_polyroots)
        4    0.000    0.000    0.000    0.000 trigonometric.py:309(_eval_is_real)
        1    0.000    0.000    0.000    0.000 sqfreetools.py:1(<module>)
        6    0.000    0.000    0.000    0.000 polyroots.py:384(<genexpr>)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dep_util.py:52(newer_group)
        1    0.000    0.000    0.000    0.000 orthopolys.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sympyintegerring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:346(__init__)
        1    0.000    0.000    0.000    0.000 arrayterator.py:9(<module>)
        1    0.000    0.000    0.000    0.000 fractionfield.py:1(<module>)
        2    0.000    0.000    0.000    0.000 twodim_base.py:192(eye)
        1    0.000    0.000    0.000    0.000 polynomialring.py:1(<module>)
       21    0.000    0.000    0.000    0.000 matrices.py:2836(_matrix_sympify)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:1(<module>)
        2    0.000    0.000    0.000    0.000 simpledomain.py:10(inject)
      133    0.000    0.000    0.000    0.000 pkgutil.py:173(__init__)
        1    0.000    0.000    0.000    0.000 _polybase.py:19(ABCPolyBase)
        4    0.000    0.000    0.000    0.000 locale.py:349(_replace_encoding)
        1    0.000    0.000    0.000    0.000 mpmathrealdomain.py:6(MPmathRealDomain)
        2    0.000    0.000    0.000    0.000 differentiation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 entity.py:8(<module>)
        1    0.000    0.000    0.000    0.000 kinematicreachability.py:77(ReachabilityModel)
        1    0.000    0.000    0.000    0.000 order.py:6(Order)
        1    0.000    0.000    0.000    0.000 timeit.py:53(<module>)
        1    0.000    0.000    0.000    0.000 group.py:28(Group)
        1    0.000    0.000    0.000    0.000 _structures.py:14(<module>)
       28    0.000    0.000    0.000    0.000 libelefun.py:85(constant_memo)
        1    0.000    0.000    0.000    0.000 attrs.py:28(AttributeManager)
        3    0.000    0.000    0.000    0.000 factortools.py:505(dup_zz_factor)
        1    0.000    0.000    0.000    0.000 epathtools.py:1(<module>)
        4    0.000    0.000    0.000    0.000 __init__.py:1298(addHandler)
        4    0.000    0.000    0.000    0.000 polyclasses.py:789(is_monomial)
       90    0.000    0.000    0.000    0.000 __init__.py:127(<lambda>)
        1    0.000    0.000    0.000    0.000 unixccompiler.py:14(<module>)
       51    0.000    0.000    0.000    0.000 UserDict.py:103(__contains__)
        1    0.000    0.000    0.000    0.000 __init__.py:250(get_supported_platform)
        1    0.000    0.000    0.000    0.000 posixpath.py:424(relpath)
       38    0.000    0.000    0.000    0.000 _inspect.py:43(iscode)
      114    0.000    0.000    0.000    0.000 numbers.py:1345(__abs__)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:428(_construct_char_code_lookup)
        3    0.000    0.000    0.000    0.000 utils.py:73(__call__)
      240    0.000    0.000    0.000    0.000 {method 'strip' of 'unicode' objects}
        5    0.000    0.000    0.000    0.000 getlimits.py:245(__init__)
        5    0.000    0.000    0.000    0.000 threading.py:132(__init__)
        1    0.000    0.000    0.000    0.000 polysys.py:1(<module>)
       43    0.000    0.000    0.000    0.000 _inspect.py:28(isfunction)
        1    0.000    0.000    0.000    0.000 {h5py._conv.register_converters}
        2    0.000    0.000    0.000    0.000 optparse.py:366(__init__)
       56    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:171(__init__)
        6    0.000    0.000    0.000    0.000 core.py:1139(__init__)
        4    0.000    0.000    0.000    0.000 __init__.py:694(createLock)
        8    0.000    0.000    0.000    0.000 nonlin.py:211(_set_doc)
        1    0.000    0.000    0.000    0.000 mathml.py:3(<module>)
        1    0.000    0.000    0.000    0.000 index_methods.py:10(<module>)
        1    0.000    0.000    0.000    0.000 fractions.py:44(Fraction)
        1    0.000    0.000    0.000    0.000 sysconfig.py:51(_python_build)
       40    0.000    0.000    0.000    0.000 numerictypes.py:154(english_upper)
       74    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 curve.py:7(<module>)
        1    0.000    0.000    0.000    0.000 _compat.py:30(with_metaclass)
        1    0.000    0.000    0.000    0.000 data.py:7(<module>)
        1    0.000    0.000    0.000    0.000 gtk.py:2(<module>)
        5    0.000    0.000    0.000    0.000 optparse.py:933(__init__)
        1    0.000    0.000    0.000    0.000 groebnertools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 dia.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:706(<lambda>)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:20(__new__)
        1    0.000    0.000    0.000    0.000 pythonrealdomain.py:1(<module>)
       80    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1754(endStoreSolution)
        1    0.000    0.000    0.000    0.000 __init__.py:447(get_build_platform)
        1    0.000    0.000    0.000    0.000 socket.py:183(_socketobject)
       55    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        1    0.000    0.000    0.000    0.000 rationalfield.py:1(<module>)
        1    0.000    0.000    0.000    0.000 power.py:68(Pow)
        6    0.000    0.000    0.000    0.000 six.py:80(_import_module)
        1    0.000    0.000    0.000    0.000 function.py:152(Function)
        1    0.000    0.000    0.000    0.000 repr.py:6(<module>)
        1    0.000    0.000    0.000    0.000 machar.py:7(<module>)
        1    0.000    0.000    0.000    0.000 cache.py:297(__usecache)
      216    0.000    0.000    0.000    0.000 ctx_mp_python.py:126(<lambda>)
        3    0.000    0.000    0.000    0.000 numeric.py:2972(__exit__)
        6    0.000    0.000    0.000    0.000 inversekinematics.py:655(<genexpr>)
      243    0.000    0.000    0.000    0.000 Shadow.py:88(locals)
       45    0.000    0.000    0.000    0.000 optparse.py:580(_check_opt_strings)
       25    0.000    0.000    0.000    0.000 ikfast_AST.py:373(__init__)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:7(<module>)
      243    0.000    0.000    0.000    0.000 Shadow.py:85(_empty_decorator)
        2    0.000    0.000    0.000    0.000 shape_base.py:1(<module>)
        1    0.000    0.000    0.000    0.000 matfuncs.py:5(<module>)
       12    0.000    0.000    0.000    0.000 getlimits.py:150(<lambda>)
        1    0.000    0.000    0.000    0.000 ssl.py:130(<dictcomp>)
        1    0.000    0.000    0.000    0.000 test_dataset_getitem.py:329(Test1DFloat)
        2    0.000    0.000    0.000    0.000 {built-in method now}
        1    0.000    0.000    0.000    0.000 csc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decomp_lu.py:1(<module>)
        2    0.000    0.000    0.000    0.000 posixpath.py:153(samefile)
        1    0.000    0.000    0.000    0.000 matrices.py:71(Matrix)
        1    0.000    0.000    0.000    0.000 case.py:131(TestCase)
        1    0.000    0.000    0.000    0.000 mul.py:19(Mul)
        2    0.000    0.000    0.000    0.000 decorator.py:47(xthreaded)
       90    0.000    0.000    0.000    0.000 ctx_iv.py:366(<lambda>)
        1    0.000    0.000    0.000    0.000 risch.py:1(<module>)
        4    0.000    0.000    0.000    0.000 getlimits.py:148(<lambda>)
        1    0.000    0.000    0.000    0.000 test_file.py:175(TestDrivers)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:205(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:937(_open)
       24    0.000    0.000    0.000    0.000 pretty_symbology.py:101(<lambda>)
       45    0.000    0.000    0.000    0.000 optparse.py:981(_check_conflict)
       18    0.000    0.000    0.000    0.000 random.py:273(choice)
        1    0.000    0.000    0.000    0.000 exponential.py:22(exp)
        1    0.000    0.000    0.000    0.000 __init__.py:65(_getenv)
        2    0.000    0.000    0.000    0.000 ctx_iv.py:358(_set_prec)
        2    0.000    0.000    0.000    0.000 rszeta.py:49(<module>)
       60    0.000    0.000    0.000    0.000 codecs.py:253(__init__)
        4    0.000    0.000    0.000    0.000 libmpi.py:454(mpi_from_str)
        1    0.000    0.000    0.000    0.000 pythoncomplexdomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decorators.py:6(<module>)
        2    0.000    0.000    0.000    0.000 optparse.py:200(__init__)
        1    0.000    0.000    0.000    0.000 spherical_harmonics.py:1(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:49(__init__)
       82    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1700(endRotation)
        1    0.000    0.000    0.000    0.000 ccompiler.py:1057(gen_lib_options)
        2    0.000    0.000    0.000    0.000 polyclasses.py:283(coeffs)
        1    0.000    0.000    0.000    0.000 function.py:74(Application)
        1    0.000    0.000    0.000    0.000 _iotools.py:473(StringConverter)
        1    0.000    0.000    0.000    0.000 defchararray.py:1669(chararray)
       60    0.000    0.000    0.000    0.000 {method 'partition' of 'unicode' objects}
       53    0.000    0.000    0.000    0.000 __init__.py:189(<lambda>)
        5    0.000    0.000    0.000    0.000 __init__.py:49(normalize_encoding)
        1    0.000    0.000    0.000    0.000 libelefun.py:318(mpf_pow)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:127(reshape)
        2    0.000    0.000    0.000    0.000 getlimits.py:149(<lambda>)
      177    0.000    0.000    0.000    0.000 singleton.py:65(__new__)
       22    0.000    0.000    0.000    0.000 __init__.py:177(_checkLevel)
        1    0.000    0.000    0.000    0.000 __init__.py:3130(_initialize)
        1    0.000    0.000    0.000    0.000 tempfile.py:148(_candidate_tempdir_list)
        2    0.000    0.000    0.000    0.000 {posix.mkdir}
        4    0.000    0.000    0.000    0.000 expr.py:164(_from_mpmath)
        9    0.000    0.000    0.000    0.000 core.py:2521(_arraymethod)
        1    0.000    0.000    0.000    0.000 pde.py:6(<module>)
        1    0.000    0.000    0.000    0.000 datatype.py:21(Datatype)
        1    0.000    0.000    0.000    0.000 threading.py:542(Event)
        1    0.000    0.000    0.000    0.000 recurr.py:44(<module>)
        1    0.000    0.000    0.000    0.000 version.py:38(__init__)
        3    0.000    0.000    0.000    0.000 six.py:114(_resolve)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:39(_mpf)
        2    0.000    0.000    0.000    0.000 ctx_base.py:22(StandardBaseContext)
        2    0.000    0.000    0.000    0.000 approximation.py:1(<module>)
       12    0.000    0.000    0.000    0.000 six.py:126(__init__)
       46    0.000    0.000    0.000    0.000 assumptions.py:346(make__get_assumption)
        1    0.000    0.000    0.000    0.000 numeric.py:148(ones)
        1    0.000    0.000    0.000    0.000 ring.py:1(<module>)
        6    0.000    0.000    0.000    0.000 numbers.py:1681(__new__)
        4    0.000    0.000    0.000    0.000 ccompiler.py:830(shared_object_filename)
       14    0.000    0.000    0.000    0.000 numerictypes.py:181(english_capitalize)
       11    0.000    0.000    0.000    0.000 metaclass.py:4(__init__)
        1    0.000    0.000    0.000    0.000 uu.py:31(<module>)
       13    0.000    0.000    0.000    0.000 <string>:8(__new__)
        3    0.000    0.000    0.000    0.000 numerictypes.py:603(obj2sctype)
        4    0.000    0.000    0.000    0.000 platform.py:1318(machine)
        2    0.000    0.000    0.000    0.000 ssl.py:315(__new__)
        2    0.000    0.000    0.000    0.000 threading.py:242(Condition)
        2    0.000    0.000    0.000    0.000 polyclasses.py:384(terms_gcd)
        1    0.000    0.000    0.000    0.000 densearith.py:1597(dup_quo)
        1    0.000    0.000    0.000    0.000 function.py:606(Derivative)
      108    0.000    0.000    0.000    0.000 Shadow.py:302(PointerInstance)
        1    0.000    0.000    0.000    0.000 exceptions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 modularinteger.py:1(<module>)
       17    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        1    0.000    0.000    0.000    0.000 version.py:104(parse)
        1    0.000    0.000    0.000    0.000 test_dimension_scales.py:56(TestH5DSBindings)
        2    0.000    0.000    0.000    0.000 function_docs.py:3(<module>)
        1    0.000    0.000    0.000    0.000 field.py:1(<module>)
        1    0.000    0.000    0.000    0.000 euclidtools.py:1562(dup_gcd)
        1    0.000    0.000    0.000    0.000 preview.py:1(<module>)
        6    0.000    0.000    0.000    0.000 hashlib.py:100(__get_openssl_constructor)
        2    0.000    0.000    0.000    0.000 matrices.py:8(_matrix)
        1    0.000    0.000    0.000    0.000 sysconfig.py:584(get_platform)
        3    0.000    0.000    0.000    0.000 numbers.py:1327(__new__)
        1    0.000    0.000    0.000    0.000 mpmathcomplexdomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:295(Integral)
        1    0.000    0.000    0.000    0.000 common.py:4(<module>)
        1    0.000    0.000    0.000    0.000 decimal.py:505(Decimal)
        1    0.000    0.000    0.000    0.000 numbers.py:973(Integer)
      119    0.000    0.000    0.000    0.000 opcode.py:27(def_op)
        1    0.000    0.000    0.000    0.000 numbers.py:34(Complex)
       11    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1352(<lambda>)
      100    0.000    0.000    0.000    0.000 function.py:103(eval)
        1    0.000    0.000    0.000    0.000 threading.py:576(set)
        1    0.000    0.000    0.000    0.000 numerictypes.py:379(_set_up_aliases)
        1    0.000    0.000    0.000    0.000 source.py:3(<module>)
        2    0.000    0.000    0.000    0.000 ctx_iv.py:132(ivmpc)
        1    0.000    0.000    0.000    0.000 test_attribute_create.py:12(<module>)
        1    0.000    0.000    0.000    0.000 lsqr.py:50(<module>)
        1    0.000    0.000    0.000    0.000 pprint.py:35(<module>)
       55    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1663(endBreak)
        1    0.000    0.000    0.000    0.000 inequalities.py:1(<module>)
        1    0.000    0.000    0.000    0.000 conventions.py:3(<module>)
        6    0.000    0.000    0.000    0.000 numeric.py:2676(geterr)
        1    0.000    0.000    0.000    0.000 test_dataset.py:91(TestCreateData)
        1    0.000    0.000    0.000    0.000 threading.py:631(Thread)
        1    0.000    0.000    0.000    0.000 session.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _version.py:7(<module>)
       34    0.000    0.000    0.000    0.000 ctx_fp.py:28(<lambda>)
        2    0.000    0.000    0.000    0.000 multidimensional.py:88(__call__)
        1    0.000    0.000    0.000    0.000 {method 'strftime' of 'datetime.date' objects}
       45    0.000    0.000    0.000    0.000 optparse.py:694(_check_const)
        7    0.000    0.000    0.000    0.000 inversekinematics.py:631(<genexpr>)
       82    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1761(endSequence)
        1    0.000    0.000    0.000    0.000 polynomial.py:1517(Polynomial)
        1    0.000    0.000    0.000    0.000 selections2.py:12(<module>)
        1    0.000    0.000    0.000    0.000 timeutils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _methods.py:40(_all)
        1    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
       62    0.000    0.000    0.000    0.000 __init__.py:139(<lambda>)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:179(<lambda>)
        1    0.000    0.000    0.000    0.000 threading.py:561(__init__)
        1    0.000    0.000    0.000    0.000 dir_util.py:3(<module>)
        1    0.000    0.000    0.000    0.000 pdb.py:59(Pdb)
        1    0.000    0.000    0.000    0.000 nanfunctions.py:19(<module>)
        1    0.000    0.000    0.000    0.000 _methods.py:5(<module>)
        8    0.000    0.000    0.000    0.000 pretty_symbology.py:144(<lambda>)
       32    0.000    0.000    0.000    0.000 str.py:128(_print_ImaginaryUnit)
        1    0.000    0.000    0.000    0.000 test_dims_dimensionproxy.py:12(<module>)
        1    0.000    0.000    0.000    0.000 symbol.py:13(Symbol)
       74    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       68    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 sympyrealdomain.py:6(SymPyRealDomain)
       49    0.000    0.000    0.000    0.000 _abcoll.py:98(__subclasshook__)
        1    0.000    0.000    0.000    0.000 trigonometric.py:543(tan)
        2    0.000    0.000    0.000    0.000 theta.py:1(<module>)
        3    0.000    0.000    0.000    0.000 optparse.py:1091(__init__)
        1    0.000    0.000    0.000    0.000 numerictypes.py:774(__getitem__)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:150(<lambda>)
        2    0.000    0.000    0.000    0.000 tempfile.py:48(_set_cloexec)
        1    0.000    0.000    0.000    0.000 operations.py:11(AssocOp)
        2    0.000    0.000    0.000    0.000 threading.py:260(__init__)
        1    0.000    0.000    0.000    0.000 repr.py:1(<module>)
        4    0.000    0.000    0.000    0.000 inversekinematics.py:377(<genexpr>)
       12    0.000    0.000    0.000    0.000 dual.py:52(register_func)
        2    0.000    0.000    0.000    0.000 expressiondomain.py:20(__init__)
       53    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:8895(<lambda>)
        2    0.000    0.000    0.000    0.000 ctx_iv.py:35(ivmpf)
        2    0.000    0.000    0.000    0.000 rationaltools.py:1(<module>)
        4    0.000    0.000    0.000    0.000 __init__.py:217(_declare_state)
        3    0.000    0.000    0.000    0.000 polyutils.py:116(_sort_factors)
       45    0.000    0.000    0.000    0.000 optparse.py:679(_check_dest)
       18    0.000    0.000    0.000    0.000 inversekinematics.py:1291(<genexpr>)
       45    0.000    0.000    0.000    0.000 optparse.py:630(_check_action)
        1    0.000    0.000    0.000    0.000 trigonometric.py:321(cos)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:357(_mpc)
        1    0.000    0.000    0.000    0.000 util.py:5(<module>)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:1(<module>)
        1    0.000    0.000    0.000    0.000 trigonometric.py:104(sin)
        1    0.000    0.000    0.000    0.000 evalf.py:911(_create_evalf_table)
        1    0.000    0.000    0.000    0.000 cmd.py:46(<module>)
       10    0.000    0.000    0.000    0.000 pretty_symbology.py:146(<lambda>)
      107    0.000    0.000    0.000    0.000 {imp.release_lock}
        1    0.000    0.000    0.000    0.000 hyperbolic.py:13(sinh)
        1    0.000    0.000    0.000    0.000 simpledomain.py:1(<module>)
        1    0.000    0.000    0.000    0.000 bisect.py:1(<module>)
        1    0.000    0.000    0.000    0.000 test_file.py:12(<module>)
        3    0.000    0.000    0.000    0.000 optparse.py:779(process)
        1    0.000    0.000    0.000    0.000 calendar.py:47(_localized_month)
        1    0.000    0.000    0.000    0.000 exponential.py:282(log)
        1    0.000    0.000    0.000    0.000 ccompiler.py:813(object_filenames)
        1    0.000    0.000    0.000    0.000 test_threads.py:12(<module>)
        1    0.000    0.000    0.000    0.000 dep_util.py:5(<module>)
        2    0.000    0.000    0.000    0.000 polynomialring.py:66(from_ZZ_python)
       45    0.000    0.000    0.000    0.000 optparse.py:700(_check_nargs)
        1    0.000    0.000    0.000    0.000 test_datatype.py:3(<module>)
        3    0.000    0.000    0.000    0.000 copy_reg.py:14(pickle)
        4    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       23    0.000    0.000    0.000    0.000 {_struct.calcsize}
        2    0.000    0.000    0.000    0.000 {_ssl.txt2obj}
        4    0.000    0.000    0.000    0.000 polyroots.py:519(_update_dict)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:266(tanh)
        1    0.000    0.000    0.000    0.000 compositedomain.py:1(<module>)
       15    0.000    0.000    0.000    0.000 pretty_symbology.py:335(<lambda>)
       34    0.000    0.000    0.000    0.000 Shadow.py:328(__init__)
       52    0.000    0.000    0.000    0.000 __init__.py:3053(cls)
        4    0.000    0.000    0.000    0.000 numbers.py:1321(__new__)
        1    0.000    0.000    0.000    0.000 test_dataset_getitem.py:276(Test1DZeroFloat)
      114    0.000    0.000    0.000    0.000 __init__.py:2523(_reload_version)
        2    0.000    0.000    0.000    0.000 ctx_iv.py:276(MPIntervalContext)
        3    0.000    0.000    0.000    0.000 six.py:195(load_module)
        2    0.000    0.000    0.000    0.000 ctx_iv.py:126(__neg__)
        1    0.000    0.000    0.000    0.000 specifiers.py:31(BaseSpecifier)
        6    0.000    0.000    0.000    0.000 ctx_base.py:451(memoize)
        1    0.000    0.000    0.000    0.000 test_dataset.py:654(TestStrings)
        2    0.000    0.000    0.000    0.000 polynomials.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:52(MPContext)
       20    0.000    0.000    0.000    0.000 ctx_iv.py:327(_wrap_mpi_function)
       83    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
        1    0.000    0.000    0.000    0.000 error_functions.py:9(erf)
        1    0.000    0.000    0.000    0.000 minres.py:1(<module>)
        2    0.000    0.000    0.000    0.000 {posix.WIFEXITED}
        1    0.000    0.000    0.000    0.000 zipfile.py:709(ZipFile)
        1    0.000    0.000    0.000    0.000 inversekinematics.py:227(InverseKinematicsModel)
        2    0.000    0.000    0.000    0.000 os.py:472(__setitem__)
        7    0.000    0.000    0.000    0.000 {numpy.core.umath.seterrobj}
        1    0.000    0.000    0.000    0.000 construct.py:2(<module>)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.zeros}
        1    0.000    0.000    0.000    0.000 StringIO.py:30(<module>)
        1    0.000    0.000    0.000    0.000 dual.py:12(<module>)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:140(cosh)
        1    0.000    0.000    0.000    0.000 numbers.py:169(Real)
       45    0.000    0.000    0.000    0.000 optparse.py:709(_check_callback)
       31    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:8762(<lambda>)
        1    0.000    0.000    0.000    0.000 rootoftools.py:83(RootOf)
        1    0.000    0.000    0.000    0.000 symbol.py:140(Wild)
       50    0.000    0.000    0.000    0.000 {method 'rjust' of 'str' objects}
        1    0.000    0.000    0.000    0.000 defmatrix.py:208(matrix)
       60    0.000    0.000    0.000    0.000 __init__.py:1998(__init__)
        1    0.000    0.000    0.000    0.000 grasping.py:194(GraspingModel)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:395(coth)
        1    0.000    0.000    0.000    0.000 trigonometric.py:918(asin)
        1    0.000    0.000    0.000    0.000 polytools.py:3461(PurePoly)
        1    0.000    0.000    0.000    0.000 partitions_.py:1(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:946(int_trace)
        5    0.000    0.000    0.000    0.000 factor_.py:162(multiplicity)
        1    0.000    0.000    0.000    0.000 __init__.py:2490(Distribution)
        1    0.000    0.000    0.000    0.000 base.py:156(_RegionProxy)
        1    0.000    0.000    0.000    0.000 factor_.py:1117(primefactors)
        2    0.000    0.000    0.000    0.000 libmpf.py:961(mpf_rdiv_int)
        1    0.000    0.000    0.000    0.000 base.py:44(spmatrix)
        2    0.000    0.000    0.000    0.000 os.py:496(__delitem__)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:36(getregentry)
       27    0.000    0.000    0.000    0.000 decimal.py:3816(<genexpr>)
        1    0.000    0.000    0.000    0.000 constructor.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {posix.close}
        3    0.000    0.000    0.000    0.000 numeric.py:2963(__init__)
        1    0.000    0.000    0.000    0.000 ccompiler.py:23(CCompiler)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1035(acos)
        8    0.000    0.000    0.000    0.000 inversekinematics.py:598(<genexpr>)
        1    0.000    0.000    0.000    0.000 function.py:797(Lambda)
        1    0.000    0.000    0.000    0.000 <string>:1(Mismatch)
        5    0.000    0.000    0.000    0.000 fractions.py:280(_operator_fallbacks)
       40    0.000    0.000    0.000    0.000 __init__.py:11(<lambda>)
        1    0.000    0.000    0.000    0.000 <string>:1(Attribute)
       12    0.000    0.000    0.000    0.000 numbers.py:1134(_eval_is_odd)
        1    0.000    0.000    0.000    0.000 trigonometric.py:744(cot)
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        1    0.000    0.000    0.000    0.000 domain.py:13(Domain)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:520(asinh)
        6    0.000    0.000    0.000    0.000 UserDict.py:35(__getitem__)
        1    0.000    0.000    0.000    0.000 test_group.py:772(TestCopy)
        7    0.000    0.000    0.000    0.000 primetest.py:157(isprime)
        1    0.000    0.000    0.000    0.000 bsplines.py:1(<module>)
       10    0.000    0.000    0.000    0.000 libmpf.py:1284(from_str)
        1    0.000    0.000    0.000    0.000 highlevel.py:17(<module>)
        2    0.000    0.000    0.000    0.000 six.py:469(Module_six_moves_urllib)
       32    0.000    0.000    0.000    0.000 polyoptions.py:593(default)
        1    0.000    0.000    0.000    0.000 primetest.py:4(<module>)
        2    0.000    0.000    0.000    0.000 rational.py:24(mpq)
        4    0.000    0.000    0.000    0.000 boolalg.py:133(eval)
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        1    0.000    0.000    0.000    0.000 helper.py:4(<module>)
        1    0.000    0.000    0.000    0.000 arraypad.py:5(<module>)
        1    0.000    0.000    0.000    0.000 runtests.py:472(SymPyTests)
      107    0.000    0.000    0.000    0.000 {imp.acquire_lock}
        1    0.000    0.000    0.000    0.000 collections.py:38(OrderedDict)
        1    0.000    0.000    0.000    0.000 <string>:1(Match)
        1    0.000    0.000    0.000    0.000 test_base.py:47(TestRepr)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:581(PythonMPContext)
        1    0.000    0.000    0.000    0.000 tempfile.py:519(SpooledTemporaryFile)
        1    0.000    0.000    0.000    0.000 <string>:1(_Version)
        2    0.000    0.000    0.000    0.000 gammazeta.py:394(bernoulli_size)
        1    0.000    0.000    0.000    0.000 threading.py:400(notifyAll)
        1    0.000    0.000    0.000    0.000 numerictypes.py:860(<lambda>)
        3    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1359(<lambda>)
        2    0.000    0.000    0.000    0.000 log.py:39(info)
       19    0.000    0.000    0.000    0.000 factor_.py:135(trailing)
        4    0.000    0.000    0.000    0.000 {fcntl.fcntl}
        1    0.000    0.000    0.000    0.000 bdb.py:14(Bdb)
        1    0.000    0.000    0.000    0.000 polyclasses.py:1300(ANP)
        1    0.000    0.000    0.000    0.000 polyclasses.py:912(DMF)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:593(acosh)
        1    0.000    0.000    0.000    0.000 ssl.py:505(_get_https_context_factory)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1812(HermiteE)
        1    0.000    0.000    0.000    0.000 ssl.py:524(SSLSocket)
        1    0.000    0.000    0.000    0.000 arraysetops.py:26(<module>)
        1    0.000    0.000    0.000    0.000 sputils.py:2(<module>)
        1    0.000    0.000    0.000    0.000 sympyintegerring.py:8(SymPyIntegerRing)
        1    0.000    0.000    0.000    0.000 deltafunctions.py:1(<module>)
        1    0.000    0.000    0.000    0.000 financial.py:10(<module>)
        1    0.000    0.000    0.000    0.000 _inspect.py:7(<module>)
       30    0.000    0.000    0.000    0.000 math2.py:27(_mathfun_real)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:697(atanh)
        1    0.000    0.000    0.000    0.000 <string>:1(ParseResult)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:201(CodeGenerator)
        1    0.000    0.000    0.000    0.000 laguerre.py:1765(Laguerre)
        1    0.000    0.000    0.000    0.000 decomp_svd.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {math.exp}
        3    0.000    0.000    0.000    0.000 {binascii.hexlify}
        2    0.000    0.000    0.000    0.000 densebasic.py:1585(dmp_terms_gcd)
        1    0.000    0.000    0.000    0.000 core.py:6104(MaskedConstant)
        2    0.000    0.000    0.000    0.000 {posix.uname}
       24    0.000    0.000    0.000    0.000 getlimits.py:13(_frz)
       11    0.000    0.000    0.000    0.000 opcode.py:31(name_op)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1254(acot)
        1    0.000    0.000    0.000    0.000 ccompiler.py:408(_fix_object_args)
        2    0.000    0.000    0.000    0.000 {posix.putenv}
        4    0.000    0.000    0.000    0.000 {posix.getcwd}
        1    0.000    0.000    0.000    0.000 pretty.py:17(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 __init__.py:1591(__init__)
       19    0.000    0.000    0.000    0.000 tokenize.py:45(group)
       50    0.000    0.000    0.000    0.000 {_ctypes.sizeof}
        3    0.000    0.000    0.000    0.000 index_tricks.py:242(__init__)
        2    0.000    0.000    0.000    0.000 functions.py:3(SpecialFunctions)
        1    0.000    0.000    0.000    0.000 legendre.py:1795(Legendre)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:654(GetIkFunctionPreamble)
        1    0.000    0.000    0.000    0.000 inversereachability.py:77(InverseReachabilityModel)
       20    0.000    0.000    0.000    0.000 __init__.py:587(__init__)
        1    0.000    0.000    0.000    0.000 latex.py:18(LatexPrinter)
       18    0.000    0.000    0.000    0.000 __init__.py:9(<lambda>)
       32    0.000    0.000    0.000    0.000 {numpy.core.multiarray.promote_types}
        1    0.000    0.000    0.000    0.000 hyperbolic.py:763(acoth)
       10    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
        1    0.000    0.000    0.000    0.000 trigonometric.py:1142(atan)
        1    0.000    0.000    0.000    0.000 chebyshev.py:2041(Chebyshev)
        1    0.000    0.000    0.000    0.000 refine.py:1(<module>)
       30    0.000    0.000    0.000    0.000 libelefun.py:106(def_mpf_constant)
        7    0.000    0.000    0.000    0.000 inspect.py:67(ismethod)
        5    0.000    0.000    0.000    0.000 iterative.py:67(combine)
       41    0.000    0.000    0.000    0.000 decorators.py:34(_sympifyit)
        1    0.000    0.000    0.000    0.000 str.py:16(StrPrinter)
        1    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
        6    0.000    0.000    0.000    0.000 rszeta.py:54(__init__)
        1    0.000    0.000    0.000    0.000 py3k.py:4(<module>)
       56    0.000    0.000    0.000    0.000 numbers.py:165(_eval_conjugate)
        1    0.000    0.000    0.000    0.000 numbers.py:106(Number)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:145(<lambda>)
        1    0.000    0.000    0.000    0.000 compressed.py:17(_cs_matrix)
       30    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1614(endBranchConds)
        1    0.000    0.000    0.000    0.000 decimal.py:3763(Context)
        1    0.000    0.000    0.000    0.000 line.py:21(LinearEntity)
        3    0.000    0.000    0.000    0.000 densebasic.py:1556(dup_terms_gcd)
        1    0.000    0.000    0.000    0.000 <string>:1(DefaultVerifyPaths)
        1    0.000    0.000    0.000    0.000 __init__.py:1584(NullProvider)
       16    0.000    0.000    0.000    0.000 __init__.py:8(<lambda>)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:328(_constant)
        5    0.000    0.000    0.000    0.000 {vars}
        3    0.000    0.000    0.000    0.000 ikfast_AST.py:186(end)
        3    0.000    0.000    0.000    0.000 six.py:159(_resolve)
        8    0.000    0.000    0.000    0.000 misc.py:147(<genexpr>)
        1    0.000    0.000    0.000    0.000 decomp_cholesky.py:1(<module>)
        1    0.000    0.000    0.000    0.000 rootoftools.py:480(RootSum)
        2    0.000    0.000    0.000    0.000 polytools.py:3129(is_ground)
        9    0.000    0.000    0.000    0.000 threading.py:59(__init__)
        1    0.000    0.000    0.000    0.000 dok.py:21(dok_matrix)
       11    0.000    0.000    0.000    0.000 {thread.allocate_lock}
        1    0.000    0.000    0.000    0.000 __init__.py:46(DatabaseGenerator)
        3    0.000    0.000    0.000    0.000 optparse.py:1336(add_option_group)
        1    0.000    0.000    0.000    0.000 ccompiler.py:426(_fix_lib_args)
        1    0.000    0.000    0.000    0.000 extras.py:1414(__init__)
        3    0.000    0.000    0.000    0.000 optparse.py:1313(_get_all_options)
       20    0.000    0.000    0.000    0.000 assume.py:117(_hashable_content)
        1    0.000    0.000    0.000    0.000 ellipse.py:22(Ellipse)
        1    0.000    0.000    0.000    0.000 <string>:1(Traceback)
        2    0.000    0.000    0.000    0.000 getlimits.py:270(max)
        1    0.000    0.000    0.000    0.000 __init__.py:1387(MarkerEvaluation)
        1    0.000    0.000    0.000    0.000 keyword.py:11(<module>)
        1    0.000    0.000    0.000    0.000 debug.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:272(Wrt)
        1    0.000    0.000    0.000    0.000 base.py:73(default_lcpl)
        4    0.000    0.000    0.000    0.000 core.py:94(doc_note)
        1    0.000    0.000    0.000    0.000 visibilitymodel.py:90(VisibilityModel)
        1    0.000    0.000    0.000    0.000 __init__.py:1393(__init__)
        1    0.000    0.000    0.000    0.000 <string>:1(SplitResult)
       84    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:176(<lambda>)
        1    0.000    0.000    0.000    0.000 log.py:1(<module>)
        1    0.000    0.000    0.000    0.000 colorize.py:13(ColorizingStreamHandler)
        1    0.000    0.000    0.000    0.000 hermite.py:1815(Hermite)
        1    0.000    0.000    0.000    0.000 polygon.py:859(RegularPolygon)
        1    0.000    0.000    0.000    0.000 __init__.py:63(install)
        1    0.000    0.000    0.000    0.000 atexit.py:6(<module>)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:180(<lambda>)
        1    0.000    0.000    0.000    0.000 iterators.py:5(<module>)
        2    0.000    0.000    0.000    0.000 trigonometric.py:533(_eval_is_bounded)
        2    0.000    0.000    0.000    0.000 numeric.py:1871(set_string_function)
        1    0.000    0.000    0.000    0.000 data.py:16(_data_matrix)
        1    0.000    0.000    0.000    0.000 <string>:1(ArgInfo)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:13(GMPYRationalField)
       18    0.000    0.000    0.000    0.000 assume.py:126(add_handler)
        2    0.000    0.000    0.000    0.000 {posix.unsetenv}
       21    0.000    0.000    0.000    0.000 case.py:70(skipIf)
        1    0.000    0.000    0.000    0.000 quopri.py:3(<module>)
        1    0.000    0.000    0.000    0.000 integrals.py:88(Integral)
        2    0.000    0.000    0.000    0.000 __config__.py:3(<module>)
        2    0.000    0.000    0.000    0.000 matrices.py:733(MatrixMethods)
       45    0.000    0.000    0.000    0.000 optparse.py:666(_check_choice)
        1    0.000    0.000    0.000    0.000 unixccompiler.py:48(UnixCCompiler)
        1    0.000    0.000    0.000    0.000 <string>:1(manifest_mod)
        1    0.000    0.000    0.000    0.000 <string>:1(ArgSpec)
        1    0.000    0.000    0.000    0.000 polygon.py:15(Polygon)
        1    0.000    0.000    0.000    0.000 fcode.py:33(FCodePrinter)
        1    0.000    0.000    0.000    0.000 convexdecomposition.py:109(ConvexDecompositionModel)
        1    0.000    0.000    0.000    0.000 common.py:50(TestCase)
        6    0.000    0.000    0.000    0.000 opcode.py:35(jrel_op)
        1    0.000    0.000    0.000    0.000 residue_ntheory.py:1(<module>)
        2    0.000    0.000    0.000    0.000 libmpi.py:96(mpi_neg)
        2    0.000    0.000    0.000    0.000 linalg.py:110(LinearAlgebraMethods)
        1    0.000    0.000    0.000    0.000 bsr.py:19(bsr_matrix)
       15    0.000    0.000    0.000    0.000 libintmath.py:39(rshift)
        1    0.000    0.000    0.000    0.000 numbers.py:33(fibonacci)
        1    0.000    0.000    0.000    0.000 printer.py:76(Printer)
        1    0.000    0.000    0.000    0.000 <string>:1(_ASN1Object)
        3    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 threading.py:373(notify)
        3    0.000    0.000    0.000    0.000 copy_reg.py:27(constructor)
        1    0.000    0.000    0.000    0.000 extras.py:1344(__init__)
       19    0.000    0.000    0.000    0.000 __init__.py:75(__init__)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:151(<lambda>)
       16    0.000    0.000    0.000    0.000 six.py:75(_add_doc)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:11(PythonRationalField)
        1    0.000    0.000    0.000    0.000 ufunclike.py:5(<module>)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:57(MPContext)
        1    0.000    0.000    0.000    0.000 linalg_version.py:1(<module>)
        1    0.000    0.000    0.000    0.000 collections.py:407(Counter)
        1    0.000    0.000    0.000    0.000 sqrtdenest.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decorator.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pythonrationaltype.py:7(PythonRationalType)
        1    0.000    0.000    0.000    0.000 polynomial.py:940(poly1d)
        5    0.000    0.000    0.000    0.000 {math.atan}
        1    0.000    0.000    0.000    0.000 multidimensional.py:5(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:610(WorkingSet)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1393(<lambda>)
       14    0.000    0.000    0.000    0.000 {numpy.core.umath.geterrobj}
        1    0.000    0.000    0.000    0.000 selections.py:118(Selection)
        1    0.000    0.000    0.000    0.000 facts.py:385(Prover)
        1    0.000    0.000    0.000    0.000 test_dataset_getitem.py:443(Test2DZeroFloat)
       37    0.000    0.000    0.000    0.000 facts.py:753(<genexpr>)
        1    0.000    0.000    0.000    0.000 _version.py:18(NumpyVersion)
        1    0.000    0.000    0.000    0.000 <string>:1(ModuleInfo)
        1    0.000    0.000    0.000    0.000 warnings.py:96(simplefilter)
       10    0.000    0.000    0.000    0.000 doctest.py:128(register_optionflag)
        8    0.000    0.000    0.000    0.000 math2.py:42(_mathfun)
        4    0.000    0.000    0.000    0.000 trigonometric.py:530(_eval_is_real)
       27    0.000    0.000    0.000    0.000 decimal.py:3809(<genexpr>)
        1    0.000    0.000    0.000    0.000 getlimits.py:195(iinfo)
        1    0.000    0.000    0.000    0.000 numbers.py:272(bell)
        1    0.000    0.000    0.000    0.000 file_util.py:4(<module>)
        1    0.000    0.000    0.000    0.000 core.py:6111(__new__)
        1    0.000    0.000    0.000    0.000 <string>:1(TestResults)
        1    0.000    0.000    0.000    0.000 <string>:1(DecimalTuple)
        1    0.000    0.000    0.000    0.000 csgraph.py:1(<module>)
       24    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:8845(<lambda>)
        1    0.000    0.000    0.000    0.000 precedence.py:1(<module>)
        1    0.000    0.000    0.000    0.000 sets.py:402(Interval)
        9    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1693(<lambda>)
        1    0.000    0.000    0.000    0.000 lgmres.py:4(<module>)
        3    0.000    0.000    0.000    0.000 optparse.py:791(take_action)
        2    0.000    0.000    0.000    0.000 {math.log10}
        2    0.000    0.000    0.000    0.000 six.py:164(_SixMetaPathImporter)
        4    0.000    0.000    0.000    0.000 math2.py:53(_mathfun_n)
        1    0.000    0.000    0.000    0.000 _internal.py:226(_ctypes)
       12    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:690(<lambda>)
        1    0.000    0.000    0.000    0.000 _iotools.py:250(NameValidator)
        1    0.000    0.000    0.000    0.000 <string>:1(Arguments)
        1    0.000    0.000    0.000    0.000 TaskManipulation.py:26(TaskManipulation)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:422(Formula)
        1    0.000    0.000    0.000    0.000 __init__.py:1818(ZipProvider)
        1    0.000    0.000    0.000    0.000 specifiers.py:88(_IndividualSpecifier)
        1    0.000    0.000    0.000    0.000 fnmatch.py:11(<module>)
        1    0.000    0.000    0.000    0.000 function.py:900(Subs)
        1    0.000    0.000    0.000    0.000 _compat.py:14(<module>)
        2    0.000    0.000    0.000    0.000 ctx_iv.py:264(ivmpf_constant)
        1    0.000    0.000    0.000    0.000 indexed.py:114(IndexedBase)
        1    0.000    0.000    0.000    0.000 threading.py:125(_RLock)
       38    0.000    0.000    0.000    0.000 iterables.py:659(<lambda>)
        1    0.000    0.000    0.000    0.000 mathml.py:11(MathMLPrinter)
        3    0.000    0.000    0.000    0.000 string.py:394(atoi)
        2    0.000    0.000    0.000    0.000 tempfile.py:221(_get_candidate_names)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:12(PythonIntegerRing)
        1    0.000    0.000    0.000    0.000 fractionfield.py:11(FractionField)
        1    0.000    0.000    0.000    0.000 numeric.py:2978(_setdef)
        7    0.000    0.000    0.000    0.000 case.py:607(_deprecate)
        1    0.000    0.000    0.000    0.000 generate.py:22(Sieve)
        7    0.000    0.000    0.000    0.000 inspect.py:142(isfunction)
        1    0.000    0.000    0.000    0.000 nonlin.py:639(LowRankMatrix)
        1    0.000    0.000    0.000    0.000 sets.py:989(FiniteSet)
        4    0.000    0.000    0.000    0.000 optparse.py:765(check_value)
        1    0.000    0.000    0.000    0.000 linkstatistics.py:84(LinkStatisticsModel)
        2    0.000    0.000    0.000    0.000 __init__.py:1139(setLevel)
       18    0.000    0.000    0.000    0.000 factor_.py:640(done)
        1    0.000    0.000    0.000    0.000 polyoptions.py:70(Options)
        2    0.000    0.000    0.000    0.000 functions.py:87(defun_static)
        2    0.000    0.000    0.000    0.000 polyclasses.py:295(all_coeffs)
        1    0.000    0.000    0.000    0.000 modularinteger.py:3(ModularInteger)
       15    0.000    0.000    0.000    0.000 __init__.py:62(<lambda>)
        3    0.000    0.000    0.000    0.000 optparse.py:1097(_create_option_list)
        1    0.000    0.000    0.000    0.000 sets.py:7(AskIntegerHandler)
        1    0.000    0.000    0.000    0.000 encoders.py:5(<module>)
        1    0.000    0.000    0.000    0.000 bessel.py:151(besseli)
        1    0.000    0.000    0.000    0.000 arrayterator.py:20(Arrayterator)
        1    0.000    0.000    0.000    0.000 __init__.py:656(Handler)
        6    0.000    0.000    0.000    0.000 case.py:54(skip)
        1    0.000    0.000    0.000    0.000 weakref.py:297(__init__)
       19    0.000    0.000    0.000    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.000    0.000 expressiondomain.py:15(Expression)
        1    0.000    0.000    0.000    0.000 misc.py:125(OpenRAVEGlobalArguments)
        1    0.000    0.000    0.000    0.000 __init__.py:9(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:66(_localized_day)
        1    0.000    0.000    0.000    0.000 point.py:17(Point)
        1    0.000    0.000    0.000    0.000 lil.py:15(lil_matrix)
        3    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:222(resetequations)
        1    0.000    0.000    0.000    0.000 repr.py:13(ReprPrinter)
        1    0.000    0.000    0.000    0.000 stringpict.py:17(stringPict)
        2    0.000    0.000    0.000    0.000 polyclasses.py:759(is_ground)
        1    0.000    0.000    0.000    0.000 operations.py:288(LatticeOp)
        1    0.000    0.000    0.000    0.000 string.py:250(strip)
        1    0.000    0.000    0.000    0.000 index_tricks.py:470(__init__)
        1    0.000    0.000    0.000    0.000 pythoncomplexdomain.py:7(PythonComplexDomain)
        1    0.000    0.000    0.000    0.000 ccompiler.py:1008(gen_preprocess_options)
        1    0.000    0.000    0.000    0.000 line.py:876(Ray)
        2    0.000    0.000    0.000    0.000 {posix.WIFSIGNALED}
       25    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:1112(Logger)
        1    0.000    0.000    0.000    0.000 entity.py:26(GeometryEntity)
        2    0.000    0.000    0.000    0.000 tempfile.py:120(__init__)
        1    0.000    0.000    0.000    0.000 Shadow.py:214(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1595(get_resource_filename)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1587(RealInterval)
        1    0.000    0.000    0.000    0.000 codecs.py:92(__new__)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:16(SolverSolution)
       14    0.000    0.000    0.000    0.000 numbers.py:1452(__abs__)
        1    0.000    0.000    0.000    0.000 loader.py:38(TestLoader)
        1    0.000    0.000    0.000    0.000 _internal.py:200(_getintp_ctype)
        2    0.000    0.000    0.000    0.000 inversekinematics.py:363(getversion)
        1    0.000    0.000    0.000    0.000 series.py:1(<module>)
       16    0.000    0.000    0.000    0.000 matrices.py:984(<genexpr>)
        1    0.000    0.000    0.000    0.000 tempfile.py:108(_RandomNameSequence)
        2    0.000    0.000    0.000    0.000 six.py:103(MovedModule)
        1    0.000    0.000    0.000    0.000 common.py:33(TestCase)
       22    0.000    0.000    0.000    0.000 ctx_iv.py:265(__new__)
        2    0.000    0.000    0.000    0.000 info.py:86(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:1668(NumberSymbol)
        1    0.000    0.000    0.000    0.000 ImageMode.py:17(<module>)
        1    0.000    0.000    0.000    0.000 runner.py:119(TextTestRunner)
        1    0.000    0.000    0.000    0.000 codecs.py:1001(getwriter)
        1    0.000    0.000    0.000    0.000 specifiers.py:599(SpecifierSet)
        2    0.000    0.000    0.000    0.000 multidimensional.py:77(__init__)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:605(default)
        1    0.000    0.000    0.000    0.000 index_tricks.py:447(__init__)
        3    0.000    0.000    0.000    0.000 {locals}
        2    0.000    0.000    0.000    0.000 log.py:19(_log)
        1    0.000    0.000    0.000    0.000 finitefield.py:10(FiniteField)
        1    0.000    0.000    0.000    0.000 __init__.py:1130(ResourceManager)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        1    0.000    0.000    0.000    0.000 gmpyintegerring.py:13(GMPYIntegerRing)
        1    0.000    0.000    0.000    0.000 coo.py:16(coo_matrix)
        1    0.000    0.000    0.000    0.000 core.py:5902(mvoid)
        1    0.000    0.000    0.000    0.000 ccode.py:24(CCodePrinter)
        8    0.000    0.000    0.000    0.000 {method '__contains__' of 'set' objects}
        2    0.000    0.000    0.000    0.000 optparse.py:756(get_opt_string)
        1    0.000    0.000    0.000    0.000 __init__.py:1401(LoggerAdapter)
        1    0.000    0.000    0.000    0.000 sets.py:176(AskRealHandler)
        1    0.000    0.000    0.000    0.000 hyper.py:38(hyper)
        1    0.000    0.000    0.000    0.000 algebraicfield.py:12(AlgebraicField)
        8    0.000    0.000    0.000    0.000 bessel.py:385(c_memo)
        1    0.000    0.000    0.000    0.000 polynomialring.py:11(PolynomialRing)
       28    0.000    0.000    0.000    0.000 {id}
        1    0.000    0.000    0.000    0.000 numbers.py:1457(Infinity)
        1    0.000    0.000    0.000    0.000 calendar.py:132(__init__)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:15(gamma)
        1    0.000    0.000    0.000    0.000 runner.py:28(TextTestResult)
        1    0.000    0.000    0.000    0.000 numberfields.py:392(AlgebraicNumber)
        1    0.000    0.000    0.000    0.000 numbers.py:1331(Zero)
        1    0.000    0.000    0.000    0.000 numbers.py:1643(__new__)
       21    0.000    0.000    0.000    0.000 __init__.py:5(<lambda>)
        1    0.000    0.000    0.000    0.000 __about__.py:14(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:347(Formatter)
        2    0.000    0.000    0.000    0.000 usertools.py:2(<module>)
        1    0.000    0.000    0.000    0.000 test_dataset.py:818(TestFloats)
        1    0.000    0.000    0.000    0.000 StringIO.py:42(StringIO)
        1    0.000    0.000    0.000    0.000 info.py:83(<module>)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:390(SolverCheckZeros)
        1    0.000    0.000    0.000    0.000 case.py:1018(FunctionTestCase)
        3    0.000    0.000    0.000    0.000 optparse.py:1407(check_values)
        1    0.000    0.000    0.000    0.000 _iotools.py:154(LineSplitter)
        3    0.000    0.000    0.000    0.000 core.py:805(__init__)
        1    0.000    0.000    0.000    0.000 _datasource.py:154(DataSource)
        3    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:707(<lambda>)
        2    0.000    0.000    0.000    0.000 quadrature.py:385(GaussLegendre)
        6    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:6534(<lambda>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:559(Repr)
        2    0.000    0.000    0.000    0.000 tokenize.py:47(maybe)
        3    0.000    0.000    0.000    0.000 stat.py:52(S_ISFIFO)
        1    0.000    0.000    0.000    0.000 assume.py:34(AppliedPredicate)
        1    0.000    0.000    0.000    0.000 threading.py:288(__exit__)
        1    0.000    0.000    0.000    0.000 exprtools.py:55(Factors)
        1    0.000    0.000    0.000    0.000 openrave.py:54(vararg_callback)
        3    0.000    0.000    0.000    0.000 __init__.py:101(CFunctionType)
        1    0.000    0.000    0.000    0.000 ssl.py:310(_ASN1Object)
        1    0.000    0.000    0.000    0.000 cmd.py:55(Cmd)
        1    0.000    0.000    0.000    0.000 random.py:655(WichmannHill)
        1    0.000    0.000    0.000    0.000 random.py:805(SystemRandom)
        5    0.000    0.000    0.000    0.000 __init__.py:391(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:300(_is_owned)
        1    0.000    0.000    0.000    0.000 records.py:298(recarray)
        1    0.000    0.000    0.000    0.000 __init__.py:2995(Requirement)
        1    0.000    0.000    0.000    0.000 nosetester.py:128(NoseTester)
       10    0.000    0.000    0.000    0.000 __init__.py:14(search_path)
        1    0.000    0.000    0.000    0.000 complexes.py:203(Abs)
        1    0.000    0.000    0.000    0.000 interface.py:7(LinearOperator)
        3    0.000    0.000    0.000    0.000 optparse.py:1362(_get_args)
        1    0.000    0.000    0.000    0.000 misc.py:533(SpaceSamplerExtra)
        3    0.000    0.000    0.000    0.000 optparse.py:772(convert_value)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:177(<lambda>)
        1    0.000    0.000    0.000    0.000 _datasource.py:504(Repository)
        1    0.000    0.000    0.000    0.000 difflib.py:44(SequenceMatcher)
       10    0.000    0.000    0.000    0.000 decorators.py:105(priority_decorator)
        2    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1657(endFreeParameter)
        1    0.000    0.000    0.000    0.000 sets.py:103(AskRationalHandler)
        7    0.000    0.000    0.000    0.000 inspect.py:208(iscode)
        1    0.000    0.000    0.000    0.000 threading.py:285(__enter__)
        6    0.000    0.000    0.000    0.000 opcode.py:39(jabs_op)
        1    0.000    0.000    0.000    0.000 stringpict.py:335(prettyForm)
        1    0.000    0.000    0.000    0.000 runtests.py:945(PyTestReporter)
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:178(<lambda>)
        1    0.000    0.000    0.000    0.000 base.py:83(CommonStateObject)
        4    0.000    0.000    0.000    0.000 pretty_symbology.py:181(<lambda>)
        1    0.000    0.000    0.000    0.000 function_base.py:2047(vectorize)
        1    0.000    0.000    0.000    0.000 BaseManipulation.py:25(BaseManipulation)
        1    0.000    0.000    0.000    0.000 urllib.py:120(URLopener)
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
        1    0.000    0.000    0.000    0.000 main.py:63(TestProgram)
        1    0.000    0.000    0.000    0.000 numbers.py:1874(Catalan)
        2    0.000    0.000    0.000    0.000 quadrature.py:257(TanhSinh)
        1    0.000    0.000    0.000    0.000 ctx_mp_python.py:161(__neg__)
        1    0.000    0.000    0.000    0.000 integers.py:11(RoundFunction)
        3    0.000    0.000    0.000    0.000 utils.py:68(__init__)
        1    0.000    0.000    0.000    0.000 line.py:1177(Segment)
        1    0.000    0.000    0.000    0.000 info.py:184(<module>)
        1    0.000    0.000    0.000    0.000 threading.py:552(_Event)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1184(<lambda>)
       10    0.000    0.000    0.000    0.000 six.py:181(_get_module)
        1    0.000    0.000    0.000    0.000 doctest.py:810(DocTestFinder)
        1    0.000    0.000    0.000    0.000 indexed.py:299(Idx)
        1    0.000    0.000    0.000    0.000 pythonrealdomain.py:8(PythonRealDomain)
        1    0.000    0.000    0.000    0.000 exprtools.py:215(Term)
       14    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}
        6    0.000    0.000    0.000    0.000 str.py:131(_print_Infinity)
        1    0.000    0.000    0.000    0.000 warnings.py:361(__enter__)
        2    0.000    0.000    0.000    0.000 {posix.WEXITSTATUS}
        1    0.000    0.000    0.000    0.000 ssl.py:339(SSLContext)
        2    0.000    0.000    0.000    0.000 polytools.py:1861(clear_denoms)
        1    0.000    0.000    0.000    0.000 extract.py:2(<module>)
        1    0.000    0.000    0.000    0.000 urllib.py:616(FancyURLopener)
        1    0.000    0.000    0.000    0.000 genericpath.py:76(commonprefix)
        1    0.000    0.000    0.000    0.000 summations.py:7(Sum)
        1    0.000    0.000    0.000    0.000 UserDict.py:4(__init__)
        2    0.000    0.000    0.000    0.000 visualization.py:9(VisualizationMethods)
        1    0.000    0.000    0.000    0.000 pythonintegerring.py:97(lcm)
        1    0.000    0.000    0.000    0.000 ellipse.py:884(Circle)
        1    0.000    0.000    0.000    0.000 socket.py:239(_fileobject)
        1    0.000    0.000    0.000    0.000 charset.py:156(Charset)
        1    0.000    0.000    0.000    0.000 pprint.py:84(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 numbers.py:1376(One)
        1    0.000    0.000    0.000    0.000 factorials.py:14(factorial)
        1    0.000    0.000    0.000    0.000 npyio.py:95(NpzFile)
        3    0.000    0.000    0.000    0.000 optparse.py:1471(_match_long_opt)
        1    0.000    0.000    0.000    0.000 difflib.py:764(Differ)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:561(SolverBreak)
        1    0.000    0.000    0.000    0.000 calendar.py:260(TextCalendar)
        5    0.000    0.000    0.000    0.000 pretty_symbology.py:147(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:1728(_register)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.000    0.000 logic.py:191(AndOr_Base)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:227(IndexPair)
        1    0.000    0.000    0.000    0.000 residues.py:4(<module>)
        1    0.000    0.000    0.000    0.000 piecewise.py:6(ExprCondPair)
        1    0.000    0.000    0.000    0.000 codeprinter.py:8(CodePrinter)
        1    0.000    0.000    0.000    0.000 utils.py:56(_Deprecate)
        2    0.000    0.000    0.000    0.000 __init__.py:71(__del__)
        1    0.000    0.000    0.000    0.000 relational.py:103(Relational)
        1    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
       10    0.000    0.000    0.000    0.000 decorators.py:82(call_highest_priority)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:120(SolverPolynomialRoots)
        1    0.000    0.000    0.000    0.000 {_ctypes.dlopen}
        2    0.000    0.000    0.000    0.000 atexit.py:37(register)
        5    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
        1    0.000    0.000    0.000    0.000 six.py:598(iteritems)
        1    0.000    0.000    0.000    0.000 optimize.py:1132(Brent)
        1    0.000    0.000    0.000    0.000 indexed.py:211(Indexed)
        1    0.000    0.000    0.000    0.000 rootisolation.py:1692(ComplexInterval)
        1    0.000    0.000    0.000    0.000 tempfile.py:383(_TemporaryFileWrapper)
        1    0.000    0.000    0.000    0.000 polygon.py:1270(Triangle)
        1    0.000    0.000    0.000    0.000 io.py:69(IOBase)
        2    0.000    0.000    0.000    0.000 quadrature.py:456(QuadratureMethods)
        2    0.000    0.000    0.000    0.000 ikfast_AST.py:467(end)
        1    0.000    0.000    0.000    0.000 logic.py:332(Or)
        1    0.000    0.000    0.000    0.000 products.py:6(Product)
        1    0.000    0.000    0.000    0.000 hyper.py:252(meijerg)
        1    0.000    0.000    0.000    0.000 urlparse.py:73(ResultMixin)
        1    0.000    0.000    0.000    0.000 numbers.py:270(Rational)
        1    0.000    0.000    0.000    0.000 curve.py:16(Curve)
        1    0.000    0.000    0.000    0.000 sets.py:304(AskComplexHandler)
        5    0.000    0.000    0.000    0.000 _inspect.py:145(<lambda>)
        1    0.000    0.000    0.000    0.000 sets.py:647(Union)
        7    0.000    0.000    0.000    0.000 _inspect.py:144(<lambda>)
        1    0.000    0.000    0.000    0.000 numbers.py:1530(NegativeInfinity)
        1    0.000    0.000    0.000    0.000 matrices.py:2842(SparseMatrix)
        1    0.000    0.000    0.000    0.000 traversaltools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 runtests.py:603(SymPyDocTests)
        1    0.000    0.000    0.000    0.000 monomialtools.py:292(Monomial)
        1    0.000    0.000    0.000    0.000 misc.py:163(parseEnvironment)
        1    0.000    0.000    0.000    0.000 plistlib.py:393(PlistParser)
        1    0.000    0.000    0.000    0.000 polyerrors.py:25(OperationNotSupported)
        1    0.000    0.000    0.000    0.000 __init__.py:370(DistributionNotFound)
        1    0.000    0.000    0.000    0.000 nonlin.py:442(Jacobian)
        2    0.000    0.000    0.000    0.000 optparse.py:1243(_create_option_list)
        1    0.000    0.000    0.000    0.000 logic.py:74(Logic)
        1    0.000    0.000    0.000    0.000 numbers.py:1764(Exp1)
        1    0.000    0.000    0.000    0.000 calendar.py:126(Calendar)
        8    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:648(<genexpr>)
        1    0.000    0.000    0.000    0.000 warnings.py:340(__init__)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:224(SolverCoeffFunction)
        1    0.000    0.000    0.000    0.000 bessel.py:21(BesselBase)
        2    0.000    0.000    0.000    0.000 pretty_symbology.py:149(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:1015(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:357(ContextualVersionConflict)
        2    0.000    0.000    0.000    0.000 quadrature.py:5(QuadratureRule)
        1    0.000    0.000    0.000    0.000 __init__.py:325(VersionConflict)
        1    0.000    0.000    0.000    0.000 index_tricks.py:475(ndenumerate)
        2    0.000    0.000    0.000    0.000 calculus.py:5(MatrixCalculusMethods)
        1    0.000    0.000    0.000    0.000 version.py:82(LegacyVersion)
        5    0.000    0.000    0.000    0.000 optparse.py:965(set_description)
        1    0.000    0.000    0.000    0.000 info.py:34(<module>)
        1    0.000    0.000    0.000    0.000 suite.py:78(TestSuite)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:48(LeviCivita)
        1    0.000    0.000    0.000    0.000 nonlin.py:855(BroydenFirst)
       14    0.000    0.000    0.000    0.000 openrave.py:73(<genexpr>)
        1    0.000    0.000    0.000    0.000 util.py:9(<module>)
        1    0.000    0.000    0.000    0.000 utils.py:1002(SafeEval)
        1    0.000    0.000    0.000    0.000 dia.py:14(dia_matrix)
        4    0.000    0.000    0.000    0.000 __init__.py:764(setFormatter)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:177(_ndptr)
        1    0.000    0.000    0.000    0.000 difflib.py:1670(HtmlDiff)
        1    0.000    0.000    0.000    0.000 numbers.py:1897(ImaginaryUnit)
        1    0.000    0.000    0.000    0.000 records.py:83(format_parser)
        1    0.000    0.000    0.000    0.000 ikfast.py:337(GinacUtils)
        1    0.000    0.000    0.000    0.000 numbers.py:1404(NegativeOne)
        2    0.000    0.000    0.000    0.000 optimization.py:352(Illinois)
        1    0.000    0.000    0.000    0.000 __init__.py:1798(ContextualZipFile)
        1    0.000    0.000    0.000    0.000 __init__.py:963(PlaceHolder)
        1    0.000    0.000    0.000    0.000 contextlib.py:132(closing)
        1    0.000    0.000    0.000    0.000 core.py:116(BasicMeta)
        4    0.000    0.000    0.000    0.000 {built-in method fromkeys}
        1    0.000    0.000    0.000    0.000 {method 'write' of '_io.BufferedWriter' objects}
        1    0.000    0.000    0.000    0.000 test_group.py:999(TestMutableMapping)
        1    0.000    0.000    0.000    0.000 urlparse.py:129(ParseResult)
        1    0.000    0.000    0.000    0.000 mul.py:10(NC_Marker)
        1    0.000    0.000    0.000    0.000 expr.py:1991(AtomicExpr)
        1    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:170(DegenerateCases)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:483(__init__)
        1    0.000    0.000    0.000    0.000 polyerrors.py:119(FlagError)
        1    0.000    0.000    0.000    0.000 base.py:341(MappingHDF5)
        1    0.000    0.000    0.000    0.000 polynomials.py:147(legendre)
       26    0.000    0.000    0.000    0.000 case.py:51(_id)
        1    0.000    0.000    0.000    0.000 index_methods.py:18(IndexConformanceException)
        3    0.000    0.000    0.000    0.000 polyutils.py:118(order_if_multiple_key)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:259(SMOOTH)
        1    0.000    0.000    0.000    0.000 polyoptions.py:602(Frac)
        1    0.000    0.000    0.000    0.000 test_slicing.py:40(TestSingleElement)
        4    0.000    0.000    0.000    0.000 {unichr}
        1    0.000    0.000    0.000    0.000 test_group.py:641(TestSoftLinks)
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 relational.py:155(Equality)
        1    0.000    0.000    0.000    0.000 Grasper.py:25(Grasper)
        1    0.000    0.000    0.000    0.000 feedparser.py:43(BufferedSubFile)
        1    0.000    0.000    0.000    0.000 utils.py:1612(WarningManager)
        1    0.000    0.000    0.000    0.000 numbers.py:363(harmonic)
        1    0.000    0.000    0.000    0.000 test_group.py:56(TestCreate)
        3    0.000    0.000    0.000    0.000 core.py:861(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:169(DollarMessage)
        1    0.000    0.000    0.000    0.000 facts.py:419(__init__)
       10    0.000    0.000    0.000    0.000 __init__.py:2094(find_nothing)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:204(DETAIL)
        1    0.000    0.000    0.000    0.000 numerictypes.py:765(_typedict)
        1    0.000    0.000    0.000    0.000 bdb.py:614(Tdb)
        2    0.000    0.000    0.000    0.000 six.py:60(X)
        1    0.000    0.000    0.000    0.000 zeros.py:20(RootResults)
        1    0.000    0.000    0.000    0.000 tensor_functions.py:10(Dij)
        1    0.000    0.000    0.000    0.000 polyoptions.py:480(Extension)
        1    0.000    0.000    0.000    0.000 core.py:2352(_MaskedPrintOption)
        1    0.000    0.000    0.000    0.000 complexes.py:83(im)
        1    0.000    0.000    0.000    0.000 nonlin.py:509(InverseJacobian)
        1    0.000    0.000    0.000    0.000 trigonometric.py:312(_eval_is_bounded)
        1    0.000    0.000    0.000    0.000 plistlib.py:230(PlistWriter)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:20(IncrementalEncoder)
        1    0.000    0.000    0.000    0.000 test_dataset_swmr.py:9(TestSwmrNotAvailable)
        2    0.000    0.000    0.000    0.000 optimization.py:211(Muller)
        1    0.000    0.000    0.000    0.000 assume.py:86(Predicate)
        1    0.000    0.000    0.000    0.000 __init__.py:1689(NullHandler)
        1    0.000    0.000    0.000    0.000 test_dataset.py:251(TestCreateNamedType)
        1    0.000    0.000    0.000    0.000 socket.py:171(_closedsocket)
        1    0.000    0.000    0.000    0.000 facts.py:380(TautologyDetected)
        1    0.000    0.000    0.000    0.000 test_dataset.py:213(TestCreateFillvalue)
        1    0.000    0.000    0.000    0.000 {h5py.h5z._register_lzf}
        4    0.000    0.000    0.000    0.000 numbers.py:1389(__abs__)
        1    0.000    0.000    0.000    0.000 __init__.py:2926(RequirementParseError)
        1    0.000    0.000    0.000    0.000 __init__.py:425(LibraryLoader)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:591(SolverIKChainTransform6D)
        1    0.000    0.000    0.000    0.000 _endian.py:46(BigEndianStructure)
        1    0.000    0.000    0.000    0.000 polyoptions.py:360(Composite)
        1    0.000    0.000    0.000    0.000 polycontext.py:18(Context)
        1    0.000    0.000    0.000    0.000 core.py:1118(_DomainedBinaryOperation)
        1    0.000    0.000    0.000    0.000 records.py:215(record)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:761(MultOperator)
        2    0.000    0.000    0.000    0.000 six.py:124(_LazyModule)
        1    0.000    0.000    0.000    0.000 linalg.py:43(LinAlgError)
        1    0.000    0.000    0.000    0.000 threading.py:780(_set_ident)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:270(SMOOTH_MORE)
        6    0.000    0.000    0.000    0.000 expr.py:742(as_expr)
        1    0.000    0.000    0.000    0.000 evalf.py:978(EvalfMixin)
        3    0.000    0.000    0.000    0.000 __init__.py:2147(register_namespace_handler)
        1    0.000    0.000    0.000    0.000 misc.py:465(MultiManipIKSolver)
        1    0.000    0.000    0.000    0.000 core.py:7764(_convert2ma)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:7(zeta)
        1    0.000    0.000    0.000    0.000 __init__.py:4(VendorImporter)
        1    0.000    0.000    0.000    0.000 test_selections.py:22(TestTypeGeneration)
        1    0.000    0.000    0.000    0.000 Shadow.py:251(StructType)
        1    0.000    0.000    0.000    0.000 errors.py:9(MessageError)
        1    0.000    0.000    0.000    0.000 test_dataset_getitem.py:220(TestScalarArray)
        1    0.000    0.000    0.000    0.000 sympyrationalfield.py:22(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:377(HTMLCalendar)
        2    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1153(<lambda>)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 __init__.py:15(AskCommutativeHandler)
        1    0.000    0.000    0.000    0.000 ikfast.py:331(atan2check)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:156(GaussianBlur)
        1    0.000    0.000    0.000    0.000 test_group.py:384(TestPy2Dict)
        2    0.000    0.000    0.000    0.000 ikfast_AST.py:460(__init__)
        3    0.000    0.000    0.000    0.000 files.py:37(<genexpr>)
        1    0.000    0.000    0.000    0.000 parser.py:86(HeaderParser)
        1    0.000    0.000    0.000    0.000 test_group.py:671(TestExternalLinks)
        1    0.000    0.000    0.000    0.000 core.py:2569(MaskedIterator)
        1    0.000    0.000    0.000    0.000 selections2.py:76(ScalarReadSelection)
        1    0.000    0.000    0.000    0.000 __init__.py:45(TautologicalHandler)
        2    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1154(<lambda>)
        1    0.000    0.000    0.000    0.000 test_h5.py:23(TestH5)
        1    0.000    0.000    0.000    0.000 Shadow.py:14(_ArrayType)
        1    0.000    0.000    0.000    0.000 info.py:154(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:203(SetuptoolsLegacyVersion)
        1    0.000    0.000    0.000    0.000 test_slicing.py:31(BaseSlicing)
        1    0.000    0.000    0.000    0.000 getlimits.py:25(finfo)
        1    0.000    0.000    0.000    0.000 test_slicing.py:80(TestObjectIndex)
        4    0.000    0.000    0.000    0.000 {h5py.h5.get_config}
        1    0.000    0.000    0.000    0.000 test_file.py:260(TestLibver)
        2    0.000    0.000    0.000    0.000 rszeta.py:53(RSCache)
        1    0.000    0.000    0.000    0.000 contextlib.py:9(GeneratorContextManager)
        1    0.000    0.000    0.000    0.000 urllib.py:1014(addinfourl)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:696(SolverIKChainDirection3D)
        1    0.000    0.000    0.000    0.000 test_slicing.py:125(TestSimpleSlicing)
        1    0.000    0.000    0.000    0.000 sets.py:244(RealSet)
        6    0.000    0.000    0.000    0.000 core.py:841(__init__)
        1    0.000    0.000    0.000    0.000 convexdecomposition.py:101(ConvexDecompositionError)
        5    0.000    0.000    0.000    0.000 optparse.py:960(set_conflict_handler)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:610(end)
        1    0.000    0.000    0.000    0.000 test_dataset_getitem.py:160(TestScalarCompound)
        1    0.000    0.000    0.000    0.000 relational.py:183(StrictInequality)
        1    0.000    0.000    0.000    0.000 test_attrs.py:42(TestAccess)
        1    0.000    0.000    0.000    0.000 Image.py:407(_E)
        1    0.000    0.000    0.000    0.000 gruntz.py:233(SubsSet)
        1    0.000    0.000    0.000    0.000 decimal.py:5696(__init__)
        1    0.000    0.000    0.000    0.000 sets.py:945(EmptySet)
        4    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:152(JointAxis)
        1    0.000    0.000    0.000    0.000 sets.py:283(AskExtendedRealHandler)
        1    0.000    0.000    0.000    0.000 core.py:68(Registry)
        1    0.000    0.000    0.000    0.000 polyclasses.py:5(GenericPoly)
        1    0.000    0.000    0.000    0.000 csr.py:19(csr_matrix)
        1    0.000    0.000    0.000    0.000 ccompiler.py:247(add_library)
        1    0.000    0.000    0.000    0.000 suite.py:252(_ErrorHolder)
        1    0.000    0.000    0.000    0.000 utils.py:1881(clear_and_catch_warnings)
        1    0.000    0.000    0.000    0.000 {method 'copy' of 'set' objects}
        2    0.000    0.000    0.000    0.000 index_tricks.py:647(__init__)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:33(mpnumeric)
        1    0.000    0.000    0.000    0.000 ssl.py:194(CertificateError)
        1    0.000    0.000    0.000    0.000 cache.py:132(MemoizerArg)
        1    0.000    0.000    0.000    0.000 sets.py:387(CountableSet)
        1    0.000    0.000    0.000    0.000 boolalg.py:6(Boolean)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:366(SolverBranchConds)
        1    0.000    0.000    0.000    0.000 __init__.py:199(SetuptoolsVersion)
        1    0.000    0.000    0.000    0.000 __init__.py:1986(FileMetadata)
        1    0.000    0.000    0.000    0.000 expressiondomain.py:111(__init__)
        1    0.000    0.000    0.000    0.000 nonlin.py:1127(DiagBroyden)
        1    0.000    0.000    0.000    0.000 urllib.py:862(ftpwrapper)
        1    0.000    0.000    0.000    0.000 bessel.py:266(SphericalBesselBase)
        1    0.000    0.000    0.000    0.000 singleton.py:6(SingletonRegistry)
        1    0.000    0.000    0.000    0.000 test_file.py:285(TestUserblock)
       12    0.000    0.000    0.000    0.000 matrices.py:988(<lambda>)
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        1    0.000    0.000    0.000    0.000 plistlib.py:331(Plist)
        1    0.000    0.000    0.000    0.000 polyutils.py:62(PolyError)
        1    0.000    0.000    0.000    0.000 __init__.py:329(CDLL)
        1    0.000    0.000    0.000    0.000 __init__.py:558(IMetadataProvider)
        1    0.000    0.000    0.000    0.000 polyoptions.py:512(Modulus)
        1    0.000    0.000    0.000    0.000 csc.py:17(csc_matrix)
        1    0.000    0.000    0.000    0.000 npyio.py:40(BagObj)
        1    0.000    0.000    0.000    0.000 selections.py:95(_RegionProxy)
        2    0.000    0.000    0.000    0.000 optimization.py:157(Halley)
        1    0.000    0.000    0.000    0.000 groundtypes.py:53(GMPYIntegerType)
        1    0.000    0.000    0.000    0.000 core.py:6285(_maximum_operation)
        1    0.000    0.000    0.000    0.000 case.py:98(_AssertRaisesContext)
        1    0.000    0.000    0.000    0.000 boolalg.py:71(Xor)
        1    0.000    0.000    0.000    0.000 __init__.py:156(py_object)
        1    0.000    0.000    0.000    0.000 parser.py:17(Parser)
        1    0.000    0.000    0.000    0.000 test_h5p.py:33(TestDA)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:263(Min)
        2    0.000    0.000    0.000    0.000 optimization.py:13(Newton)
        2    0.000    0.000    0.000    0.000 repr.py:10(__init__)
        1    0.000    0.000    0.000    0.000 core.py:6275(__init__)
        1    0.000    0.000    0.000    0.000 test_group.py:448(TestAdditionalMappingFuncs)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:13(Codec)
        1    0.000    0.000    0.000    0.000 openravepy_ext.py:142(PlanningError)
        1    0.000    0.000    0.000    0.000 inference.py:123(PropKB)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:648(FormulaCollection)
        1    0.000    0.000    0.000    0.000 __init__.py:2823(EggInfoDistribution)
        1    0.000    0.000    0.000    0.000 test_attrs_data.py:227(TestWriteException)
        1    0.000    0.000    0.000    0.000 plistlib.py:151(DumbXMLWriter)
        3    0.000    0.000    0.000    0.000 __init__.py:491(CFunctionType)
        1    0.000    0.000    0.000    0.000 gmpyfinitefield.py:6(GMPYFiniteField)
        1    0.000    0.000    0.000    0.000 sets.py:1111(RealFiniteSet)
        1    0.000    0.000    0.000    0.000 inversekinematics.py:231(ArmVisibility)
        1    0.000    0.000    0.000    0.000 kinematicreachability.py:81(QuaternionKDTree)
        1    0.000    0.000    0.000    0.000 __init__.py:545(Filter)
        1    0.000    0.000    0.000    0.000 test_dataset.py:749(TestCompound)
        1    0.000    0.000    0.000    0.000 _datasource.py:50(_FileOpeners)
        1    0.000    0.000    0.000    0.000 numbers.py:1444(Half)
        1    0.000    0.000    0.000    0.000 repr.py:8(Repr)
        1    0.000    0.000    0.000    0.000 __init__.py:173(c_long)
        1    0.000    0.000    0.000    0.000 colorsys.py:17(<module>)
        1    0.000    0.000    0.000    0.000 machar.py:17(MachAr)
        1    0.000    0.000    0.000    0.000 errors.py:66(DistutilsByteCompileError)
        1    0.000    0.000    0.000    0.000 memmap.py:20(memmap)
        1    0.000    0.000    0.000    0.000 test_dataset.py:792(TestEnum)
        1    0.000    0.000    0.000    0.000 polysys.py:10(SolveFailed)
        1    0.000    0.000    0.000    0.000 characteristiczero.py:5(CharacteristicZero)
        1    0.000    0.000    0.000    0.000 calendar.py:489(TimeEncoding)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:9(IdentityFunction)
        1    0.000    0.000    0.000    0.000 exponential.py:491(LambertW)
        1    0.000    0.000    0.000    0.000 basic.py:1198(Atom)
        1    0.000    0.000    0.000    0.000 nonlin.py:1270(KrylovJacobian)
        1    0.000    0.000    0.000    0.000 test_dataset_getitem.py:106(TestScalarFloat)
        1    0.000    0.000    0.000    0.000 core.py:796(_DomainCheckInterval)
        1    0.000    0.000    0.000    0.000 case.py:34(_ExpectedFailure)
        1    0.000    0.000    0.000    0.000 _import_tools.py:9(PackageLoader)
        1    0.000    0.000    0.000    0.000 errors.py:21(BoundaryError)
        1    0.000    0.000    0.000    0.000 test_dimension_scales.py:136(TestDimensionsHighLevel)
        1    0.000    0.000    0.000    0.000 doctest.py:1688(UnexpectedException)
        1    0.000    0.000    0.000    0.000 arpack.py:904(SpLuInv)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 hyperexpand.py:881(ReduceOrder)
        1    0.000    0.000    0.000    0.000 test_dataset.py:939(TestVlen)
        1    0.000    0.000    0.000    0.000 calendar.py:21(IllegalMonthError)
        1    0.000    0.000    0.000    0.000 polynomials.py:173(assoc_legendre)
        1    0.000    0.000    0.000    0.000 __init__.py:230(c_byte)
        1    0.000    0.000    0.000    0.000 posixpath.py:173(samestat)
        1    0.000    0.000    0.000    0.000 index_tricks.py:223(AxisConcatenator)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:180(uppergamma)
        3    0.000    0.000    0.000    0.000 numbers.py:1501(_as_mpf_val)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:38(MinMaxBase)
        1    0.000    0.000    0.000    0.000 sets.py:1158(<genexpr>)
        2    0.000    0.000    0.000    0.000 {method 'join' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 operations.py:372(args)
        1    0.000    0.000    0.000    0.000 test_h5f.py:23(TestFileID)
        1    0.000    0.000    0.000    0.000 miscellaneous.py:160(Max)
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.set_typeDict}
        1    0.000    0.000    0.000    0.000 python.py:11(PythonPrinter)
        1    0.000    0.000    0.000    0.000 ImagePalette.py:25(ImagePalette)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.set_string_function}
        1    0.000    0.000    0.000    0.000 numbers.py:1633(ComplexInfinity)
        1    0.000    0.000    0.000    0.000 test_dataset.py:633(TestIter)
        1    0.000    0.000    0.000    0.000 zipfile.py:262(ZipInfo)
        1    0.000    0.000    0.000    0.000 function.py:52(ArgumentIndexError)
        1    0.000    0.000    0.000    0.000 nonlin.py:992(Anderson)
        1    0.000    0.000    0.000    0.000 numbers.py:13(Number)
        1    0.000    0.000    0.000    0.000 sets.py:410(AskAlgebraicHandler)
        1    0.000    0.000    0.000    0.000 complexes.py:322(conjugate)
        1    0.000    0.000    0.000    0.000 line.py:691(Line)
        1    0.000    0.000    0.000    0.000 arpack.py:288(ArpackError)
        1    0.000    0.000    0.000    0.000 numbers.py:1850(EulerGamma)
        1    0.000    0.000    0.000    0.000 doctest.py:2178(DocTestCase)
        1    0.000    0.000    0.000    0.000 polyoptions.py:341(Field)
        1    0.000    0.000    0.000    0.000 multinomial.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:172(AddrlistClass)
        1    0.000    0.000    0.000    0.000 polynomial.py:22(RankWarning)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:665(getFKFunctionPreamble)
        1    0.000    0.000    0.000    0.000 version.py:3(<module>)
        1    0.000    0.000    0.000    0.000 polyutils.py:58(RankWarning)
        1    0.000    0.000    0.000    0.000 ikfast.py:325(fmod)
        1    0.000    0.000    0.000    0.000 polyoptions.py:16(Option)
        1    0.000    0.000    0.000    0.000 inversekinematics.py:207(InverseKinematicsError)
        1    0.000    0.000    0.000    0.000 inspect.py:631(BlockFinder)
        1    0.000    0.000    0.000    0.000 nonlin.py:1212(ExcitingMixing)
        1    0.000    0.000    0.000    0.000 __init__.py:94(Formatter)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:788(SolverIKChainAxisAngle)
        1    0.000    0.000    0.000    0.000 shutil.py:34(SpecialFileError)
        1    0.000    0.000    0.000    0.000 __init__.py:100(_SetuptoolsVersionMixin)
        1    0.000    0.000    0.000    0.000 factorials.py:192(RisingFactorial)
        1    0.000    0.000    0.000    0.000 cache.py:174(Memoizer)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:835(UnShiftB)
        1    0.000    0.000    0.000    0.000 _internal.py:631(TooHardError)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:599(__init__)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:167(UnsharpMask)
        1    0.000    0.000    0.000    0.000 polyutils.py:66(PolyDomainError)
        4    0.000    0.000    0.000    0.000 memoization.py:8(decorator)
        1    0.000    0.000    0.000    0.000 doctest.py:2077(Tester)
        2    0.000    0.000    0.000    0.000 inversekinematics.py:633(<genexpr>)
        1    0.000    0.000    0.000    0.000 zipfile.py:20(BadZipfile)
        1    0.000    0.000    0.000    0.000 complexes.py:196(_eval_is_zero)
        1    0.000    0.000    0.000    0.000 openravepy_ext.py:114(std_exception)
        1    0.000    0.000    0.000    0.000 __init__.py:202(c_longdouble)
        1    0.000    0.000    0.000    0.000 index_tricks.py:87(nd_grid)
        1    0.000    0.000    0.000    0.000 polyoptions.py:631(Include)
        1    0.000    0.000    0.000    0.000 polyerrors.py:46(EvaluationFailed)
        1    0.000    0.000    0.000    0.000 arpack.py:386(_SymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:526(__init__)
        1    0.000    0.000    0.000    0.000 function.py:57(FunctionClass)
        1    0.000    0.000    0.000    0.000 extras.py:1332(MAxisConcatenator)
        1    0.000    0.000    0.000    0.000 polyoptions.py:671(Symbols)
        2    0.000    0.000    0.000    0.000 polytools.py:3239(is_univariate)
        1    0.000    0.000    0.000    0.000 zeta_functions.py:49(dirichlet_eta)
        1    0.000    0.000    0.000    0.000 core.py:961(_MaskedBinaryOperation)
        1    0.000    0.000    0.000    0.000 bessel.py:349(yn)
        1    0.000    0.000    0.000    0.000 grasping.py:204(GripperVisibility)
        1    0.000    0.000    0.000    0.000 function.py:576(WildFunction)
        1    0.000    0.000    0.000    0.000 polynomials.py:70(chebyshevu)
        1    0.000    0.000    0.000    0.000 hyperbolic.py:10(HyperbolicFunction)
        2    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
        1    0.000    0.000    0.000    0.000 bessel.py:236(hankel2)
        1    0.000    0.000    0.000    0.000 platform.py:390(_popen)
        1    0.000    0.000    0.000    0.000 polyerrors.py:55(NotInvertible)
        1    0.000    0.000    0.000    0.000 numbers.py:91(lucas)
        4    0.000    0.000    0.000    0.000 memoization.py:1(recurrence_memo)
        1    0.000    0.000    0.000    0.000 test_file.py:465(TestFlush)
        1    0.000    0.000    0.000    0.000 ccompiler.py:367(_get_cc_args)
        1    0.000    0.000    0.000    0.000 threading.py:423(_Semaphore)
        1    0.000    0.000    0.000    0.000 polyoptions.py:449(Split)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:517(SolverStoreSolution)
        1    0.000    0.000    0.000    0.000 bdb.py:449(Breakpoint)
        1    0.000    0.000    0.000    0.000 anneal.py:14(base_schedule)
        1    0.000    0.000    0.000    0.000 numbers.py:1824(GoldenRatio)
        1    0.000    0.000    0.000    0.000 __init__.py:820(StreamHandler)
        1    0.000    0.000    0.000    0.000 complexes.py:12(re)
        1    0.000    0.000    0.000    0.000 test_file.py:389(TestUnicode)
        1    0.000    0.000    0.000    0.000 warnings.py:377(__exit__)
        1    0.000    0.000    0.000    0.000 polyoptions.py:323(Order)
        1    0.000    0.000    0.000    0.000 zipfile.py:1377(PyZipFile)
        1    0.000    0.000    0.000    0.000 threading.py:1119(_DummyThread)
        1    0.000    0.000    0.000    0.000 __init__.py:1737(EmptyProvider)
        1    0.000    0.000    0.000    0.000 case.py:45(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 rationalfield.py:7(RationalField)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:1228(PrecisionManager)
        1    0.000    0.000    0.000    0.000 test_dataset.py:610(TestLen)
        2    0.000    0.000    0.000    0.000 {strop.maketrans}
        1    0.000    0.000    0.000    0.000 test_dataset.py:55(TestCreateShape)
        1    0.000    0.000    0.000    0.000 test_dataset.py:598(TestDtype)
        1    0.000    0.000    0.000    0.000 Image.py:34(_imaging_not_installed)
        1    0.000    0.000    0.000    0.000 core.py:818(_DomainTan)
        1    0.000    0.000    0.000    0.000 test_threads.py:22(TestErrorPrinting)
        1    0.000    0.000    0.000    0.000 shutil.py:31(Error)
        1    0.000    0.000    0.000    0.000 plistlib.py:365(Data)
        1    0.000    0.000    0.000    0.000 sets.py:252(ProductSet)
        1    0.000    0.000    0.000    0.000 containers.py:12(Tuple)
        1    0.000    0.000    0.000    0.000 _iotools.py:460(ConversionWarning)
        1    0.000    0.000    0.000    0.000 doctest.py:1707(DebugRunner)
        5    0.000    0.000    0.000    0.000 iterative.py:66(set_docstring)
        1    0.000    0.000    0.000    0.000 selections.py:231(SimpleSelection)
        1    0.000    0.000    0.000    0.000 complexes.py:157(sign)
        1    0.000    0.000    0.000    0.000 errors.py:35(MessageDefect)
        2    0.000    0.000    0.000    0.000 index_tricks.py:148(__init__)
        1    0.000    0.000    0.000    0.000 assume.py:5(AssumptionsContext)
        1    0.000    0.000    0.000    0.000 pretty_symbology.py:41(pretty_use_unicode)
        1    0.000    0.000    0.000    0.000 core.py:6289(__init__)
        1    0.000    0.000    0.000    0.000 test_dataset.py:266(TestCreateGzip)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 polyerrors.py:86(GeneratorsError)
        1    0.000    0.000    0.000    0.000 decimal.py:224(ConversionSyntax)
        1    0.000    0.000    0.000    0.000 trigonometric.py:1353(atan2)
        6    0.000    0.000    0.000    0.000 {delattr}
        1    0.000    0.000    0.000    0.000 polyerrors.py:116(OptionError)
        1    0.000    0.000    0.000    0.000 _compat.py:37(metaclass)
        1    0.000    0.000    0.000    0.000 polyoptions.py:56(OptionType)
        1    0.000    0.000    0.000    0.000 delta_functions.py:136(Heaviside)
        1    0.000    0.000    0.000    0.000 polyoptions.py:613(Formal)
        1    0.000    0.000    0.000    0.000 doctest.py:427(Example)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:101(lowergamma)
        1    0.000    0.000    0.000    0.000 numbers.py:1600(NaN)
        1    0.000    0.000    0.000    0.000 pythonfinitefield.py:6(PythonFiniteField)
        1    0.000    0.000    0.000    0.000 selections.py:315(FancySelection)
        1    0.000    0.000    0.000    0.000 epathtools.py:5(EPath)
        1    0.000    0.000    0.000    0.000 test_file.py:28(TestFileOpen)
        1    0.000    0.000    0.000    0.000 _datasource.py:74(__init__)
        1    0.000    0.000    0.000    0.000 group.py:511(ExternalLink)
        2    0.000    0.000    0.000    0.000 six.py:555(Iterator)
        1    0.000    0.000    0.000    0.000 doctest.py:355(_OutputRedirectingPdb)
        1    0.000    0.000    0.000    0.000 mpmathcomplexdomain.py:5(MPmathComplexDomain)
        1    0.000    0.000    0.000    0.000 Shadow.py:212(PointerType)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:643(SolverIKChainTranslation3D)
        1    0.000    0.000    0.000    0.000 cse_opts.py:25(Sub)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:543(__init__)
        2    0.000    0.000    0.000    0.000 polytools.py:3261(is_multivariate)
        3    0.000    0.000    0.000    0.000 optparse.py:1675(_match_abbrev)
        1    0.000    0.000    0.000    0.000 cache.py:272(Memoizer_nocache)
        1    0.000    0.000    0.000    0.000 __init__.py:73(StringTemplateStyle)
        1    0.000    0.000    0.000    0.000 zipfile.py:24(LargeZipFile)
        1    0.000    0.000    0.000    0.000 _structures.py:17(Infinity)
        1    0.000    0.000    0.000    0.000 factorials.py:255(FallingFactorial)
        1    0.000    0.000    0.000    0.000 polyoptions.py:584(Auto)
        1    0.000    0.000    0.000    0.000 group.py:491(SoftLink)
        2    0.000    0.000    0.000    0.000 optparse.py:1268(_init_parsing_state)
        6    0.000    0.000    0.000    0.000 gruntz.py:130(debug)
        1    0.000    0.000    0.000    0.000 sets.py:342(AskImaginaryHandler)
        1    0.000    0.000    0.000    0.000 arpack.py:938(IterInv)
        1    0.000    0.000    0.000    0.000 core.py:6271(_minimum_operation)
        1    0.000    0.000    0.000    0.000 version.py:46(InvalidVersion)
        1    0.000    0.000    0.000    0.000 boolalg.py:144(Equivalent)
        1    0.000    0.000    0.000    0.000 bessel.py:181(besselk)
        1    0.000    0.000    0.000    0.000 nonlin.py:1173(LinearMixing)
        1    0.000    0.000    0.000    0.000 {_ctypes.set_conversion_mode}
        1    0.000    0.000    0.000    0.000 field.py:6(Field)
        1    0.000    0.000    0.000    0.000 test_datatype.py:12(TestVlen)
        2    0.000    0.000    0.000    0.000 __init__.py:426(__init__)
        1    0.000    0.000    0.000    0.000 complexes.py:299(arg)
        1    0.000    0.000    0.000    0.000 bessel.py:117(bessely)
        1    0.000    0.000    0.000    0.000 Shadow.py:105(_Optimization)
        1    0.000    0.000    0.000    0.000 test_attrs_data.py:37(TestScalar)
        1    0.000    0.000    0.000    0.000 __init__.py:385(PyDLL)
        1    0.000    0.000    0.000    0.000 bessel.py:54(besselj)
        1    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:155(Variable)
        1    0.000    0.000    0.000    0.000 __init__.py:582(Filterer)
        1    0.000    0.000    0.000    0.000 log.py:14(Log)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:494(SolverFunction)
        1    0.000    0.000    0.000    0.000 test_group.py:185(TestOpen)
        1    0.000    0.000    0.000    0.000 polyoptions.py:228(Expand)
        3    0.000    0.000    0.000    0.000 __init__.py:976(append)
        1    0.000    0.000    0.000    0.000 errors.py:63(DistutilsTemplateError)
        1    0.000    0.000    0.000    0.000 io.py:79(TextIOBase)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:28(StreamWriter)
        1    0.000    0.000    0.000    0.000 test_attrs_data.py:192(TestEmpty)
        1    0.000    0.000    0.000    0.000 __init__.py:582(IResourceProvider)
        1    0.000    0.000    0.000    0.000 test_dataset.py:134(TestCreateRequire)
        1    0.000    0.000    0.000    0.000 core.py:885(_MaskedUnaryOperation)
        1    0.000    0.000    0.000    0.000 test_datatype.py:36(TestCreation)
        1    0.000    0.000    0.000    0.000 umfpack.py:254(UmfpackContext)
        2    0.000    0.000    0.000    0.000 optimization.py:597(MDNewton)
        1    0.000    0.000    0.000    0.000 factorials.py:324(binomial)
        1    0.000    0.000    0.000    0.000 printing.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:122(MaxFilter)
        1    0.000    0.000    0.000    0.000 sympyfinitefield.py:6(SymPyFiniteField)
        1    0.000    0.000    0.000    0.000 selections.py:185(PointSelection)
        1    0.000    0.000    0.000    0.000 arrayprint.py:712(DatetimeFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:4(AskHandler)
        1    0.000    0.000    0.000    0.000 sympify.py:8(SympifyError)
        2    0.000    0.000    0.000    0.000 __init__.py:62(_CloseDatabase)
        1    0.000    0.000    0.000    0.000 threading.py:255(_Condition)
        1    0.000    0.000    0.000    0.000 core.py:6342(_frommethod)
        1    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:115(CannotSolveError)
        1    0.000    0.000    0.000    0.000 test_slicing.py:144(TestArraySlicing)
        1    0.000    0.000    0.000    0.000 {h5py._errors.silence_errors}
        1    0.000    0.000    0.000    0.000 Shadow.py:433(CythonDotParallel)
        1    0.000    0.000    0.000    0.000 arrayprint.py:654(LongFloatFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:240(c_char_p)
        1    0.000    0.000    0.000    0.000 doctest.py:1536(OutputChecker)
        1    0.000    0.000    0.000    0.000 visualfeedback.py:25(VisualFeedback)
        1    0.000    0.000    0.000    0.000 polynomials.py:24(PolynomialSequence)
        2    0.000    0.000    0.000    0.000 optparse.py:225(set_parser)
        1    0.000    0.000    0.000    0.000 runtests.py:939(Reporter)
        1    0.000    0.000    0.000    0.000 __init__.py:1709(DefaultProvider)
        1    0.000    0.000    0.000    0.000 dataset.py:137(AstypeContext)
        1    0.000    0.000    0.000    0.000 doctest.py:2341(SkipDocTestCase)
        1    0.000    0.000    0.000    0.000 _internal.py:219(_missing_ctypes)
        1    0.000    0.000    0.000    0.000 numbers.py:1795(Pi)
        1    0.000    0.000    0.000    0.000 threading.py:1049(_Timer)
        1    0.000    0.000    0.000    0.000 ctx_mp.py:1223(PrecisionManager)
        1    0.000    0.000    0.000    0.000 test_attrs_data.py:84(TestTypes)
        1    0.000    0.000    0.000    0.000 delta_functions.py:8(DiracDelta)
        1    0.000    0.000    0.000    0.000 pyANN.py:19(pyann_exception)
        1    0.000    0.000    0.000    0.000 hyper.py:29(TupleParametersBase)
        1    0.000    0.000    0.000    0.000 arrayprint.py:528(FloatFormat)
        1    0.000    0.000    0.000    0.000 test_dataset.py:546(TestResize)
        1    0.000    0.000    0.000    0.000 timeit.py:105(Timer)
        1    0.000    0.000    0.000    0.000 feedparser.py:158(FeedParser)
        5    0.000    0.000    0.000    0.000 gruntz.py:152(timeit)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:95(atan2check)
        1    0.000    0.000    0.000    0.000 test_attrs.py:79(TestDelete)
        1    0.000    0.000    0.000    0.000 nonlin.py:132(NoConvergence)
        1    0.000    0.000    0.000    0.000 assumptions.py:5(CycleDetected)
        1    0.000    0.000    0.000    0.000 tokenize.py:46(any)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:273(polygamma)
        1    0.000    0.000    0.000    0.000 __init__.py:257(c_bool)
        2    0.000    0.000    0.000    0.000 optimization.py:288(Bisection)
        1    0.000    0.000    0.000    0.000 test_attrs.py:144(TestMutableMapping)
        1    0.000    0.000    0.000    0.000 arrayprint.py:733(TimedeltaFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:223(c_ubyte)
        1    0.000    0.000    0.000    0.000 threading.py:1079(_MainThread)
        1    0.000    0.000    0.000    0.000 io.py:76(BufferedIOBase)
        1    0.000    0.000    0.000    0.000 __init__.py:2040(EggMetadata)
        1    0.000    0.000    0.000    0.000 test_group.py:149(TestDelete)
        1    0.000    0.000    0.000    0.000 test_file.py:478(TestRepr)
        1    0.000    0.000    0.000    0.000 runtests.py:714(SymPyDocTestFinder)
        1    0.000    0.000    0.000    0.000 {method 'toordinal' of 'datetime.date' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:198(c_double)
        1    0.000    0.000    0.000    0.000 metaclass.py:30(MetaAutoReloader)
        1    0.000    0.000    0.000    0.000 errors.py:17(HeaderParseError)
        1    0.000    0.000    0.000    0.000 __init__.py:169(c_ushort)
        1    0.000    0.000    0.000    0.000 version.py:5(<module>)
        1    0.000    0.000    0.000    0.000 polyerrors.py:49(RefinementFailed)
        1    0.000    0.000    0.000    0.000 arpack.py:924(LuInv)
        1    0.000    0.000    0.000    0.000 polynomials.py:229(hermite)
        2    0.000    0.000    0.000    0.000 groundtypes.py:58(__init__)
        2    0.000    0.000    0.000    0.000 calculus.py:1(CalculusMethods)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:140(ModeFilter)
        1    0.000    0.000    0.000    0.000 singleton.py:21(Singleton)
        1    0.000    0.000    0.000    0.000 __init__.py:356(_FuncPtr)
        1    0.000    0.000    0.000    0.000 decimal.py:250(DivisionImpossible)
        1    0.000    0.000    0.000    0.000 test_attrs_data.py:28(BaseAttrs)
        1    0.000    0.000    0.000    0.000 test_group.py:242(TestRepr)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:367(IndexQuadruple)
        1    0.000    0.000    0.000    0.000 test_dimension_scales.py:21(BaseDataset)
        1    0.000    0.000    0.000    0.000 __init__.py:225(LogRecord)
        1    0.000    0.000    0.000    0.000 decimal.py:310(Subnormal)
        1    0.000    0.000    0.000    0.000 metaclass.py:3(MetaInstanceTracker)
        1    0.000    0.000    0.000    0.000 facts.py:641(FactRules)
        1    0.000    0.000    0.000    0.000 plistlib.py:322(Dict)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:57(BuiltinFilter)
        1    0.000    0.000    0.000    0.000 test_base.py:27(BaseTest)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:758(SolverIKChainLookat3D)
        1    0.000    0.000    0.000    0.000 polyoptions.py:653(Gen)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:90(MedianFilter)
        1    0.000    0.000    0.000    0.000 {_codecs.lookup}
        1    0.000    0.000    0.000    0.000 matrices.py:20(ShapeError)
        1    0.000    0.000    0.000    0.000 log.py:16(__init__)
        1    0.000    0.000    0.000    0.000 core.py:138(MaskError)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 base.py:300(ValuesViewHDF5)
        1    0.000    0.000    0.000    0.000 decimal.py:183(Clamped)
        1    0.000    0.000    0.000    0.000 iterables.py:139(preorder_traversal)
        1    0.000    0.000    0.000    0.000 arrayprint.py:695(ComplexFormat)
        1    0.000    0.000    0.000    0.000 base.py:322(ItemsViewHDF5)
        1    0.000    0.000    0.000    0.000 lobpcg.py:85(CallableLinearOperator)
        3    0.000    0.000    0.000    0.000 optparse.py:953(_share_option_mappings)
        1    0.000    0.000    0.000    0.000 metaclass.py:18(InstanceTracker)
        1    0.000    0.000    0.000    0.000 polynomials.py:118(chebyshevu_root)
        1    0.000    0.000    0.000    0.000 factorials.py:149(MultiFactorial)
        1    0.000    0.000    0.000    0.000 errors.py:29(CharsetError)
        1    0.000    0.000    0.000    0.000 sets.py:830(RealUnion)
        1    0.000    0.000    0.000    0.000 compositedomain.py:6(CompositeDomain)
        1    0.000    0.000    0.000    0.000 polyutils.py:79(PolyBase)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:24(IncrementalDecoder)
        1    0.000    0.000    0.000    0.000 __init__.py:194(c_float)
        1    0.000    0.000    0.000    0.000 urllib.py:955(addbase)
        1    0.000    0.000    0.000    0.000 test_file.py:445(TestClose)
        1    0.000    0.000    0.000    0.000 test_file.py:28(TestDealloc)
        1    0.000    0.000    0.000    0.000 inference.py:106(KB)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:617(SolverIKChainRotation3D)
        2    0.000    0.000    0.000    0.000 ikfast_AST.py:221(GetZeroThreshold)
        1    0.000    0.000    0.000    0.000 test_h5f.py:41(TestCacheConfig)
        1    0.000    0.000    0.000    0.000 polyerrors.py:67(PolynomialError)
        1    0.000    0.000    0.000    0.000 version.py:32(Version)
        2    0.000    0.000    0.000    0.000 calendar.py:71(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:138(setfirstweekday)
        1    0.000    0.000    0.000    0.000 errors.py:29(DistutilsArgError)
        1    0.000    0.000    0.000    0.000 coreerrors.py:6(NonCommutativeExpression)
        1    0.000    0.000    0.000    0.000 doctest.py:2696(_TestClass)
        1    0.000    0.000    0.000    0.000 sre_parse.py:218(seek)
        1    0.000    0.000    0.000    0.000 posixpath.py:104(splitdrive)
        1    0.000    0.000    0.000    0.000 decimal.py:5438(_WorkRep)
        1    0.000    0.000    0.000    0.000 bdb.py:10(BdbQuit)
        1    0.000    0.000    0.000    0.000 errors.py:44(StartBoundaryNotFoundDefect)
        1    0.000    0.000    0.000    0.000 logic.py:342(Not)
        1    0.000    0.000    0.000    0.000 test_objects.py:19(TestObjects)
        1    0.000    0.000    0.000    0.000 nonlin.py:948(BroydenSecond)
        1    0.000    0.000    0.000    0.000 arpack.py:603(_UnsymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:18(Filter)
        1    0.000    0.000    0.000    0.000 test_dataset_getitem.py:51(TestEmpty)
        3    0.000    0.000    0.000    0.000 optparse.py:753(takes_value)
        1    0.000    0.000    0.000    0.000 {math.sqrt}
        1    0.000    0.000    0.000    0.000 doctest.py:1669(DocTestFailure)
        4    0.000    0.000    0.000    0.000 exponential.py:356(as_base_exp)
        1    0.000    0.000    0.000    0.000 __init__.py:891(FileHandler)
        1    0.000    0.000    0.000    0.000 _iotools.py:444(ConverterError)
        1    0.000    0.000    0.000    0.000 __init__.py:1387(RootLogger)
        1    0.000    0.000    0.000    0.000 polyoptions.py:41(Flag)
        1    0.000    0.000    0.000    0.000 groundtypes.py:57(GMPYRationalType)
        1    0.000    0.000    0.000    0.000 core.py:870(_DomainGreaterEqual)
        1    0.000    0.000    0.000    0.000 limits.py:220(Limit)
        1    0.000    0.000    0.000    0.000 test_slicing.py:225(TestEmptySlicing)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:722(SolverIKChainRay)
        1    0.000    0.000    0.000    0.000 errors.py:38(DistutilsOptionError)
        2    0.000    0.000    0.000    0.000 core.py:876(__init__)
        1    0.000    0.000    0.000    0.000 interface.py:203(MatrixLinearOperator)
        1    0.000    0.000    0.000    0.000 test_dataset.py:384(TestCreateShuffle)
        1    0.000    0.000    0.000    0.000 decimal.py:3748(_ContextManager)
        1    0.000    0.000    0.000    0.000 _structures.py:49(NegativeInfinity)
        1    0.000    0.000    0.000    0.000 symbol.py:104(Dummy)
        1    0.000    0.000    0.000    0.000 io.py:73(RawIOBase)
        6    0.000    0.000    0.000    0.000 {pow}
        1    0.000    0.000    0.000    0.000 __init__.py:157(BraceMessage)
        1    0.000    0.000    0.000    0.000 TaskManipulation.py:304(SwitchState)
        1    0.000    0.000    0.000    0.000 inspect.py:629(EndOfBlock)
        1    0.000    0.000    0.000    0.000 test_base.py:36(TestName)
        1    0.000    0.000    0.000    0.000 Shadow.py:205(CythonType)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 str.py:487(StrReprPrinter)
        1    0.000    0.000    0.000    0.000 test_dataset.py:910(TestAstype)
        1    0.000    0.000    0.000    0.000 sets.py:379(RealSet)
        1    0.000    0.000    0.000    0.000 index_tricks.py:452(CClass)
        1    0.000    0.000    0.000    0.000 tokenize.py:179(Untokenizer)
        1    0.000    0.000    0.000    0.000 Image.py:1722(ImageTransformHandler)
       11    0.000    0.000    0.000    0.000 {operator.abs}
        1    0.000    0.000    0.000    0.000 _globals.py:45(VisibleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:969(__init__)
        1    0.000    0.000    0.000    0.000 anneal.py:92(fast_sa)
        1    0.000    0.000    0.000    0.000 test_group.py:290(TestContains)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:215(EDGE_ENHANCE)
        1    0.000    0.000    0.000    0.000 errors.py:33(DistutilsFileError)
        1    0.000    0.000    0.000    0.000 urllib.py:1004(addinfo)
        1    0.000    0.000    0.000    0.000 tokenize.py:148(StopTokenizing)
        1    0.000    0.000    0.000    0.000 __init__.py:65(StrFormatStyle)
        1    0.000    0.000    0.000    0.000 __init__.py:177(c_ulong)
        1    0.000    0.000    0.000    0.000 memoization.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Shadow.py:326(typedef)
        2    0.000    0.000    0.000    0.000 pythonintegerring.py:20(__init__)
        1    0.000    0.000    0.000    0.000 boolalg.py:128(Implies)
        2    0.000    0.000    0.000    0.000 six.py:430(Module_six_moves_urllib_response)
        4    0.000    0.000    0.000    0.000 sre_parse.py:224(isdigit)
        1    0.000    0.000    0.000    0.000 test_group.py:965(TestMove)
        1    0.000    0.000    0.000    0.000 group.py:481(HardLink)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 polyerrors.py:43(ExtraneousFactors)
        1    0.000    0.000    0.000    0.000 anneal.py:115(cauchy_sa)
        1    0.000    0.000    0.000    0.000 coreerrors.py:3(BaseCoreError)
        1    0.000    0.000    0.000    0.000 _iotools.py:452(ConverterLockError)
        1    0.000    0.000    0.000    0.000 __init__.py:93(PEP440Warning)
        1    0.000    0.000    0.000    0.000 test_attrs.py:162(TestVlen)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:456(SolverFreeParameter)
        1    0.000    0.000    0.000    0.000 __init__.py:1114(ExtractionError)
        1    0.000    0.000    0.000    0.000 test_dataset.py:371(TestCreateSZIP)
        1    0.000    0.000    0.000    0.000 polyerrors.py:95(PolificationFailed)
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 runner.py:12(_WritelnDecorator)
        2    0.000    0.000    0.000    0.000 sre_parse.py:216(tell)
        1    0.000    0.000    0.000    0.000 decimal.py:160(DecimalException)
        1    0.000    0.000    0.000    0.000 bessel.py:299(jn)
        1    0.000    0.000    0.000    0.000 decimal.py:261(DivisionUndefined)
        1    0.000    0.000    0.000    0.000 threading.py:57(_Verbose)
        1    0.000    0.000    0.000    0.000 ring.py:6(Ring)
        1    0.000    0.000    0.000    0.000 test_attrs.py:125(TestCreate)
        1    0.000    0.000    0.000    0.000 Shadow.py:198(CythonMetaType)
        1    0.000    0.000    0.000    0.000 polyerrors.py:70(UnificationFailed)
        1    0.000    0.000    0.000    0.000 doctest.py:2431(DocFileCase)
        1    0.000    0.000    0.000    0.000 __init__.py:8(CommonHandler)
        2    0.000    0.000    0.000    0.000 optparse.py:944(_create_option_mappings)
        1    0.000    0.000    0.000    0.000 __init__.py:319(ResolutionError)
        1    0.000    0.000    0.000    0.000 tree.py:3(<module>)
        1    0.000    0.000    0.000    0.000 indexed.py:111(IndexException)
        1    0.000    0.000    0.000    0.000 core.py:90(MaskedArrayFutureWarning)
        1    0.000    0.000    0.000    0.000 boolalg.py:44(And)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:715(Operator)
        1    0.000    0.000    0.000    0.000 mpmathcomplexdomain.py:10(__init__)
        1    0.000    0.000    0.000    0.000 errors.py:50(MisplacedEnvelopeHeaderDefect)
        1    0.000    0.000    0.000    0.000 {method '__exit__' of 'thread.lock' objects}
        1    0.000    0.000    0.000    0.000 index_tricks.py:352(RClass)
        1    0.000    0.000    0.000    0.000 visibilitymodel.py:95(GripperVisibility)
        1    0.000    0.000    0.000    0.000 Image.py:1683(_ImageCrop)
        2    0.000    0.000    0.000    0.000 odes.py:4(ODEMethods)
        1    0.000    0.000    0.000    0.000 index_tricks.py:603(IndexExpression)
        3    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:1432(endPolynomialRoots)
        1    0.000    0.000    0.000    0.000 <string>:2(<module>)
        1    0.000    0.000    0.000    0.000 operations.py:285(ShortCircuit)
        1    0.000    0.000    0.000    0.000 index_tricks.py:525(ndindex)
        2    0.000    0.000    0.000    0.000 six.py:139(MovedAttribute)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:670(SolverIKChainTranslationXY2D)
        2    0.000    0.000    0.000    0.000 optimization.py:5(OptimizationMethods)
        1    0.000    0.000    0.000    0.000 errors.py:25(MultipartConversionError)
        1    0.000    0.000    0.000    0.000 extras.py:215(_fromnxfunction)
        1    0.000    0.000    0.000    0.000 polyerrors.py:9(ExactQuotientFailed)
        2    0.000    0.000    0.000    0.000 libmpf.py:43(ComplexResult)
        1    0.000    0.000    0.000    0.000 __init__.py:235(c_char)
        1    0.000    0.000    0.000    0.000 test_dataset.py:1062(TestLowOpen)
        1    0.000    0.000    0.000    0.000 boolalg.py:108(Nand)
        1    0.000    0.000    0.000    0.000 errors.py:50(DistutilsPlatformError)
        1    0.000    0.000    0.000    0.000 test_dataset_swmr.py:45(TestDatasetSwmrRead)
        1    0.000    0.000    0.000    0.000 relational.py:170(Unequality)
        1    0.000    0.000    0.000    0.000 utils.py:37(KnownFailureException)
        1    0.000    0.000    0.000    0.000 test_file.py:491(TestFilename)
        1    0.000    0.000    0.000    0.000 test_group.py:272(TestLen)
        2    0.000    0.000    0.000    0.000 six.py:173(__init__)
        1    0.000    0.000    0.000    0.000 decimal.py:272(Inexact)
        1    0.000    0.000    0.000    0.000 evalf.py:37(PrecisionExhausted)
        1    0.000    0.000    0.000    0.000 metaclass.py:51(AutoReloader)
        1    0.000    0.000    0.000    0.000 test_file.py:519(TestCloseInvalidatesOpenObjectIDs)
        1    0.000    0.000    0.000    0.000 utils.py:1580(WarningMessage)
        1    0.000    0.000    0.000    0.000 calendar.py:537(LocaleHTMLCalendar)
        1    0.000    0.000    0.000    0.000 numeric.py:2896(_unspecified)
        1    0.000    0.000    0.000    0.000 test_group.py:34(BaseGroup)
        2    0.000    0.000    0.000    0.000 identification.py:13(IdentificationMethods)
        1    0.000    0.000    0.000    0.000 test_slicing.py:247(TestZeroLengthSlicing)
        4    0.000    0.000    0.000    0.000 logic.py:104(__ne__)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:90(fmod)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 test_dataset.py:311(TestCreateCompressionNumber)
        1    0.000    0.000    0.000    0.000 codecs.py:340(__init__)
        1    0.000    0.000    0.000    0.000 doctest.py:249(_SpoofOut)
        1    0.000    0.000    0.000    0.000 test_dataset.py:511(TestAutoCreate)
        1    0.000    0.000    0.000    0.000 __init__.py:186(c_int)
        1    0.000    0.000    0.000    0.000 test_dimension_scales.py:109(TestDimensionManager)
        2    0.000    0.000    0.000    0.000 ctx_base.py:19(Context)
        1    0.000    0.000    0.000    0.000 logic.py:287(And)
        1    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 base.py:391(MutableMappingHDF5)
        1    0.000    0.000    0.000    0.000 test_group.py:364(TestIter)
        1    0.000    0.000    0.000    0.000 {method '__enter__' of 'thread.lock' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:252(c_void_p)
        1    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:135(IKFeasibilityError)
        1    0.000    0.000    0.000    0.000 pdb.py:18(Restart)
        1    0.000    0.000    0.000    0.000 __init__.py:2015(PathMetadata)
        1    0.000    0.000    0.000    0.000 numeric.py:55(ComplexWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:1010(Manager)
        1    0.000    0.000    0.000    0.000 suite.py:299(_DebugResult)
        1    0.000    0.000    0.000    0.000 polyerrors.py:37(HomomorphismFailed)
        1    0.000    0.000    0.000    0.000 __init__.py:397(UnknownExtra)
        1    0.000    0.000    0.000    0.000 test_group.py:43(TestRepr)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:540(SolverSequence)
        1    0.000    0.000    0.000    0.000 test_file.py:377(TestContextManager)
        1    0.000    0.000    0.000    0.000 arpack.py:315(_ArpackParams)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:31(StreamReader)
        1    0.000    0.000    0.000    0.000 utils.py:1841(IgnoreException)
        2    0.000    0.000    0.000    0.000 gmpyintegerring.py:21(__init__)
        1    0.000    0.000    0.000    0.000 core.py:130(MAError)
        1    0.000    0.000    0.000    0.000 integerring.py:9(IntegerRing)
        1    0.000    0.000    0.000    0.000 {method 'itervalues' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 multidimensional.py:57(vectorize)
        1    0.000    0.000    0.000    0.000 base.py:14(SparseFormatWarning)
        1    0.000    0.000    0.000    0.000 urlparse.py:121(SplitResult)
        1    0.000    0.000    0.000    0.000 urllib.py:114(ContentTooShortError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:92(MultivariatePolynomialError)
        2    0.000    0.000    0.000    0.000 six.py:86(_LazyDescr)
        1    0.000    0.000    0.000    0.000 runtests.py:47(sys_normcase)
        1    0.000    0.000    0.000    0.000 polyerrors.py:34(HeuristicGCDFailed)
        1    0.000    0.000    0.000    0.000 mpmathrealdomain.py:14(__init__)
        1    0.000    0.000    0.000    0.000 test_attrs.py:32(BaseAttrs)
        1    0.000    0.000    0.000    0.000 version.py:52(_BaseVersion)
        1    0.000    0.000    0.000    0.000 numbers.py:1312(RationalConstant)
        1    0.000    0.000    0.000    0.000 errors.py:87(UnknownFileError)
        2    0.000    0.000    0.000    0.000 ctx_mp_python.py:600(make_mpc)
        1    0.000    0.000    0.000    0.000 core.py:6114(__array_finalize__)
        1    0.000    0.000    0.000    0.000 __init__.py:51(PercentStyle)
        2    0.000    0.000    0.000    0.000 optimization.py:102(MNewton)
        1    0.000    0.000    0.000    0.000 decimal.py:5692(_Log10Memoize)
        1    0.000    0.000    0.000    0.000 decimal.py:195(InvalidOperation)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:791(UnShiftA)
        1    0.000    0.000    0.000    0.000 numeric.py:2900(errstate)
        1    0.000    0.000    0.000    0.000 __init__.py:1745(__init__)
        1    0.000    0.000    0.000    0.000 test_dataset.py:845(TestTrackTimes)
        1    0.000    0.000    0.000    0.000 errors.py:79(LibError)
        1    0.000    0.000    0.000    0.000 codeprinter.py:5(AssignmentError)
        3    0.000    0.000    0.000    0.000 six.py:189(__get_module)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:248(FIND_EDGES)
        1    0.000    0.000    0.000    0.000 info.py:50(<module>)
        1    0.000    0.000    0.000    0.000 polynomials.py:40(chebyshevt)
        1    0.000    0.000    0.000    0.000 integers.py:120(ceiling)
        1    0.000    0.000    0.000    0.000 errors.py:13(MessageParseError)
        8    0.000    0.000    0.000    0.000 matrices.py:986(<genexpr>)
        1    0.000    0.000    0.000    0.000 arrayprint.py:634(IntegerFormat)
        1    0.000    0.000    0.000    0.000 test_dataset.py:925(TestScalarCompound)
        1    0.000    0.000    0.000    0.000 __init__.py:1688(EggProvider)
        2    0.000    0.000    0.000    0.000 sympyintegerring.py:16(__init__)
        1    0.000    0.000    0.000    0.000 test_datatype.py:27(BaseType)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:237(EMBOSS)
        1    0.000    0.000    0.000    0.000 test_h5p.py:48(TestFA)
        1    0.000    0.000    0.000    0.000 polyerrors.py:58(NotReversible)
        1    0.000    0.000    0.000    0.000 polyerrors.py:73(GeneratorsNeeded)
        1    0.000    0.000    0.000    0.000 test_dims_dimensionproxy.py:21(TestItems)
        1    0.000    0.000    0.000    0.000 gamma_functions.py:400(loggamma)
        1    0.000    0.000    0.000    0.000 test_group.py:734(TestExtLinkBugs)
       10    0.000    0.000    0.000    0.000 {intern}
        1    0.000    0.000    0.000    0.000 matrices.py:56(DeferredVector)
        1    0.000    0.000    0.000    0.000 function.py:49(PoleError)
        1    0.000    0.000    0.000    0.000 polyoptions.py:464(Gaussian)
        1    0.000    0.000    0.000    0.000 relational.py:196(Inequality)
        1    0.000    0.000    0.000    0.000 sets.py:165(AskIrrationalHandler)
        1    0.000    0.000    0.000    0.000 core.py:826(__init__)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:779(ShiftB)
        3    0.000    0.000    0.000    0.000 utils.py:51(_set_function_name)
        2    0.000    0.000    0.000    0.000 optimization.py:512(ANewton)
        1    0.000    0.000    0.000    0.000 core.py:64(BasicType)
        1    0.000    0.000    0.000    0.000 boolalg.py:61(Or)
        1    0.000    0.000    0.000    0.000 polyerrors.py:3(BasePolynomialError)
        1    0.000    0.000    0.000    0.000 decimal.py:284(InvalidContext)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:193(CONTOUR)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 test_group.py:112(TestDtypeAssignment)
        1    0.000    0.000    0.000    0.000 test_attrs_data.py:59(TestArray)
        1    0.000    0.000    0.000    0.000 test_dataset.py:180(TestCreateChunked)
        1    0.000    0.000    0.000    0.000 case.py:25(SkipTest)
        1    0.000    0.000    0.000    0.000 test_attrs.py:98(TestUnicode)
        1    0.000    0.000    0.000    0.000 Shadow.py:245(ArrayType)
        1    0.000    0.000    0.000    0.000 errors.py:41(NoBoundaryInMultipartDefect)
        1    0.000    0.000    0.000    0.000 threading.py:1088(_set_daemon)
        1    0.000    0.000    0.000    0.000 test_selections.py:61(TestScalarSliceRules)
        1    0.000    0.000    0.000    0.000 gmpyrationalfield.py:21(__init__)
        1    0.000    0.000    0.000    0.000 function.py:558(AppliedUndef)
        1    0.000    0.000    0.000    0.000 arrayprint.py:684(LongComplexFormat)
        1    0.000    0.000    0.000    0.000 errors.py:83(LinkError)
        1    0.000    0.000    0.000    0.000 test_dataset_swmr.py:86(TestDatasetSwmrWrite)
        1    0.000    0.000    0.000    0.000 threading.py:515(_BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 test_dataset.py:397(TestCreateFletcher32)
        1    0.000    0.000    0.000    0.000 core.py:855(_DomainGreater)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:100(RemoveAbsFn)
        1    0.000    0.000    0.000    0.000 test_dataset.py:884(TestRegionRefs)
        1    0.000    0.000    0.000    0.000 __init__.py:291(c_wchar)
        1    0.000    0.000    0.000    0.000 pythonrationalfield.py:19(__init__)
        1    0.000    0.000    0.000    0.000 test_dataset.py:42(TestRepr)
        1    0.000    0.000    0.000    0.000 openravepy_ext.py:98(openrave_exception)
        1    0.000    0.000    0.000    0.000 Shadow.py:273(UnionType)
        1    0.000    0.000    0.000    0.000 bessel.py:209(hankel1)
        1    0.000    0.000    0.000    0.000 nonlin.py:619(GenericBroyden)
        1    0.000    0.000    0.000    0.000 openravepy_ext.py:52(TransformQuaternionsSaver)
        1    0.000    0.000    0.000    0.000 Image.py:1718(ImagePointHandler)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:180(BLUR)
        1    0.000    0.000    0.000    0.000 errors.py:76(CompileError)
        1    0.000    0.000    0.000    0.000 info.py:104(<module>)
        1    0.000    0.000    0.000    0.000 test_h5t.py:21(TestCompound)
        1    0.000    0.000    0.000    0.000 boolalg.py:35(BooleanFunction)
        1    0.000    0.000    0.000    0.000 boolalg.py:86(Not)
        1    0.000    0.000    0.000    0.000 simpledomain.py:5(SimpleDomain)
        1    0.000    0.000    0.000    0.000 extras.py:1398(mr_class)
        1    0.000    0.000    0.000    0.000 test_h5p.py:70(TestPL)
        1    0.000    0.000    0.000    0.000 test_dataset.py:33(BaseDataset)
        1    0.000    0.000    0.000    0.000 umfpack.py:233(Struct)
        1    0.000    0.000    0.000    0.000 calendar.py:502(LocaleTextCalendar)
        1    0.000    0.000    0.000    0.000 errors.py:55(DistutilsExecError)
        1    0.000    0.000    0.000    0.000 _globals.py:33(ModuleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 errors.py:13(DistutilsError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:40(IsomorphismFailed)
        2    0.000    0.000    0.000    0.000 optimization.py:453(Ridder)
        1    0.000    0.000    0.000    0.000 matrices.py:17(MatrixError)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:8(SolverBase)
        1    0.000    0.000    0.000    0.000 matrices.py:24(NonSquareMatrixError)
        1    0.000    0.000    0.000    0.000 core.py:2358(__init__)
        1    0.000    0.000    0.000    0.000 Shadow.py:341(_FusedType)
        1    0.000    0.000    0.000    0.000 test_group.py:603(TestVisit)
        1    0.000    0.000    0.000    0.000 core.py:6214(_extrema_operation)
        1    0.000    0.000    0.000    0.000 test_dataset.py:409(TestCreateScaleOffset)
        1    0.000    0.000    0.000    0.000 polyoptions.py:46(BooleanOption)
        2    0.000    0.000    0.000    0.000 six.py:380(Module_six_moves_urllib_request)
        1    0.000    0.000    0.000    0.000 {sys.exit}
        1    0.000    0.000    0.000    0.000 _globals.py:56(_NoValue)
        1    0.000    0.000    0.000    0.000 polyoptions.py:351(Greedy)
        1    0.000    0.000    0.000    0.000 test_h5p.py:19(TestLibver)
        1    0.000    0.000    0.000    0.000 errors.py:56(MultipartInvariantViolationDefect)
        3    0.000    0.000    0.000    0.000 __init__.py:408(register_loader_type)
        1    0.000    0.000    0.000    0.000 _endian.py:23(_swapped_meta)
        2    0.000    0.000    0.000    0.000 optimization.py:56(Secant)
        1    0.000    0.000    0.000    0.000 _import_tools.py:340(PackageLoaderDebug)
        1    0.000    0.000    0.000    0.000 polyerrors.py:52(CoercionFailed)
        1    0.000    0.000    0.000    0.000 openravepy_ext.py:128(runtime_error)
        2    0.000    0.000    0.000    0.000 six.py:229(_MovedItems)
        1    0.000    0.000    0.000    0.000 __init__.py:503(BufferingFormatter)
        1    0.000    0.000    0.000    0.000 errors.py:46(DistutilsSetupError)
        1    0.000    0.000    0.000    0.000 nonlin.py:381(TerminationCondition)
        1    0.000    0.000    0.000    0.000 Shadow.py:184(_nogil)
        1    0.000    0.000    0.000    0.000 polyoptions.py:538(Symmetric)
        1    0.000    0.000    0.000    0.000 test_group.py:255(BaseMapping)
        1    0.000    0.000    0.000    0.000 polyoptions.py:300(Sort)
        1    0.000    0.000    0.000    0.000 boolalg.py:118(Nor)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:24(Kernel)
        3    0.000    0.000    0.000    0.000 __init__.py:2056(register_finder)
        1    0.000    0.000    0.000    0.000 decimal.py:298(Rounded)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:339(SolverConditionedSolution)
        1    0.000    0.000    0.000    0.000 __init__.py:288(c_wchar_p)
        1    0.000    0.000    0.000    0.000 trigonometric.py:12(TrigonometricFunction)
        1    0.000    0.000    0.000    0.000 urllib.py:984(addclosehook)
        1    0.000    0.000    0.000    0.000 anneal.py:128(boltzmann_sa)
        1    0.000    0.000    0.000    0.000 __init__.py:1751(ZipManifests)
        1    0.000    0.000    0.000    0.000 __init__.py:190(c_uint)
        1    0.000    0.000    0.000    0.000 decimal.py:234(DivisionByZero)
        1    0.000    0.000    0.000    0.000 errors.py:59(DistutilsInternalError)
        1    0.000    0.000    0.000    0.000 calendar.py:28(IllegalWeekdayError)
        1    0.000    0.000    0.000    0.000 test_group.py:125(TestRequire)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:197(Mod1)
        1    0.000    0.000    0.000    0.000 arpack.py:968(IterOpInv)
        1    0.000    0.000    0.000    0.000 uu.py:39(Error)
        1    0.000    0.000    0.000    0.000 test_attribute_create.py:21(TestArray)
        1    0.000    0.000    0.000    0.000 boolalg.py:162(ITE)
        1    0.000    0.000    0.000    0.000 function.py:568(UndefinedFunction)
        1    0.000    0.000    0.000    0.000 polyerrors.py:61(NotAlgebraic)
        1    0.000    0.000    0.000    0.000 numbers.py:1324(IntegerConstant)
        1    0.000    0.000    0.000    0.000 core.py:89(ClassRegistry)
        2    0.000    0.000    0.000    0.000 calendar.py:52(__init__)
        1    0.000    0.000    0.000    0.000 doctest.py:499(DocTest)
        1    0.000    0.000    0.000    0.000 openravepy_ext.py:32(CollisionOptionsStateSaver)
        1    0.000    0.000    0.000    0.000 core.py:835(_DomainSafeDivide)
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 plistlib.py:291(_InternalDict)
        1    0.000    0.000    0.000    0.000 errors.py:20(DistutilsClassError)
        1    0.000    0.000    0.000    0.000 ikfast_generator_cpp.py:723(endChain)
        1    0.000    0.000    0.000    0.000 shutil.py:38(ExecError)
        1    0.000    0.000    0.000    0.000 errors.py:70(CCompilerError)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:308(SolverMatrixInverse)
        1    0.000    0.000    0.000    0.000 polyerrors.py:89(UnivariatePolynomialError)
        1    0.000    0.000    0.000    0.000 errors.py:47(FirstHeaderLineIsContinuationDefect)
        1    0.000    0.000    0.000    0.000 errors.py:53(MalformedHeaderDefect)
        5    0.000    0.000    0.000    0.000 {method 'find_module' of 'imp.NullImporter' objects}
        1    0.000    0.000    0.000    0.000 arpack.py:297(ArpackNoConvergence)
        2    0.000    0.000    0.000    0.000 six.py:62(__len__)
        1    0.000    0.000    0.000    0.000 test_file.py:407(TestFileProperty)
        1    0.000    0.000    0.000    0.000 ImageMode.py:22(ModeDescriptor)
        1    0.000    0.000    0.000    0.000 decimal.py:321(Overflow)
        1    0.000    0.000    0.000    0.000 base.py:13(SparseWarning)
        1    0.000    0.000    0.000    0.000 test_group.py:99(TestDatasetAssignment)
        1    0.000    0.000    0.000    0.000 test_file.py:507(TestBackwardsCompat)
        1    0.000    0.000    0.000    0.000 __init__.py:74(LazyImporter)
        1    0.000    0.000    0.000    0.000 __init__.py:18(NullHandler)
        4    0.000    0.000    0.000    0.000 libmpf.py:907(mpf_shift)
        1    0.000    0.000    0.000    0.000 polyoptions.py:642(All)
        1    0.000    0.000    0.000    0.000 polynomials.py:93(chebyshevt_root)
        1    0.000    0.000    0.000    0.000 runtests.py:865(SymPyDocTestRunner)
        1    0.000    0.000    0.000    0.000 factorials.py:7(CombinatorialFunction)
        1    0.000    0.000    0.000    0.000 integers.py:71(floor)
        2    0.000    0.000    0.000    0.000 six.py:360(Module_six_moves_urllib_error)
        1    0.000    0.000    0.000    0.000 polyoptions.py:242(Gens)
        1    0.000    0.000    0.000    0.000 polyerrors.py:76(ComputationFailed)
        1    0.000    0.000    0.000    0.000 ssl.py:331(Purpose)
        1    0.000    0.000    0.000    0.000 errors.py:26(DistutilsGetoptError)
        2    0.000    0.000    0.000    0.000 libhyper.py:43(NoConvergence)
        2    0.000    0.000    0.000    0.000 power.py:99(class_key)
        1    0.000    0.000    0.000    0.000 __init__.py:1134(__init__)
        2    0.000    0.000    0.000    0.000 six.py:320(Module_six_moves_urllib_parse)
        2    0.000    0.000    0.000    0.000 unixccompiler.py:251(library_option)
        1    0.000    0.000    0.000    0.000 interface.py:218(IdentityOperator)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:226(EDGE_ENHANCE_MORE)
        1    0.000    0.000    0.000    0.000 test_group.py:533(TestGet)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:15(DummyArray)
        2    0.000    0.000    0.000    0.000 exec_py2.py:1(<module>)
        1    0.000    0.000    0.000    0.000 test_dataset.py:858(TestZeroShape)
        1    0.000    0.000    0.000    0.000 specifiers.py:25(InvalidSpecifier)
        2    0.000    0.000    0.000    0.000 libmpf.py:132(h_mask_big)
        1    0.000    0.000    0.000    0.000 base.py:15(SparseEfficiencyWarning)
        1    0.000    0.000    0.000    0.000 anneal.py:142(_state)
        1    0.000    0.000    0.000    0.000 decimal.py:359(Underflow)
        2    0.000    0.000    0.000    0.000 pythonintegerring.py:40(from_ZZ_python)
        1    0.000    0.000    0.000    0.000 factorials.py:152(factorial2)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:283(SHARPEN)
        2    0.000    0.000    0.000    0.000 six.py:451(Module_six_moves_urllib_robotparser)
        1    0.000    0.000    0.000    0.000 _parseaddr.py:452(AddressList)
        1    0.000    0.000    0.000    0.000 tokenize.py:146(TokenError)
        1    0.000    0.000    0.000    0.000 exceptions.py:3(GeometryError)
        1    0.000    0.000    0.000    0.000 test_dataset.py:351(TestCreateLZF)
        1    0.000    0.000    0.000    0.000 test_group.py:421(TestPy3Dict)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:64(RankFilter)
        1    0.000    0.000    0.000    0.000 info.py:167(<module>)
        1    0.000    0.000    0.000    0.000 polyoptions.py:624(Polys)
        1    0.000    0.000    0.000    0.000 info.py:14(<module>)
        1    0.000    0.000    0.000    0.000 hyperexpand.py:767(ShiftA)
        1    0.000    0.000    0.000    0.000 ikfast_AST.py:478(SolverRotation)
        1    0.000    0.000    0.000    0.000 test_file.py:133(TestModes)
        2    0.000    0.000    0.000    0.000 sre_parse.py:139(__delitem__)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:106(MinFilter)
        1    0.000    0.000    0.000    0.000 polyoptions.py:548(Strict)
        1    0.000    0.000    0.000    0.000 errors.py:73(PreprocessError)
        1    0.000    0.000    0.000    0.000 polyerrors.py:64(DomainError)
        1    0.000    0.000    0.000    0.000 errors.py:16(DistutilsModuleError)
        2    0.000    0.000    0.000    0.000 ikfast_IKFastSolver.py:1071(checkSolvability)
        1    0.000    0.000    0.000    0.000 __init__.py:165(c_short)
        1    0.000    0.000    0.000    0.000 Shadow.py:97(_EmptyDecoratorAndManager)
        1    0.000    0.000    0.000    0.000 info.py:18(<module>)
        2    0.000    0.000    0.000    0.000 groundtypes.py:54(__init__)


   Ordered by: cumulative time

Function                                                                        called...
                                                                                    ncalls  tottime  cumtime
openrave.py:15(<module>)                                                        ->       1    0.000    0.000  __future__.py:48(<module>)
                                                                                         1    0.000    0.071  __init__.py:13(<module>)
                                                                                         1    0.001    0.032  __init__.py:106(<module>)
                                                                                         1    0.000  108.076  inversekinematics.py:1373(run)
                                                                                         8    0.000    0.000  optparse.py:1008(add_option)
                                                                                         1    0.000    0.000  optparse.py:1191(__init__)
                                                                                         1    0.000    0.000  optparse.py:1368(parse_args)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {getattr}
                                                                                         1    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'split' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'values' of 'dict' objects}
                                                                                         1    0.000    0.000  {sys.exit}
inversekinematics.py:1373(run)                                                  ->       2    0.000    0.000  inversekinematics.py:310(__del__)
                                                                                         1    0.004  108.076  inversekinematics.py:1295(RunFromParser)
inversekinematics.py:1295(RunFromParser)                                        ->       1    0.009   91.245  __init__.py:235(RunFromParser)
                                                                                         1    0.000    0.000  __init__.py:1157(info)
                                                                                         1    0.000    0.000  inversekinematics.py:258(__init__)
                                                                                         1    0.000    0.000  inversekinematics.py:344(load)
                                                                                         1   16.826   16.826  inversekinematics.py:1097(testik)
                                                                                         1    0.000    0.000  inversekinematics.py:1241(CreateOptionParser)
                                                                                         1    0.000    0.000  metaclass.py:20(__new__)
                                                                                         1    0.000    0.000  optparse.py:1368(parse_args)
__init__.py:235(RunFromParser)                                                  ->       1    0.046    0.131  __init__.py:171(InitializeFromParser)
                                                                                         1    0.002   91.105  inversekinematics.py:684(autogenerate)
inversekinematics.py:684(autogenerate)                                          ->       1    0.000    0.001  inversekinematics.py:334(save)
                                                                                         1    0.001   91.102  inversekinematics.py:764(generate)
                                                                                         1    0.000    0.000  iterables.py:435(numbered_symbols)
inversekinematics.py:764(generate)                                              ->       1    0.002    0.050  __init__.py:15(<module>)
                                                                                         1    0.000    0.000  __init__.py:1147(resource_filename)
                                                                                         4    0.000    0.000  __init__.py:1157(info)
                                                                                         1    0.000    0.061  ccompiler.py:510(compile)
                                                                                         1    0.000    0.034  ccompiler.py:682(link_shared_object)
                                                                                         1    0.000    0.000  genericpath.py:34(isfile)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:206(__init__)
                                                                                         1    0.000   12.672  ikfast_IKFastSolver.py:1128(writeIkSolver)
                                                                                         1    0.001   78.281  ikfast_IKFastSolver.py:1158(generateIkSolver)
                                                                                         1    0.000    0.001  inversekinematics.py:368(setrobot)
                                                                                         1    0.000    0.000  inversekinematics.py:416(getDefaultFreeIncrements)
                                                                                         1    0.000    0.001  inversekinematics.py:439(GetDefaultIndices)
                                                                                         1    0.000    0.000  inversekinematics.py:580(getfilename)
                                                                                         1    0.000    0.000  inversekinematics.py:622(getsourcefilename)
                                                                                         1    0.000    0.000  inversekinematics.py:640(getstatsfilename)
                                                                                         1    0.000    0.000  inversekinematics.py:1212(getcompiler)
                                                                                         1    0.000    0.000  os.py:136(makedirs)
                                                                                         1    0.000    0.000  platform.py:1281(system)
                                                                                         1    0.000    0.000  posixpath.py:61(join)
                                                                                         1    0.000    0.000  posixpath.py:82(split)
                                                                                         1    0.000    0.000  posixpath.py:97(splitext)
                                                                                         1    0.000    0.000  posixpath.py:424(relpath)
                                                                                         2    0.000    0.000  shutil.py:66(copyfile)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  twodim_base.py:192(eye)
                                                                                         2    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                         1    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'write' of 'file' objects}
                                                                                         1    0.000    0.000  {open}
                                                                                         1    0.000    0.000  {posix.getcwd}
                                                                                         2    0.000    0.000  {posix.remove}
                                                                                         2    0.000    0.000  {time.time}
ikfast_IKFastSolver.py:1158(generateIkSolver)                                   ->      15    0.000    0.001  __init__.py:1157(info)
                                                                                       180    0.000    0.001  basic.py:475(__str__)
                                                                                        16    0.000    0.000  cache.py:74(wrapper)
                                                                                        20    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                         1    0.000    0.004  ikfast_AST.py:613(leftmultiply)
                                                                                         7    0.000    0.008  ikfast_IKFastSolver.py:157(__init__)
                                                                                         2    0.000    0.000  ikfast_IKFastSolver.py:243(_CheckPreemptFn)
                                                                                         2    0.000    0.002  ikfast_IKFastSolver.py:388(affineInverse)
                                                                                         3    0.000    0.000  ikfast_IKFastSolver.py:400(multiplyMatrix)
                                                                                         1    0.001    0.050  ikfast_IKFastSolver.py:437(forwardKinematicsChain)
                                                                                         2    0.000    0.000  ikfast_IKFastSolver.py:618(has)
                                                                                         1    0.000    0.003  ikfast_IKFastSolver.py:625(gen_trigsubs)
                                                                                         1    0.000   78.199  inversekinematics.py:846(solveFullIK_6D)
                                                                                       246    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        12    0.000    0.000  matrices.py:276(__setitem__)
                                                                                         2    0.000    0.000  matrices.py:334(__len__)
                                                                                         3    0.000    0.002  matrices.py:1405(cross)
                                                                                         1    0.000    0.000  matrices.py:2626(eye)
                                                                                        34    0.000    0.000  symbol.py:35(__new__)
                                                                                        64    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        15    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                        30    0.000    0.000  {range}
inversekinematics.py:846(solveFullIK_6D)                                        ->       1    0.000   78.199  ikfast_IKFastSolver.py:2051(solveFullIK_6D)
ikfast_IKFastSolver.py:2051(solveFullIK_6D)                                     ->       1    0.000    0.000  __init__.py:1157(info)
                                                                                         1    0.000    0.000  ikfast_AST.py:1(<module>)
                                                                                         1    0.000    0.000  ikfast_AST.py:526(__init__)
                                                                                         1    0.000    0.000  ikfast_AST.py:599(__init__)
                                                                                        16    0.000    0.001  ikfast_IKFastSolver.py:250(convertRealToRational)
                                                                                        14    0.000    0.004  ikfast_IKFastSolver.py:388(affineInverse)
                                                                                         1    0.000    0.025  ikfast_IKFastSolver.py:400(multiplyMatrix)
                                                                                         7    0.000    0.000  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                         1    0.001    0.517  ikfast_IKFastSolver.py:1483(ComputeConsistentValues)
                                                                                         1    0.000   77.646  ikfast_IKFastSolver.py:2177(TestIntersectingAxes)
                                                                                        16    0.000    0.000  matrices.py:276(__setitem__)
                                                                                         1    0.000    0.001  matrices.py:400(subs)
                                                                                         3    0.000    0.005  matrices.py:407(__mul__)
                                                                                         1    0.000    0.000  matrices.py:2626(eye)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {len}
                                                                                         5    0.000    0.000  {range}
ikfast_IKFastSolver.py:2177(TestIntersectingAxes)                               ->       2    0.000    0.124  ikfast_IKFastSolver.py:2299(iterateThreeIntersectingAxes)
                                                                                         1    0.000   77.521  ikfast_IKFastSolver.py:2512(solve6DIntersectingAxes)
ikfast_IKFastSolver.py:2512(solve6DIntersectingAxes)                            ->       9    0.000    0.000  basic.py:179(__hash__)
                                                                                         1    0.000    0.000  ikfast_AST.py:483(__init__)
                                                                                         1    0.000    0.000  ikfast_AST.py:543(__init__)
                                                                                         3    0.000    0.000  ikfast_IKFastSolver.py:157(__init__)
                                                                                        10    0.000    0.002  ikfast_IKFastSolver.py:388(affineInverse)
                                                                                         2    0.000    0.011  ikfast_IKFastSolver.py:400(multiplyMatrix)
                                                                                         2    0.000    0.000  ikfast_IKFastSolver.py:1071(checkSolvability)
                                                                                         1    0.000    0.758  ikfast_IKFastSolver.py:3147(buildEquationsFromPositions)
                                                                                         1    0.000    0.084  ikfast_IKFastSolver.py:3199(buildEquationsFromRotation)
                                                                                         1    0.000    0.003  ikfast_IKFastSolver.py:6336(verifyAllEquations)
                                                                                         2    0.000   76.592  ikfast_IKFastSolver.py:6414(SolveAllEquations)
                                                                                        28    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        10    0.000    0.000  matrices.py:276(__setitem__)
                                                                                         1    0.000    0.071  matrices.py:400(subs)
                                                                                         1    0.000    0.000  matrices.py:460(__neg__)
                                                                                         1    0.000    0.000  matrices.py:2616(zeros)
                                                                                         1    0.000    0.000  matrices.py:2626(eye)
                                                                                         9    0.000    0.000  symbol.py:35(__new__)
                                                                                         3    0.000    0.000  {len}
                                                                                         9    0.000    0.000  {method 'add' of 'set' objects}
                                                                                         9    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        12    0.000    0.000  {range}
ikfast_IKFastSolver.py:6414(SolveAllEquations)                                  ->     104    0.000    0.020  __init__.py:1157(info)
                                                                                       908    0.000    0.001  basic.py:374(__eq__)
                                                                                       203    0.000    0.000  basic.py:399(__ne__)
                                                                                       496    0.001    0.315  basic.py:719(subs)
                                                                                      2344    0.006    0.140  cache.py:74(wrapper)
                                                                                        73    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                        32    0.000    0.000  expr.py:70(__neg__)
                                                                                        58    0.001    0.191  expr.py:1869(expand)
                                                                                         4    0.000    0.000  ikfast_AST.py:43(__init__)
                                                                                       404    0.000    0.000  ikfast_AST.py:83(numsolutions)
                                                                                         2    0.000    0.000  ikfast_AST.py:155(numsolutions)
                                                                                         2    0.000    0.000  ikfast_AST.py:460(__init__)
                                                                                        22    0.000    0.000  ikfast_IKFastSolver.py:118(__init__)
                                                                                       115    0.001    0.005  ikfast_IKFastSolver.py:157(__init__)
                                                                                       175    0.000    0.000  ikfast_IKFastSolver.py:243(_CheckPreemptFn)
                                                                                        12    0.000    0.000  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                        58    0.000    0.436  ikfast_IKFastSolver.py:635(trigsimp_new)
                                                                                        54    0.000    0.001  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                        80    0.000    0.015  ikfast_IKFastSolver.py:881(sortComplexity)
                                                                                       214    0.004   16.176  ikfast_IKFastSolver.py:978(ComputeSolutionComplexity)
                                                                                       779    0.003    0.378  ikfast_IKFastSolver.py:6298(CheckExpressionUnique)
                                                                                      80/2    0.031   76.411  ikfast_IKFastSolver.py:6805(AddSolution)
                                                                                        82    0.039   32.851  ikfast_IKFastSolver.py:8104(solveSingleVariable)
                                                                                         8    0.000    0.000  ikfast_IKFastSolver.py:8678(SolvePrismaticHingePairVariables)
                                                                                         4    0.004    4.693  ikfast_IKFastSolver.py:8735(SolvePairVariables)
                                                                                        98    0.000    0.000  iterables.py:435(numbered_symbols)
                                                                                        32    0.000    0.000  numbers.py:1091(__ne__)
                                                                                        32    0.000    0.138  simplify.py:705(trigsimp)
                                                                                        32    0.001    0.021  solvers.py:251(solve)
                                                                                        11    0.000    0.000  symbol.py:35(__new__)
                                                                                       162    0.000    0.000  {any}
                                                                                      2266    0.000    0.000  {len}
                                                                                       764    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        94    0.000    0.031  {method 'join' of 'str' objects}
                                                                                        40    0.000    0.000  {method 'sort' of 'list' objects}
                                                                                       102    0.001    0.001  {method 'union' of 'set' objects}
ikfast_IKFastSolver.py:6805(AddSolution)                                        ->      61    0.000    0.006  __init__.py:1145(debug)
                                                                                       174    0.000    0.020  __init__.py:1157(info)
                                                                                        13    0.000    0.002  __init__.py:1169(warning)
                                                                                      1019    0.000    0.000  basic.py:179(__hash__)
                                                                                      1641    0.001    0.003  basic.py:374(__eq__)
                                                                                      1077    0.001    0.002  basic.py:399(__ne__)
                                                                                        42    0.000    0.001  basic.py:471(__repr__)
                                                                                      4795    0.005    1.848  basic.py:719(subs)
                                                                                      7158    0.013    0.308  cache.py:74(wrapper)
                                                                                      1583    0.001    0.020  decorators.py:72(__sympifyit_wrapper)
                                                                                      3657    0.008    0.527  evalf.py:983(evalf)
                                                                                       138    0.000    0.001  expr.py:70(__neg__)
                                                                                        78    0.000    0.001  expr.py:176(is_number)
                                                                                       506    0.005    0.163  expr.py:1869(expand)
                                                                                        86    0.000    0.001  ikfast_AST.py:43(__init__)
                                                                                       167    0.001    0.494  ikfast_AST.py:60(subs)
                                                                                       210    0.000    0.000  ikfast_AST.py:83(numsolutions)
                                                                                       208    0.001    0.080  ikfast_AST.py:93(checkValidSolution)
                                                                                       107    0.000    0.000  ikfast_AST.py:112(GetZeroThreshold)
                                                                                         2    0.000    0.000  ikfast_AST.py:155(numsolutions)
                                                                                         2    0.000    0.026  ikfast_AST.py:161(subs)
                                                                                         2    0.000    0.002  ikfast_AST.py:189(checkValidSolution)
                                                                                         2    0.000    0.000  ikfast_AST.py:221(GetZeroThreshold)
                                                                                        25    0.000    0.000  ikfast_AST.py:373(__init__)
                                                                                       109    0.000    0.000  ikfast_AST.py:400(__init__)
                                                                                        51    0.000    0.000  ikfast_AST.py:569(__init__)
                                                                                      1712    0.009    0.056  ikfast_IKFastSolver.py:157(__init__)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:171(__init__)
                                                                                        55    0.000    0.000  ikfast_IKFastSolver.py:173(Clone)
                                                                                        71    0.000    0.000  ikfast_IKFastSolver.py:183(AddCases)
                                                                                        53    0.000    0.000  ikfast_IKFastSolver.py:194(GetHandledConditions)
                                                                                        93    0.000    0.000  ikfast_IKFastSolver.py:200(CheckCases)
                                                                                        80    0.000    0.000  ikfast_IKFastSolver.py:243(_CheckPreemptFn)
                                                                                       404    0.001    0.034  ikfast_IKFastSolver.py:261(ConvertRealToRationalEquation)
                                                                                       196    0.001    0.001  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                       271    0.001    4.431  ikfast_IKFastSolver.py:673(SimplifyAtan2)
                                                                                       643    0.001    0.010  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                      1194    0.004    0.077  ikfast_IKFastSolver.py:6298(CheckExpressionUnique)
                                                                                        94    0.021    5.062  ikfast_IKFastSolver.py:6349(PropagateSolvedConstants)
                                                                                     173/2    0.009   76.408  ikfast_IKFastSolver.py:6414(SolveAllEquations)
                                                                                       856    0.001    0.122  ikfast_IKFastSolver.py:6781(_SubstituteGlobalSymbols)
                                                                                      1903    0.005    0.021  ikfast_IKFastSolver.py:6794(_AddToGlobalSymbols)
                                                                                        84    0.003    7.308  ikfast_IKFastSolver.py:8104(solveSingleVariable)
                                                                                      3368    0.008    0.281  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                       114    0.000    0.000  ikfast_IKFastSolver.py:9191(_GetSumSquares)
                                                                                        80    0.000    0.135  ikfast_IKFastSolver.py:9340(AreAllImaginaryByEval)
                                                                                        74    0.000    0.000  iterables.py:435(numbered_symbols)
                                                                                       904    0.001    0.004  matrices.py:227(__getitem__)
                                                                                         8    0.000    0.000  miscellaneous.py:30(sqrt)
                                                                                        62    0.000    0.000  numbers.py:197(is_number)
                                                                                        50    0.000    0.000  numbers.py:396(__eq__)
                                                                                        12    0.000    0.000  numbers.py:1042(__sub__)
                                                                                        78    0.000    0.001  numbers.py:1056(__mul__)
                                                                                       627    0.000    0.001  numbers.py:1084(__eq__)
                                                                                       106    0.000    0.001  numbers.py:1091(__ne__)
                                                                                         2    0.000    0.000  numbers.py:1393(__neg__)
                                                                                       210    0.000    0.000  numbers.py:1508(__gt__)
                                                                                        19    0.000    0.000  numbers.py:1693(__eq__)
                                                                                       387    0.000    0.001  symbol.py:35(__new__)
                                                                                         8    0.000    0.003  {abs}
                                                                                        94    0.000    0.000  {all}
                                                                                        85    0.000    0.000  {any}
                                                                                      2021    0.000    0.000  {len}
                                                                                        96    0.000    0.000  {method 'add' of 'set' objects}
                                                                                      2564    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       182    0.000    0.083  {method 'join' of 'str' objects}
                                                                                        82    0.000    0.000  {method 'remove' of 'list' objects}
                                                                                        80    0.000    0.000  {method 'sort' of 'list' objects}
                                                                                        39    0.000    0.000  {method 'union' of 'set' objects}
                                                                                        94    0.000    0.000  {range}
cache.py:74(wrapper)                                                            ->   12019    0.015    0.021  add.py:191(as_coeff_add)
                                                                                      3183    0.005    0.011  add.py:238(as_two_terms)
                                                                                  10035648    1.256    1.509  basic.py:179(__hash__)
                                                                                    483140    0.323    0.589  basic.py:374(__eq__)
                                                                                 111681/96435    0.104   14.456  basic.py:756(_subs_old_new)
                                                                                     16456    0.018    1.839  basic.py:847(has)
                                                                                        17    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                        27    0.000    0.000  function.py:88(__new__)
                                                                                 10201/2774    0.042    7.274  function.py:159(__new__)
                                                                                       323    0.000    0.000  logic.py:11(fuzzy_bool)
                                                                                      1197    0.001    0.003  mul.py:477(as_two_terms)
                                                                                      7277    0.010    0.059  mul.py:505(as_coeff_mul)
                                                                                    116000    0.178    0.446  numbers.py:396(__eq__)
                                                                                    158371    0.072    0.200  numbers.py:448(__hash__)
                                                                                 3551/3478    0.008    0.021  numbers.py:523(__new__)
                                                                                     67425    0.096    0.244  numbers.py:751(__eq__)
                                                                                    679889    0.238    0.567  numbers.py:819(__hash__)
                                                                                   4515638    1.597    5.084  numbers.py:1126(__hash__)
                                                                                      8797    0.004    0.005  numbers.py:1760(__hash__)
                                                                                 146336/138395    0.428    9.191  operations.py:27(__new__)
                                                                                       437    0.000    0.007  polytools.py:219(__hash__)
                                                                                 10230/9791    0.013    0.116  power.py:74(__new__)
                                                                                      1997    0.002    0.004  symbol.py:56(__new_stage2__)
                                                                                        27    0.000    0.000  symbol.py:160(__xnew__)
                                                                                   6834361    3.976    5.963  {map}
                                                                                       323    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                       323    0.000    0.000  {method 'sort' of 'list' objects}
ikfast_IKFastSolver.py:8104(solveSingleVariable)                                ->     221    0.001    0.099  __init__.py:1145(debug)
                                                                                       157    0.000    0.013  __init__.py:1157(info)
                                                                                        77    0.000    0.001  add.py:517(__neg__)
                                                                                       951    0.000    0.000  basic.py:179(__hash__)
                                                                                      7080    0.004    0.008  basic.py:374(__eq__)
                                                                                       333    0.000    0.001  basic.py:399(__ne__)
                                                                                       629    0.002    0.239  basic.py:475(__str__)
                                                                                      4013    0.005    1.188  basic.py:719(subs)
                                                                                        53    0.000    0.040  basic.py:1085(match)
                                                                                      1278    0.004    1.121  cache.py:74(wrapper)
                                                                                      1986    0.002    0.156  decorators.py:72(__sympifyit_wrapper)
                                                                                       448    0.002    1.646  evalf.py:983(evalf)
                                                                                       109    0.000    0.002  expr.py:70(__neg__)
                                                                                       130    0.000    0.001  expr.py:176(is_number)
                                                                                      1157    0.012    1.809  expr.py:1869(expand)
                                                                                       307    0.001    0.031  ikfast_AST.py:43(__init__)
                                                                                         6    0.000    0.000  ikfast_IKFastSolver.py:118(__init__)
                                                                                       714    0.004    0.041  ikfast_IKFastSolver.py:157(__init__)
                                                                                       551    0.001    0.023  ikfast_IKFastSolver.py:407(equal)
                                                                                       314    0.000    0.000  ikfast_IKFastSolver.py:415(chop)
                                                                                       307    0.002    0.003  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                       141    0.000    0.003  ikfast_IKFastSolver.py:578(countVariables)
                                                                                       603    0.001    0.017  ikfast_IKFastSolver.py:618(has)
                                                                                       637    0.003    1.276  ikfast_IKFastSolver.py:635(trigsimp_new)
                                                                                      1987    0.002    0.024  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                       157    0.001   13.327  ikfast_IKFastSolver.py:889(checkForDivideByZero)
                                                                                       637    0.010    8.398  ikfast_IKFastSolver.py:5899(SimplifyTransform)
                                                                                        77    0.003    2.191  ikfast_IKFastSolver.py:7982(solveHighDegreeEquationsHalfAngle)
                                                                                       769    0.003    0.103  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                      1084    0.016    1.409  ikfast_IKFastSolver.py:9256(groupTerms)
                                                                                       566    0.000    0.000  iterables.py:435(numbered_symbols)
                                                                                        63    0.000    0.001  miscellaneous.py:30(sqrt)
                                                                                        34    0.000    0.000  numbers.py:197(is_number)
                                                                                       252    0.001    0.002  numbers.py:410(__ne__)
                                                                                        79    0.000    0.002  numbers.py:1028(__add__)
                                                                                        53    0.000    0.000  numbers.py:1042(__sub__)
                                                                                       217    0.000    0.000  numbers.py:1084(__eq__)
                                                                                        28    0.000    0.000  numbers.py:1091(__ne__)
                                                                                        41    0.000    0.000  numbers.py:1349(__neg__)
                                                                                        97    0.000    0.000  numbers.py:1393(__neg__)
                                                                                         4    0.000    0.000  numbers.py:1419(__neg__)
                                                                                      3756    0.007    2.345  polytools.py:80(__new__)
                                                                                       465    0.000    0.006  polytools.py:743(monoms)
                                                                                      1661    0.001    0.007  polytools.py:1642(degree_list)
                                                                                       608    0.001    0.044  polytools.py:1701(TC)
                                                                                      2538    0.001    0.125  relational.py:19(Eq)
                                                                                       320    0.001    0.005  simplify.py:23(fraction)
                                                                                        53    0.000    0.003  simplify.py:705(trigsimp)
                                                                                       314    0.003    0.916  simplify.py:1564(simplify)
                                                                                       275    0.005    3.851  solvers.py:251(solve)
                                                                                        27    0.000    0.000  symbol.py:96(is_number)
                                                                                       159    0.000    0.001  symbol.py:149(__new__)
                                                                                       231    0.000    0.000  {all}
                                                                                       749    0.000    0.000  {any}
                                                                                        10    0.000    0.000  {hasattr}
                                                                                      3761    0.000    0.000  {len}
                                                                                      1059    0.000    0.000  {max}
                                                                                      2132    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       494    0.000    0.000  {method 'has_key' of 'dict' objects}
                                                                                        40    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                        78    0.001    0.001  {method 'sort' of 'list' objects}
                                                                                       602    0.000    0.000  {sum}
polytools.py:80(__new__)                                                        ->   17363    0.020    0.500  polyoptions.py:689(build_options)
                                                                                         2    0.000    0.000  polytools.py:139(_from_dict)
                                                                                       108    0.001    0.251  polytools.py:178(_from_poly)
                                                                                     17253    0.018   38.426  polytools.py:205(_from_expr)
                                                                                     17361    0.026    0.026  sympify.py:23(sympify)
                                                                                     17363    0.010    0.010  {hasattr}
                                                                                         2    0.000    0.000  {isinstance}
polytools.py:205(_from_expr)                                                    ->   17045    0.055   21.819  polytools.py:139(_from_dict)
                                                                                     17525    0.057   16.820  polyutils.py:283(_dict_from_expr)
expr.py:1869(expand)                                                            ->   50831    0.272    2.774  add.py:427(_eval_expand_basic)
                                                                                 51892/49532    0.305    5.943  add.py:437(_eval_expand_power_exp)
                                                                                     51894    0.287    3.414  add.py:447(_eval_expand_power_base)
                                                                                 51622/44096    0.314   17.216  add.py:457(_eval_expand_mul)
                                                                                 50831/49090    0.281    5.364  add.py:467(_eval_expand_multinomial)
                                                                                     50831    0.307    3.168  add.py:477(_eval_expand_log)
                                                                                       250    0.001    0.036  add.py:497(_eval_expand_trig)
                                                                                   1445532    0.100    0.100  expr.py:1842(_eval_expand_basic)
                                                                                   1445533    0.086    0.086  expr.py:1845(_eval_expand_power_exp)
                                                                                   1454415    0.085    0.085  expr.py:1848(_eval_expand_power_base)
                                                                                   1448939    0.090    0.090  expr.py:1851(_eval_expand_mul)
                                                                                   1445532    0.089    0.089  expr.py:1854(_eval_expand_multinomial)
                                                                                   1445532    0.102    0.102  expr.py:1857(_eval_expand_log)
                                                                                      1594    0.000    0.000  expr.py:1863(_eval_expand_trig)
                                                                                     40579    0.082    0.170  function.py:407(_eval_expand_basic)
                                                                                 40450/40433    0.079    0.172  function.py:419(_eval_expand_power_exp)
                                                                                     40464    0.078    0.162  function.py:431(_eval_expand_power_base)
                                                                                 41515/41501    0.083    0.348  function.py:443(_eval_expand_mul)
                                                                                     40579    0.051    0.140  function.py:455(_eval_expand_multinomial)
                                                                                     40579    0.089    0.188  function.py:467(_eval_expand_log)
                                                                                     12452    0.048    0.204  mul.py:540(_eval_expand_basic)
                                                                                 11520/11517    0.043    0.465  mul.py:550(_eval_expand_power_exp)
                                                                                     11551    0.041    0.133  mul.py:560(_eval_expand_power_base)
                                                                                 12769/12763    0.064    3.339  mul.py:570(_eval_expand_mul)
                                                                                 12452/12440    0.046    0.701  mul.py:599(_eval_expand_multinomial)
                                                                                     12452    0.056    0.305  mul.py:609(_eval_expand_log)
                                                                                    101995    0.317    0.797  power.py:252(_eval_expand_basic)
                                                                                 101994/98319    0.227    3.207  power.py:262(_eval_expand_power_exp)
                                                                                    101994    0.196    1.284  power.py:279(_eval_expand_power_base)
                                                                                 102155/99323    0.322    1.225  power.py:334(_eval_expand_mul)
                                                                                 101995/98336    0.323    3.358  power.py:344(_eval_expand_multinomial)
                                                                                    101995    0.335    0.853  power.py:488(_eval_expand_log)
                                                                                   403/275    0.001    0.042  trigonometric.py:284(_eval_expand_trig)
                                                                                   410/282    0.001    0.041  trigonometric.py:506(_eval_expand_trig)
                                                                                   9925531    1.643    1.643  {getattr}
                                                                                   1665929    0.139    0.139  {method 'iteritems' of 'dict' objects}
                                                                                   1665929    0.270    0.270  {method 'update' of 'dict' objects}
ikfast_IKFastSolver.py:5899(SimplifyTransform)                                  ->    1124    0.000    0.000  basic.py:647(args)
                                                                                      8748    0.028    0.689  cache.py:74(wrapper)
                                                                                       310    0.001    0.035  ikfast_IKFastSolver.py:407(equal)
                                                                                      1048    0.048   29.664  ikfast_IKFastSolver.py:6030(_SimplifyRotationNorm)
                                                                                      1048    0.019    3.190  ikfast_IKFastSolver.py:6126(_SimplifyRotationDot)
                                                                                      1048    0.018    3.076  ikfast_IKFastSolver.py:6230(_SimplifyRotationCross)
                                                                                       310    0.001    0.164  ikfast_IKFastSolver.py:6781(_SubstituteGlobalSymbols)
                                                                                      5144    0.018    0.081  simplify.py:23(fraction)
                                                                                      1675    0.000    0.000  {isinstance}
                                                                                      8050    0.001    0.001  {method 'startswith' of 'str' objects}
ikfast_IKFastSolver.py:673(SimplifyAtan2)                                       ->     633    0.001    0.003  basic.py:399(__ne__)
                                                                                      6577    0.001    0.001  basic.py:647(args)
                                                                                      9321    0.005    0.131  decorators.py:72(__sympifyit_wrapper)
                                                                                      5186    0.011    0.060  evalf.py:983(evalf)
                                                                                 16102/3178    0.036    1.813  ikfast_IKFastSolver.py:673(SimplifyAtan2)
                                                                                       633    0.001    0.015  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                       539    0.018   26.614  ikfast_IKFastSolver.py:5899(SimplifyTransform)
                                                                                      7438    0.001    0.001  numbers.py:197(is_number)
                                                                                      2262    0.003    0.010  numbers.py:396(__eq__)
                                                                                      5090    0.012    0.128  numbers.py:436(__le__)
                                                                                       721    0.001    0.011  numbers.py:1028(__add__)
                                                                                      2264    0.003    0.076  numbers.py:1042(__sub__)
                                                                                       732    0.001    0.009  numbers.py:1056(__mul__)
                                                                                         6    0.000    0.000  numbers.py:1084(__eq__)
                                                                                        96    0.000    0.003  numbers.py:1119(__le__)
                                                                                      2274    0.000    0.000  power.py:91(base)
                                                                                      6802    0.001    0.001  power.py:95(exp)
                                                                                       572    0.010    4.844  simplify.py:1564(simplify)
                                                                                      6048    0.001    0.001  symbol.py:96(is_number)
                                                                                      5186    0.003    0.013  {abs}
ikfast_IKFastSolver.py:6030(_SimplifyRotationNorm)                              ->      28    0.000    0.539  __init__.py:1169(warning)
                                                                                       698    0.001    0.010  add.py:517(__neg__)
                                                                                      8472    0.004    0.076  decorators.py:72(__sympifyit_wrapper)
                                                                                       413    0.000    0.002  expr.py:70(__neg__)
                                                                                      2644    0.004    0.104  ikfast_IKFastSolver.py:407(equal)
                                                                                      7312    0.009    0.231  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                        44    0.000    0.000  numbers.py:647(__neg__)
                                                                                       144    0.000    0.002  numbers.py:1042(__sub__)
                                                                                       146    0.000    0.005  numbers.py:1056(__mul__)
                                                                                         3    0.000    0.000  numbers.py:1393(__neg__)
                                                                                         9    0.000    0.000  numbers.py:1419(__neg__)
                                                                                      7284    0.016   27.459  polytools.py:80(__new__)
                                                                                      7278    0.012    1.187  polytools.py:758(terms)
                                                                                      8325    0.001    0.001  {len}
                                                                                       620    0.000    0.000  {method 'add' of 'set' objects}
                                                                                      2094    0.001    0.001  {range}
ikfast_IKFastSolver.py:889(checkForDivideByZero)                                ->     228    0.001    0.286  __init__.py:1157(info)
                                                                                       228    0.000    0.001  basic.py:374(__eq__)
                                                                                      4741    0.001    0.001  basic.py:647(args)
                                                                                       612    0.002    0.003  core.py:220(__cmp__)
                                                                                       912    0.001    0.014  decorators.py:72(__sympifyit_wrapper)
                                                                                       228    0.001    0.109  evalf.py:983(evalf)
                                                                                       350    0.001    0.002  expr.py:176(is_number)
                                                                                       228    0.003    0.554  expr.py:1869(expand)
                                                                                       612    0.000    0.000  function.py:131(func)
                                                                                       732    0.006   27.533  ikfast_IKFastSolver.py:673(SimplifyAtan2)
                                                                                      2699    0.003    0.043  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                 11180/842    0.017   29.046  ikfast_IKFastSolver.py:889(checkForDivideByZero)
                                                                                      1029    0.001    0.011  ikfast_IKFastSolver.py:6298(CheckExpressionUnique)
                                                                                       504    0.001    0.095  ikfast_IKFastSolver.py:6781(_SubstituteGlobalSymbols)
                                                                                      1029    0.009    0.464  ikfast_IKFastSolver.py:9384(removecommonexprs)
                                                                                       604    0.000    0.000  numbers.py:197(is_number)
                                                                                        24    0.000    0.000  numbers.py:424(__lt__)
                                                                                        16    0.000    0.000  numbers.py:789(__lt__)
                                                                                       564    0.000    0.000  numbers.py:1105(__lt__)
                                                                                       178    0.000    0.000  power.py:91(base)
                                                                                      1208    0.000    0.000  power.py:95(exp)
                                                                                       106    0.000    0.000  symbol.py:96(is_number)
                                                                                       456    0.000    0.073  {abs}
                                                                                     11600    0.001    0.001  {len}
                                                                                      1905    0.000    0.000  {method 'append' of 'list' objects}
polytools.py:139(_from_dict)                                                    ->   16211    0.097   21.034  constructor.py:195(construct_domain)
                                                                                       842    0.002    0.056  domain.py:69(convert)
                                                                                     17051    0.015    0.603  polyclasses.py:251(from_dict)
                                                                                     34102    0.023    0.025  polyoptions.py:60(getter)
                                                                                     17051    0.023    0.045  polytools.py:100(new)
                                                                                     17051    0.001    0.001  {len}
                                                                                       840    0.000    0.000  {method 'iteritems' of 'dict' objects}
constructor.py:195(construct_domain)                                            ->   18377    0.042    0.110  constructor.py:9(_construct_simple)
                                                                                     14207    0.221   20.743  constructor.py:99(_construct_composite)
                                                                                     14207    0.012    0.014  polyoptions.py:60(getter)
                                                                                     18377    0.011    0.013  polyoptions.py:689(build_options)
                                                                                     36754    0.009    0.009  {hasattr}
                                                                                     36754    0.004    0.004  {isinstance}
                                                                                     18377    0.014    0.060  {map}
                                                                                     16213    0.003    0.003  {method 'items' of 'dict' objects}
                                                                                     32426    0.014    0.014  {zip}
constructor.py:99(_construct_composite)                                         ->   11849    0.112    1.700  add.py:260(as_numer_denom)
                                                                                     59479    0.036    0.696  decorators.py:72(__sympifyit_wrapper)
                                                                                     14163    0.042    0.200  domain.py:357(poly_ring)
                                                                                        44    0.000    0.001  domain.py:362(frac_field)
                                                                                        88    0.000    0.000  expr.py:1048(as_numer_denom)
                                                                                      4046    0.001    0.001  expr.py:2008(as_numer_denom)
                                                                                        52    0.000    4.774  fractionfield.py:38(__call__)
                                                                                      4798    0.013    0.057  mul.py:775(as_numer_denom)
                                                                                       409    0.000    0.001  numbers.py:907(as_numer_denom)
                                                                                      1646    0.000    0.000  numbers.py:1255(as_numer_denom)
                                                                                     22827    0.019    0.545  polynomialring.py:38(__call__)
                                                                                     14207    0.017    0.018  polyoptions.py:60(getter)
                                                                                     14207    0.020   12.214  polyutils.py:258(parallel_dict_from_expr)
                                                                                        43    0.000    0.001  power.py:616(as_numer_denom)
                                                                                     22058    0.007    0.007  pythonintegerring.py:27(from_sympy)
                                                                                     40485    0.022    0.169  pythonrationalfield.py:26(from_sympy)
                                                                                     14207    0.010    0.044  {any}
                                                                                     51289    0.004    0.004  {len}
                                                                                     59479    0.018    0.071  {method 'add' of 'set' objects}
                                                                                     68637    0.005    0.005  {method 'append' of 'list' objects}
                                                                                     45758    0.005    0.005  {method 'iteritems' of 'dict' objects}
                                                                                       104    0.001    0.003  {method 'update' of 'set' objects}
                                                                                       104    0.000    0.000  {method 'values' of 'dict' objects}
                                                                                     14251    0.006    0.006  {zip}
mul.py:570(_eval_expand_mul)                                                    ->    1502    0.001    0.001  basic.py:82(__new__)
                                                                                    327974    0.249    0.339  basic.py:399(__ne__)
                                                                                    182130    0.021    0.021  basic.py:647(args)
                                                                                     51007    0.073    0.942  cache.py:74(wrapper)
                                                                                 481792/402001    3.045   16.157  expr.py:1869(expand)
                                                                                     21717    0.016    0.037  function.py:224(is_commutative)
                                                                                      4826    0.025    0.984  mul.py:521(_expandsums)
                                                                                      4602    0.007    0.018  numbers.py:410(__ne__)
                                                                                     48088    0.080    0.213  numbers.py:770(__ne__)
                                                                                    101128    0.077    0.127  numbers.py:1091(__ne__)
                                                                                    481792    0.034    0.034  {method 'append' of 'list' objects}
add.py:457(_eval_expand_mul)                                                    ->   54611    0.008    0.008  basic.py:622(func)
                                                                                     54611    0.006    0.006  basic.py:647(args)
                                                                                     54611    0.091    0.333  cache.py:74(wrapper)
                                                                                     24840    0.002    0.002  expr.py:1851(_eval_expand_mul)
                                                                                      1819    0.004    0.156  function.py:443(_eval_expand_mul)
                                                                                 169104/143242    0.720   16.820  mul.py:570(_eval_expand_mul)
                                                                                      7666    0.024    0.121  power.py:334(_eval_expand_mul)
                                                                                    203429    0.023    0.023  {hasattr}
                                                                                    203429    0.013    0.013  {method 'append' of 'list' objects}
polyutils.py:283(_dict_from_expr)                                               ->   18154    0.189   15.036  expr.py:1869(expand)
                                                                                         4    0.000    0.000  function.py:224(is_commutative)
                                                                                     36640    0.037    0.039  polyoptions.py:60(getter)
                                                                                     17840    0.025    0.032  polyoptions.py:177(clone)
                                                                                     18151    0.021    1.666  polyutils.py:248(_dict_from_expr_if_gens)
                                                                                       169    0.000    0.011  polyutils.py:253(_dict_from_expr_no_gens)
inversekinematics.py:1097(testik)                                               ->       1    0.000    0.000  __init__.py:1157(info)
                                                                                         3    0.000    0.000  fromnumeric.py:127(reshape)
                                                                                         1    0.000    0.000  linalg.py:458(inv)
                                                                                         1    0.000    0.000  {built-in method now}
                                                                                         3    0.000    0.000  {len}
                                                                                         3    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'close' of 'file' objects}
                                                                                         1    0.000    0.000  {method 'isdigit' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'split' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'strftime' of 'datetime.date' objects}
                                                                                         2    0.000    0.000  {method 'write' of 'file' objects}
                                                                                         3    0.000    0.000  {numpy.core.multiarray.array}
                                                                                         1    0.000    0.000  {numpy.core.multiarray.dot}
                                                                                         1    0.000    0.000  {open}
                                                                                         1    0.000    0.000  {range}
ikfast_IKFastSolver.py:978(ComputeSolutionComplexity)                           ->     616    0.000    0.000  basic.py:647(args)
                                                                                       263    0.001    0.001  basic.py:719(subs)
                                                                                       326    0.000    0.005  basic.py:1013(find)
                                                                                       212    0.000    0.000  ikfast_AST.py:83(numsolutions)
                                                                                       212    0.000    0.000  ikfast_AST.py:106(getPresetCheckForZeros)
                                                                                         2    0.000    0.000  ikfast_AST.py:155(numsolutions)
                                                                                         2    0.000    0.018  ikfast_AST.py:200(getPresetCheckForZeros)
                                                                                       589    0.001    0.012  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                       263    0.001   15.884  ikfast_IKFastSolver.py:889(checkForDivideByZero)
                                                                                      1124    0.001    0.074  ikfast_IKFastSolver.py:1014(checkpow)
                                                                                       326    0.000    0.016  ikfast_IKFastSolver.py:6298(CheckExpressionUnique)
                                                                                       100    0.000    0.000  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                       326    0.003    0.161  ikfast_IKFastSolver.py:9384(removecommonexprs)
                                                                                       218    0.000    0.000  {hasattr}
                                                                                      1054    0.000    0.000  {len}
                                                                                       271    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       514    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                       538    0.000    0.000  {sum}
basic.py:719(subs)                                                              ->   23968    0.117    8.024  basic.py:769(_subs_list)
                                                                                      5474    0.010    0.121  basic.py:789(_subs_dict)
                                                                                 390636/312925    0.597   15.605  cache.py:74(wrapper)
                                                                                     23968    0.014    0.022  compatibility.py:11(iterable)
                                                                                     29442    0.006    0.006  {isinstance}
                                                                                    810714    0.038    0.038  {len}
basic.py:756(_subs_old_new)                                                     -> 47668/44278    0.218   10.771  add.py:334(_eval_subs)
                                                                                     17303    0.006    0.036  basic.py:1214(_eval_subs)
                                                                                 9040/8972    0.023    2.526  cse_opts.py:32(_eval_subs)
                                                                                      3074    0.007    0.465  function.py:135(_eval_subs)
                                                                                      1518    0.004    0.206  ikfast.py:279(Pow_eval_subs)
                                                                                 33035/32708    0.100    1.222  mul.py:952(_eval_subs)
                                                                                        43    0.000    0.038  polytools.py:477(_eval_subs)
                                                                                    223362    0.206    0.206  sympify.py:23(sympify)
polyutils.py:263(_parallel_dict_from_expr)                                      ->   50080    0.369   11.190  expr.py:1869(expand)
                                                                                     32736    0.048    0.052  polyoptions.py:60(getter)
                                                                                     16368    0.020    0.026  polyoptions.py:177(clone)
                                                                                     16368    0.445    1.813  polyutils.py:173(_parallel_dict_from_expr_no_gens)
                                                                                     16368    0.013    0.027  {any}
ikfast_IKFastSolver.py:1128(writeIkSolver)                                      ->       1    0.000    0.000  __init__.py:1157(info)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:243(_CheckPreemptFn)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:205(__init__)
                                                                                         1    0.000   12.672  ikfast_generator_cpp.py:229(generate)
                                                                                         1    0.000    0.000  iterables.py:435(numbered_symbols)
ikfast_generator_cpp.py:229(generate)                                           ->       1    0.000   12.672  ikfast_AST.py:607(generate)
                                                                                         1    0.000    0.000  ikfast_AST.py:610(end)
                                                                                         1    0.000    0.000  {built-in method now}
ikfast_AST.py:607(generate)                                                     ->       1    0.000   12.672  ikfast_generator_cpp.py:671(generateChain)
ikfast_generator_cpp.py:671(generateChain)                                      ->      12    0.000    0.001  evalf.py:983(evalf)
                                                                                         1    0.000    0.989  ikfast_generator_cpp.py:158(customcse)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:222(resetequations)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:604(getClassInit)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:654(GetIkFunctionPreamble)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:665(getFKFunctionPreamble)
                                                                                         1    0.000   11.422  ikfast_generator_cpp.py:1763(generateTree)
                                                                                         1    0.000    0.021  ikfast_generator_cpp.py:1771(WriteDictEquations)
                                                                                        98    0.000    0.070  ikfast_generator_cpp.py:1838(writeEquations)
                                                                                         1    0.000    0.000  iterables.py:435(numbered_symbols)
                                                                                        13    0.000    0.000  matrices.py:227(__getitem__)
                                                                                         1    0.000    0.000  matrices.py:334(__len__)
                                                                                         1    0.000    0.092  matrices.py:400(subs)
                                                                                        74    0.002    0.075  simplify.py:174(collect)
                                                                                         7    0.000    0.000  symbol.py:35(__new__)
                                                                                         3    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {method 'getvalue' of 'cStringIO.StringO' objects}
                                                                                         1    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                         1    0.000    0.000  {method 'join' of 'str' objects}
                                                                                        14    0.000    0.000  {range}
add.py:334(_eval_subs)                                                          ->    1656    0.000    0.000  basic.py:179(__hash__)
                                                                                    162438    0.081    0.265  basic.py:374(__eq__)
                                                                                     82536    0.009    0.009  basic.py:647(args)
                                                                                     24337    0.009    0.063  basic.py:1214(_eval_subs)
                                                                                    166644    0.219    1.151  cache.py:74(wrapper)
                                                                                     81021    0.019    0.019  expr.py:1012(as_coeff_add)
                                                                                 7350/7326    0.015    5.096  function.py:135(_eval_subs)
                                                                                      5982    0.015    0.104  ikfast.py:279(Pow_eval_subs)
                                                                                 192387/143640    0.658    6.702  mul.py:952(_eval_subs)
                                                                                      2824    0.002    0.007  numbers.py:396(__eq__)
                                                                                        87    0.000    0.000  numbers.py:448(__hash__)
                                                                                        19    0.000    0.000  numbers.py:1349(__neg__)
                                                                                     82555    0.014    0.014  {isinstance}
                                                                                      3068    0.000    0.000  {len}
polyutils.py:258(parallel_dict_from_expr)                                       ->   14207    0.005    0.005  polyoptions.py:60(getter)
                                                                                     14207    0.015    0.157  polyoptions.py:689(build_options)
                                                                                     14207    0.085   12.032  polyutils.py:263(_parallel_dict_from_expr)
ikfast_generator_cpp.py:1763(generateTree)                                      ->     128    0.000    9.283  ikfast_AST.py:76(generate)
                                                                                       128    0.000    0.000  ikfast_AST.py:80(end)
                                                                                         3    0.000    0.039  ikfast_AST.py:183(generate)
                                                                                         3    0.000    0.000  ikfast_AST.py:186(end)
                                                                                      30/3    0.000    8.876  ikfast_AST.py:375(generate)
                                                                                        30    0.000    0.000  ikfast_AST.py:377(end)
                                                                                      73/1    0.000   11.413  ikfast_AST.py:412(generate)
                                                                                        73    0.000    0.000  ikfast_AST.py:415(end)
                                                                                        82    0.000    2.358  ikfast_AST.py:488(generate)
                                                                                        82    0.000    0.000  ikfast_AST.py:491(end)
                                                                                        42    0.000    0.014  ikfast_AST.py:534(generate)
                                                                                        42    0.000    0.000  ikfast_AST.py:537(end)
                                                                                        80    0.000    2.359  ikfast_AST.py:546(generate)
                                                                                        80    0.000    0.000  ikfast_AST.py:549(end)
                                                                                        25    0.000    0.000  ikfast_AST.py:582(generate)
                                                                                        25    0.000    0.000  ikfast_AST.py:585(end)
ikfast_AST.py:412(generate)                                                     ->   123/1    0.002   11.413  ikfast_generator_cpp.py:1617(generateCheckZeros)
ikfast_generator_cpp.py:1617(generateCheckZeros)                                ->     369    0.000    0.001  ikfast_generator_cpp.py:224(copyequations)
                                                                                     246/2    0.001   11.412  ikfast_generator_cpp.py:1763(generateTree)
                                                                                       123    0.001    0.097  ikfast_generator_cpp.py:1771(WriteDictEquations)
                                                                                       123    0.001    1.087  ikfast_generator_cpp.py:1843(WriteEquations2)
                                                                                       123    0.000    0.000  {cStringIO.StringIO}
                                                                                       369    0.000    0.000  {len}
                                                                                       123    0.001    0.001  {method 'getvalue' of 'cStringIO.StringO' objects}
                                                                                      1493    0.001    0.001  {method 'write' of 'cStringIO.StringO' objects}
                                                                                       123    0.000    0.000  {range}
ikfast_generator_cpp.py:1843(WriteEquations2)                                   ->    1987    0.005    0.314  expr.py:450(count_ops)
                                                                                       651    0.015   10.921  ikfast_generator_cpp.py:1885(_WriteEquations)
                                                                                       753    0.000    0.000  {hasattr}
                                                                                      3289    0.000    0.000  {len}
                                                                                      1987    0.000    0.000  {method 'append' of 'list' objects}
ikfast_generator_cpp.py:1885(_WriteEquations)                                   ->     188    0.000    0.000  basic.py:374(__eq__)
                                                                                      1570    0.003    0.012  basic.py:475(__str__)
                                                                                      1561    0.002    0.668  basic.py:719(subs)
                                                                                       188    0.000    0.009  decorators.py:72(__sympifyit_wrapper)
                                                                                      1561    0.004    0.093  expr.py:450(count_ops)
                                                                                      1561    0.017    0.294  expr.py:1869(expand)
                                                                                       651    0.009    9.462  ikfast_generator_cpp.py:158(customcse)
                                                                                        74    0.000    0.001  ikfast_generator_cpp.py:688(<lambda>)
                                                                                        12    0.000    0.000  ikfast_generator_cpp.py:690(<lambda>)
                                                                                         9    0.000    0.000  ikfast_generator_cpp.py:706(<lambda>)
                                                                                         3    0.000    0.000  ikfast_generator_cpp.py:707(<lambda>)
                                                                                         2    0.000    0.000  ikfast_generator_cpp.py:1153(<lambda>)
                                                                                         2    0.000    0.000  ikfast_generator_cpp.py:1154(<lambda>)
                                                                                       600    0.000    0.000  ikfast_generator_cpp.py:1169(<lambda>)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:1184(<lambda>)
                                                                                       889    0.002    0.002  ikfast_generator_cpp.py:1244(<lambda>)
                                                                                        11    0.000    0.000  ikfast_generator_cpp.py:1352(<lambda>)
                                                                                         3    0.000    0.000  ikfast_generator_cpp.py:1359(<lambda>)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:1393(<lambda>)
                                                                                       178    0.000    0.000  ikfast_generator_cpp.py:1594(<lambda>)
                                                                                       193    0.000    0.000  ikfast_generator_cpp.py:1627(<lambda>)
                                                                                         9    0.000    0.000  ikfast_generator_cpp.py:1693(<lambda>)
                                                                                      3548    0.026    0.362  ikfast_generator_cpp.py:1924(_WriteExprCode)
                                                                                       651    0.000    0.000  {len}
                                                                                      3122    0.000    0.000  {method 'append' of 'list' objects}
                                                                                      3548    0.001    0.001  {method 'getvalue' of 'cStringIO.StringO' objects}
                                                                                     10869    0.002    0.002  {method 'write' of 'cStringIO.StringO' objects}
                                                                                        47    0.000    0.000  {range}
simplify.py:1564(simplify)                                                      ->     892    0.008    0.106  add.py:260(as_numer_denom)
                                                                                       387    0.001    0.026  add.py:517(__neg__)
                                                                                       172    0.000    0.001  basic.py:399(__ne__)
                                                                                       125    0.000    0.197  basic.py:1085(match)
                                                                                      4305    0.007    0.094  cache.py:74(wrapper)
                                                                                       910    0.001    0.039  decorators.py:72(__sympifyit_wrapper)
                                                                                       320    0.000    0.003  expr.py:70(__neg__)
                                                                                      1435    0.006    2.722  expr.py:1247(could_extract_minus_sign)
                                                                                      1435    0.016    0.973  expr.py:1869(expand)
                                                                                      2870    0.091    0.470  function.py:1368(count_ops)
                                                                                      1072    0.004    0.083  mul.py:775(as_numer_denom)
                                                                                       140    0.000    0.000  numbers.py:1015(__neg__)
                                                                                       363    0.000    0.000  numbers.py:1091(__ne__)
                                                                                       223    0.000    0.000  numbers.py:1393(__neg__)
                                                                                      1435    0.012    3.759  polytools.py:5187(cancel)
                                                                                         6    0.000    0.000  power.py:616(as_numer_denom)
                                                                                      1435    0.002    0.653  rationaltools.py:6(together)
                                                                                      2870    0.032    1.572  simplify.py:1128(powsimp)
                                                                                      2028    0.003    0.003  sympify.py:23(sympify)
                                                                                      6926    0.001    0.001  {isinstance}
                                                                                       125    0.000    0.001  {map}
ikfast_generator_cpp.py:158(customcse)                                          ->      95    0.000    0.006  basic.py:719(subs)
                                                                                       760    0.074    8.653  cse_main.py:71(cse)
                                                                                         3    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                      2680    0.006    0.443  expr.py:450(count_ops)
                                                                                      2680    0.011    1.412  ikfast_generator_cpp.py:108(evalNumbers)
                                                                                        13    0.000    0.000  matrices.py:227(__getitem__)
                                                                                       106    0.000    0.000  numbers.py:197(is_number)
                                                                                         3    0.000    0.000  numbers.py:1056(__mul__)
                                                                                       201    0.000    0.000  power.py:91(base)
                                                                                       112    0.000    0.000  power.py:95(exp)
                                                                                       760    0.000    0.000  {all}
                                                                                       761    0.000    0.000  {hasattr}
                                                                                      3440    0.000    0.000  {len}
                                                                                      7006    0.001    0.001  {method 'append' of 'list' objects}
                                                                                      2680    0.001    0.001  {range}
ikfast_AST.py:76(generate)                                                      ->     168    0.001    0.078  ikfast_AST.py:93(checkValidSolution)
                                                                                       168    0.007    9.847  ikfast_generator_cpp.py:1119(generateSolution)
ikfast_generator_cpp.py:1119(generateSolution)                                  ->     168    0.000    0.016  __init__.py:1157(info)
                                                                                         4    0.000    0.000  basic.py:179(__hash__)
                                                                                         2    0.000    0.001  basic.py:1085(match)
                                                                                       402    0.000    0.007  cache.py:74(wrapper)
                                                                                         4    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                       812    0.000    0.000  ikfast_AST.py:109(getEquationsUsed)
                                                                                       168    0.000    0.000  ikfast_generator_cpp.py:1771(WriteDictEquations)
                                                                                       330    0.003    9.813  ikfast_generator_cpp.py:1843(WriteEquations2)
                                                                                       408    0.000    0.001  symbol.py:35(__new__)
                                                                                         4    0.000    0.000  symbol.py:149(__new__)
                                                                                       336    0.000    0.000  {cStringIO.StringIO}
                                                                                       657    0.000    0.000  {len}
                                                                                      1202    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       334    0.000    0.000  {method 'getvalue' of 'cStringIO.StringO' objects}
                                                                                      4823    0.001    0.001  {method 'write' of 'cStringIO.StringO' objects}
                                                                                       326    0.000    0.000  {range}
operations.py:27(__new__)                                                       ->   42049    0.404    1.729  add.py:17(flatten)
                                                                                    130873    0.097    0.123  basic.py:82(__new__)
                                                                                 96634/92660    1.663    6.462  mul.py:28(flatten)
                                                                                      4388    0.006    0.009  operations.py:149(flatten)
                                                                                        79    0.000    0.000  {all}
                                                                                    578812    0.035    0.035  {len}
                                                                                    146334    0.114    0.633  {map}
                                                                                    143150    0.014    0.014  {method 'pop' of 'dict' objects}
ikfast_AST.py:375(generate)                                                     ->    30/3    0.002    8.876  ikfast_generator_cpp.py:1566(generateBranchConds)
ikfast_generator_cpp.py:1566(generateBranchConds)                               ->      40    0.000    0.643  ikfast_AST.py:76(generate)
                                                                                        40    0.000    0.000  ikfast_AST.py:80(end)
                                                                                      50/8    0.000    8.868  ikfast_AST.py:412(generate)
                                                                                        50    0.000    0.000  ikfast_AST.py:415(end)
                                                                                         2    0.000    0.005  ikfast_AST.py:464(generate)
                                                                                         2    0.000    0.000  ikfast_AST.py:467(end)
                                                                                        38    0.000    0.013  ikfast_AST.py:534(generate)
                                                                                        38    0.000    0.000  ikfast_AST.py:537(end)
                                                                                         2    0.000    0.000  ikfast_AST.py:546(generate)
                                                                                         2    0.000    0.000  ikfast_AST.py:549(end)
                                                                                        30    0.000    0.000  ikfast_AST.py:582(generate)
                                                                                        30    0.000    0.000  ikfast_AST.py:585(end)
                                                                                       152    0.000    0.001  ikfast_generator_cpp.py:224(copyequations)
                                                                                       122    0.000    0.005  ikfast_generator_cpp.py:1771(WriteDictEquations)
                                                                                        92    0.000    0.090  ikfast_generator_cpp.py:1843(WriteEquations2)
                                                                                        30    0.000    0.000  {cStringIO.StringIO}
                                                                                       219    0.000    0.000  {len}
                                                                                        30    0.000    0.000  {method 'getvalue' of 'cStringIO.StringO' objects}
                                                                                      1746    0.000    0.000  {method 'write' of 'cStringIO.StringO' objects}
                                                                                        92    0.000    0.000  {range}
cse_main.py:71(cse)                                                             ->   18686    0.002    0.003  basic.py:179(__hash__)
                                                                                         9    0.000    0.000  basic.py:374(__eq__)
                                                                                      1692    0.000    0.000  basic.py:647(args)
                                                                                     17298    0.019    4.056  basic.py:719(subs)
                                                                                      1117    0.002    0.014  cache.py:74(wrapper)
                                                                                      2680    0.002    1.049  cse_main.py:25(preprocess_for_cse)
                                                                                      4326    0.003    3.201  cse_main.py:46(postprocess_for_cse)
                                                                                      2829    0.007    0.154  cse_main.py:119(insert)
                                                                                       760    0.001    0.004  difflib.py:152(__init__)
                                                                                       185    0.000    0.000  difflib.py:233(set_seq1)
                                                                                        13    0.000    0.000  difflib.py:259(set_seq2)
                                                                                        13    0.000    0.000  difflib.py:348(find_longest_match)
                                                                                      4364    0.008    0.015  expr.py:455(args_cnc)
                                                                                      2680    0.001    0.001  iterables.py:166(__init__)
                                                                                      1712    0.000    0.000  iterables.py:184(skip)
                                                                                     26179    0.006    0.035  iterables.py:204(next)
                                                                                      2680    0.000    0.000  iterables.py:207(__iter__)
                                                                                      1646    0.003    0.013  iterables.py:435(numbered_symbols)
                                                                                       446    0.000    0.000  numbers.py:448(__hash__)
                                                                                       760    0.000    0.000  {isinstance}
                                                                                       760    0.000    0.000  {iter}
                                                                                     58054    0.002    0.002  {len}
                                                                                     15021    0.004    0.005  {method 'add' of 'set' objects}
                                                                                      1646    0.000    0.000  {method 'append' of 'list' objects}
                                                                                     14437    0.002    0.009  {method 'difference' of 'set' objects}
                                                                                     47685    0.005    0.014  {method 'intersection' of 'set' objects}
                                                                                      1646    0.001    0.001  {range}
decorators.py:72(__sympifyit_wrapper)                                           -> 460095/455433    0.277    6.575  decorators.py:106(binary_op_wrapper)
                                                                                       318    0.001    0.040  expr.py:136(__lt__)
                                                                                 27337/26541    0.038    0.242  numbers.py:340(__mul__)
                                                                                 5523/5396    0.009    0.044  numbers.py:361(__add__)
                                                                                 81954/77755    0.090    1.016  numbers.py:650(__mul__)
                                                                                 18927/18847    0.026    0.130  numbers.py:678(__add__)
                                                                                        54    0.000    0.119  polytools.py:3312(__add__)
                                                                                       855    0.003    0.128  polytools.py:3432(__eq__)
                                                                                    595084    0.684    0.736  sympify.py:23(sympify)
basic.py:769(_subs_list)                                                        -> 292667/292571    0.180    7.973  basic.py:719(subs)
                                                                                    292667    0.026    0.026  {hasattr}
mul.py:952(_eval_subs)                                                          ->   22457    0.002    0.002  basic.py:179(__hash__)
                                                                                    236398    0.135    0.404  basic.py:374(__eq__)
                                                                                     72586    0.006    0.006  basic.py:647(args)
                                                                                      3500    0.004    0.033  basic.py:719(subs)
                                                                                      8334    0.017    0.207  cache.py:74(wrapper)
                                                                                      2778    0.002    0.182  decorators.py:72(__sympifyit_wrapper)
                                                                                        52    0.000    0.000  expr.py:1062(extract_multiplicatively)
                                                                                 232983/173446    0.389    5.934  mul.py:961(fallback)
                                                                                     72476    0.228    0.585  mul.py:967(breakup)
                                                                                      9134    0.010    0.067  mul.py:991(rejoin)
                                                                                      5617    0.008    0.073  mul.py:1001(ndiv)
                                                                                     63453    0.006    0.006  mul.py:1046(<genexpr>)
                                                                                      4266    0.006    0.014  numbers.py:396(__eq__)
                                                                                      7174    0.002    0.006  numbers.py:448(__hash__)
                                                                                         8    0.000    0.000  numbers.py:819(__hash__)
                                                                                      5617    0.004    0.007  numbers.py:1042(__sub__)
                                                                                      5617    0.004    0.006  numbers.py:1056(__mul__)
                                                                                        82    0.000    0.000  numbers.py:1126(__hash__)
                                                                                      2778    0.002    0.058  {any}
                                                                                     36238    0.013    0.013  {getattr}
                                                                                    147730    0.008    0.008  {len}
                                                                                     14734    0.001    0.001  {method 'append' of 'list' objects}
                                                                                     63252    0.010    0.021  {method 'difference' of 'set' objects}
                                                                                      2778    0.001    0.001  {method 'items' of 'dict' objects}
                                                                                       104    0.000    0.000  {method 'pop' of 'dict' objects}
                                                                                      2778    0.001    0.001  {min}
                                                                                      2778    0.001    0.001  {range}
{map}                                                                           ->      32    0.000    0.000  basic.py:475(__str__)
                                                                                  21327200    1.987    1.987  cache.py:96(<lambda>)
                                                                                      4036    0.012    0.042  exprtools.py:220(__init__)
                                                                                     15103    0.003    0.018  matrices.py:104(<lambda>)
                                                                                       512    0.000    0.001  matrices.py:141(<lambda>)
                                                                                       384    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        96    0.000    0.000  matrices.py:334(__len__)
                                                                                      1375    0.001    0.016  matrices.py:389(<lambda>)
                                                                                        44    0.000    0.163  matrices.py:401(<lambda>)
                                                                                        18    0.000    0.000  matrices.py:410(<lambda>)
                                                                                       128    0.000    0.001  matrices.py:1036(<lambda>)
                                                                                      8829    0.003    0.102  matrices.py:2585(<lambda>)
                                                                                       643    0.000    0.003  matrices.py:2613(<lambda>)
                                                                                 4036/3660    0.008    0.088  rationaltools.py:57(_together)
                                                                                         4    0.000    0.005  re.py:192(compile)
                                                                                         4    0.000    0.019  simplify.py:1564(simplify)
                                                                                       486    0.000    0.000  sre_compile.py:101(fixup)
                                                                                 19196/15981    0.010    0.382  str.py:231(<lambda>)
                                                                                      4183    0.002    0.029  str.py:232(<lambda>)
                                                                                         3    0.000    0.000  string.py:394(atoi)
                                                                                       555    0.000    0.001  symbol.py:149(__new__)
                                                                                    105037    0.117    0.119  sympify.py:23(sympify)
                                                                                    427921    0.106    0.520  sympify.py:161(_sympify)
function.py:159(__new__)                                                        ->    7787    0.008    0.010  basic.py:82(__new__)
                                                                                      2163    0.009    1.245  complexes.py:39(eval)
                                                                                      2163    0.007    0.503  complexes.py:111(eval)
                                                                                   700/687    0.002    0.522  complexes.py:166(eval)
                                                                                 2067/1968    0.008    3.695  complexes.py:246(eval)
                                                                                  2046/411    0.001    0.105  complexes.py:334(eval)
                                                                                         4    0.000    0.001  evalf.py:983(evalf)
                                                                                         4    0.000    0.000  exponential.py:297(eval)
                                                                                       100    0.000    0.000  function.py:103(eval)
                                                                                         4    0.000    0.000  libmpf.py:59(prec_to_dps)
                                                                                        47    0.000    0.012  trigonometric.py:151(eval)
                                                                                        47    0.000    0.012  trigonometric.py:368(eval)
                                                                                        55    0.000    0.018  trigonometric.py:584(eval)
                                                                                         3    0.000    0.000  trigonometric.py:762(eval)
                                                                                     74/64    0.000    0.233  trigonometric.py:947(eval)
                                                                                         4    0.000    0.000  trigonometric.py:1065(eval)
                                                                                         5    0.000    0.003  trigonometric.py:1173(eval)
                                                                                       723    0.004    4.092  trigonometric.py:1362(eval)
                                                                                     20402    0.004    0.004  {isinstance}
                                                                                     10201    0.001    0.001  {len}
                                                                                     10201    0.005    0.021  {map}
                                                                                 7787/3873    0.004    2.002  {max}
                                                                                     10201    0.001    0.001  {method 'pop' of 'dict' objects}
                                                                                      7787    0.003    0.165  {min}
power.py:344(_eval_expand_multinomial)                                          ->     678    0.000    0.000  basic.py:647(args)
                                                                                    216516    0.206    0.689  cache.py:74(wrapper)
                                                                                       678    0.001    0.005  expr.py:176(is_number)
                                                                                 433002/410070    2.563    5.273  expr.py:1869(expand)
                                                                                       678    0.020    0.029  multinomial.py:22(multinomial_coefficients)
                                                                                        15    0.000    0.000  numbers.py:989(__new__)
                                                                                       678    0.000    0.000  numbers.py:1012(__int__)
                                                                                        15    0.000    0.000  numbers.py:1373(__nonzero__)
                                                                                       678    0.018    0.232  polyutils.py:298(expr_from_dict)
                                                                                    433002    0.065    0.065  power.py:91(base)
                                                                                    433002    0.054    0.054  power.py:95(exp)
                                                                                      2622    0.000    0.000  {abs}
                                                                                       678    0.000    0.000  {len}
                                                                                      2155    0.000    0.000  {method 'append' of 'list' objects}
function.py:135(_eval_subs)                                                     ->   77103    0.041    0.116  basic.py:374(__eq__)
                                                                                     70916    0.007    0.007  basic.py:647(args)
                                                                                 73494/72818    0.052    1.649  basic.py:719(subs)
                                                                                 70916/70652    0.053    5.063  cache.py:74(wrapper)
                                                                                     70916    0.010    0.010  function.py:131(func)
power.py:262(_eval_expand_power_exp)                                            ->  217368    0.207    0.686  cache.py:74(wrapper)
                                                                                 434736/404882    2.536    5.448  expr.py:1869(expand)
                                                                                    217368    0.033    0.033  power.py:91(base)
                                                                                    217368    0.031    0.031  power.py:95(exp)
decorators.py:106(binary_op_wrapper)                                            ->   52926    0.027    0.409  expr.py:75(__add__)
                                                                                      7499    0.004    0.052  expr.py:79(__radd__)
                                                                                     31868    0.031    0.843  expr.py:84(__sub__)
                                                                                      3084    0.002    0.022  expr.py:88(__rsub__)
                                                                                 85243/84457    0.052    1.531  expr.py:93(__mul__)
                                                                                       707    0.000    0.023  expr.py:97(__rmul__)
                                                                                 26294/26168    0.014    0.131  expr.py:102(__pow__)
                                                                                        23    0.000    0.000  expr.py:106(__rpow__)
                                                                                 245905/245903    0.212    3.288  expr.py:111(__div__)
                                                                                      6546    0.007    0.070  expr.py:115(__rdiv__)
                                                                                    460095    0.051    0.051  {hasattr}
mul.py:28(flatten)                                                              ->     152    0.000    0.000  assumptions.py:365(getit)
                                                                                        74    0.000    0.000  basic.py:179(__hash__)
                                                                                      8952    0.007    0.028  basic.py:374(__eq__)
                                                                                     62379    0.008    0.008  basic.py:647(args)
                                                                                 453732/452587    0.332    1.042  cache.py:74(wrapper)
                                                                                     95534    0.805    0.966  compatibility.py:109(cmp_to_key)
                                                                                 11499/11266    0.007    0.174  decorators.py:72(__sympifyit_wrapper)
                                                                                         4    0.000    0.000  exponential.py:356(as_base_exp)
                                                                                    139428    0.022    0.022  expr.py:963(as_base_exp)
                                                                                        54    0.000    0.000  expr.py:977(as_coeff_mul)
                                                                                     29241    0.025    0.054  function.py:224(is_commutative)
                                                                                     27094    0.005    0.005  function.py:301(as_base_exp)
                                                                                    209186    0.054    0.054  numbers.py:201(as_coeff_mul)
                                                                                       388    0.000    0.000  numbers.py:448(__hash__)
                                                                                        62    0.000    0.000  numbers.py:819(__hash__)
                                                                                      8952    0.009    0.016  numbers.py:1028(__add__)
                                                                                 331360/324226    0.279    0.953  numbers.py:1056(__mul__)
                                                                                      7075    0.005    0.038  numbers.py:1063(__rmul__)
                                                                                      5056    0.001    0.001  numbers.py:1944(as_base_exp)
                                                                                     55652    0.045    0.066  power.py:243(as_base_exp)
                                                                                    192291    0.014    0.014  {len}
                                                                                    883892    0.070    0.070  {method 'append' of 'list' objects}
                                                                                    248668    0.024    0.024  {method 'extend' of 'list' objects}
                                                                                     63699    0.015    0.015  {method 'insert' of 'list' objects}
                                                                                    890471    0.118    0.118  {method 'items' of 'dict' objects}
                                                                                    483165    0.038    0.038  {method 'iteritems' of 'dict' objects}
                                                                                     27427    0.005    0.005  {method 'pop' of 'list' objects}
                                                                                    418718    0.085    0.120  {method 'setdefault' of 'dict' objects}
                                                                                     95534    0.221    1.161  {method 'sort' of 'list' objects}
                                                                                        62    0.000    0.000  {range}
euclidtools.py:1814(dmp_cancel)                                                 ->     112    0.000    0.001  densearith.py:287(dmp_mul_ground)
                                                                                      1006    0.001    0.004  densearith.py:511(dmp_neg)
                                                                                      4368    0.003    0.004  densebasic.py:58(dmp_ground_LC)
                                                                                      4370    0.002    0.002  densebasic.py:653(dmp_zero_p)
                                                                                      4368    0.001    0.001  domain.py:387(is_negative)
                                                                                      2184    0.005    6.101  euclidtools.py:1532(dmp_inner_gcd)
euclidtools.py:1532(dmp_inner_gcd)                                              ->    6831    0.061    0.287  densebasic.py:1275(dmp_multi_deflate)
                                                                                     20493    0.011    0.021  densebasic.py:1381(dmp_inflate)
                                                                                      4713    0.004    0.063  euclidtools.py:1476(dup_inner_gcd)
                                                                                 6831/1838    0.009    5.952  euclidtools.py:1512(_dmp_inner_gcd)
add.py:437(_eval_expand_power_exp)                                              ->   53238    0.006    0.006  basic.py:622(func)
                                                                                     53238    0.006    0.006  basic.py:647(args)
                                                                                     53238    0.070    0.254  cache.py:74(wrapper)
                                                                                     23318    0.002    0.002  expr.py:1845(_eval_expand_power_exp)
                                                                                      1810    0.004    0.053  function.py:419(_eval_expand_power_exp)
                                                                                 172074/166953    0.688    5.101  mul.py:550(_eval_expand_power_exp)
                                                                                      7508    0.017    0.298  power.py:262(_eval_expand_power_exp)
                                                                                    204710    0.021    0.021  {hasattr}
                                                                                    204710    0.013    0.013  {method 'append' of 'list' objects}
euclidtools.py:1512(_dmp_inner_gcd)                                             -> 6831/1838    0.013    5.946  euclidtools.py:1273(dmp_zz_heu_gcd)
                                                                                      6831    0.003    0.003  polyconfig.py:29(query)
euclidtools.py:1273(dmp_zz_heu_gcd)                                             ->     951    0.001    0.006  densearith.py:287(dmp_mul_ground)
                                                                                      2073    0.002    0.996  densearith.py:1652(dmp_div)
                                                                                      1902    0.002    0.037  densearith.py:1780(dmp_max_norm)
                                                                                      1902    0.002    0.002  densebasic.py:58(dmp_ground_LC)
                                                                                      1902    0.000    0.001  densebasic.py:148(dmp_degree)
                                                                                      3981    0.001    0.001  densebasic.py:653(dmp_zero_p)
                                                                                      1908    0.005    0.118  densetools.py:298(dmp_eval)
                                                                                       954    0.001    0.027  densetools.py:665(dmp_ground_primitive)
                                                                                       951    0.002    0.132  densetools.py:724(dmp_ground_extract)
                                                                                 7407/1969    0.010    5.425  euclidtools.py:898(_dmp_rr_trivial_gcd)
                                                                                       378    0.406    3.306  euclidtools.py:1149(dup_zz_heu_gcd)
                                                                                      1116    0.005    0.140  euclidtools.py:1256(_dmp_zz_gcd_interpolate)
                                                                                   954/569    0.003    4.271  euclidtools.py:1273(dmp_zz_heu_gcd)
                                                                                       957    0.001    0.008  pythonintegerring.py:101(sqrt)
                                                                                      1902    0.000    0.000  {abs}
                                                                                       951    0.000    0.000  {max}
                                                                                      2853    0.000    0.000  {min}
mul.py:961(fallback)                                                            -> 21191/14766    0.076    1.312  add.py:334(_eval_subs)
                                                                                    232983    0.027    0.027  basic.py:647(args)
                                                                                    480052    0.148    0.935  basic.py:1214(_eval_subs)
                                                                                    232983    0.304    1.966  cache.py:74(wrapper)
                                                                                 5347/4099    0.012    0.449  cse_opts.py:32(_eval_subs)
                                                                                 62516/62472    0.098    1.239  function.py:135(_eval_subs)
                                                                                 37848/35540    0.097    0.845  ikfast.py:279(Pow_eval_subs)
mul.py:550(_eval_expand_power_exp)                                              ->  183745    0.025    0.025  basic.py:622(func)
                                                                                    183745    0.020    0.020  basic.py:647(args)
                                                                                    183745    0.217    1.104  cache.py:74(wrapper)
                                                                                    372515    0.025    0.025  expr.py:1845(_eval_expand_power_exp)
                                                                                 24661/24659    0.049    0.108  function.py:419(_eval_expand_power_exp)
                                                                                 107851/104612    0.237    3.455  power.py:262(_eval_expand_power_exp)
                                                                                    505027    0.059    0.059  {hasattr}
                                                                                    505027    0.030    0.030  {method 'append' of 'list' objects}
euclidtools.py:898(_dmp_rr_trivial_gcd)                                         ->     335    0.000    0.001  densearith.py:511(dmp_neg)
                                                                                       894    0.001    0.001  densebasic.py:58(dmp_ground_LC)
                                                                                     14814    0.004    0.005  densebasic.py:653(dmp_zero_p)
                                                                                       894    0.000    0.000  densebasic.py:677(dmp_zero)
                                                                                       559    0.000    0.001  densebasic.py:713(dmp_one)
                                                                                       335    0.000    0.000  densebasic.py:758(dmp_ground)
                                                                                       894    0.000    0.000  domain.py:395(is_nonnegative)
                                                                                 6513/1967    0.015    5.420  euclidtools.py:942(_dmp_simplify_gcd)
                                                                                      6513    0.002    0.003  polyconfig.py:29(query)
euclidtools.py:942(_dmp_simplify_gcd)                                           ->   14960    0.006    0.845  densearith.py:1705(dmp_quo)
                                                                                      7405    0.001    0.001  densebasic.py:15(poly_LC)
                                                                                     13026    0.004    0.008  densebasic.py:148(dmp_degree)
                                                                                 5562/2456    0.003    1.066  euclidtools.py:1580(dmp_gcd)
                                                                                 3719/2382    0.009    4.075  euclidtools.py:1741(dmp_content)
add.py:467(_eval_expand_multinomial)                                            ->   57145    0.007    0.007  basic.py:622(func)
                                                                                     57145    0.006    0.006  basic.py:647(args)
                                                                                     57145    0.071    0.208  cache.py:74(wrapper)
                                                                                     27061    0.002    0.002  expr.py:1854(_eval_expand_multinomial)
                                                                                      1817    0.002    0.007  function.py:455(_eval_expand_multinomial)
                                                                                 174994/156839    0.654    4.424  mul.py:599(_eval_expand_multinomial)
                                                                                 8248/8242    0.031    0.516  power.py:344(_eval_expand_multinomial)
                                                                                    212120    0.021    0.021  {hasattr}
                                                                                    212120    0.013    0.013  {method 'append' of 'list' objects}
solvers.py:251(solve)                                                           ->     493    0.001    0.002  basic.py:179(__hash__)
                                                                                       493    0.001    0.090  basic.py:719(subs)
                                                                                      2488    0.003    0.004  compatibility.py:11(iterable)
                                                                                       758    0.001    0.001  compatibility.py:54(is_sequence)
                                                                                       530    0.000    0.008  decorators.py:72(__sympifyit_wrapper)
                                                                                      1509    0.002    0.012  piecewise.py:270(piecewise_fold)
                                                                                       937    0.001    0.089  polytools.py:892(as_expr)
                                                                                       530    0.000    0.000  relational.py:139(lhs)
                                                                                       530    0.000    0.000  relational.py:143(rhs)
                                                                                      3732    0.001    0.014  solvers.py:418(<genexpr>)
                                                                                      1244    0.010    5.075  solvers.py:519(_solve)
                                                                                       493    0.001    0.003  symbol.py:127(__new__)
                                                                                      3774    0.001    0.001  {isinstance}
                                                                                      1737    0.000    0.000  {len}
                                                                                      1509    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       493    0.001    0.014  {sorted}
                                                                                       986    0.000    0.000  {zip}
numbers.py:1126(__hash__)                                                       -> 4648708    1.435    3.593  numbers.py:819(__hash__)
solvers.py:519(_solve)                                                          ->     979    0.000    0.000  basic.py:179(__hash__)
                                                                                         3    0.000    0.003  basic.py:475(__str__)
                                                                                        21    0.000    0.000  basic.py:580(free_symbols)
                                                                                         9    0.000    0.000  basic.py:647(args)
                                                                                       532    0.002    0.341  basic.py:691(as_poly)
                                                                                         3    0.000    0.001  basic.py:719(subs)
                                                                                      1244    0.001    0.001  compatibility.py:11(iterable)
                                                                                         3    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                       325    0.000    0.002  expr.py:70(__neg__)
                                                                                      1199    0.002    0.003  matrices.py:276(__setitem__)
                                                                                       265    0.001    0.006  matrices.py:2616(zeros)
                                                                                        18    0.000    0.000  numbers.py:647(__neg__)
                                                                                         2    0.000    0.003  polyroots.py:440(roots)
                                                                                       530    0.001    0.037  polytools.py:758(terms)
                                                                                         2    0.000    0.000  polytools.py:1620(degree)
                                                                                       958    0.005    0.635  polytools.py:5187(cancel)
                                                                                         6    0.000    0.000  power.py:95(exp)
                                                                                         8    0.000    0.002  solvers.py:184(guess_solve_strategy)
                                                                                       979    0.012    0.620  solvers.py:752(solve_linear)
                                                                                       265    0.005    3.382  solvers.py:839(solve_linear_system)
                                                                                       958    0.001    0.001  symbol.py:100(free_symbols)
                                                                                         3    0.000    0.000  symbol.py:127(__new__)
                                                                                         3    0.000    0.000  {_functools.reduce}
                                                                                       265    0.000    0.007  {all}
                                                                                        46    0.000    0.000  {isinstance}
                                                                                      1515    0.000    0.000  {len}
                                                                                         5    0.000    0.019  {map}
                                                                                       536    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         5    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                      1199    0.000    0.000  {method 'index' of 'list' objects}
                                                                                         2    0.000    0.000  {method 'keys' of 'dict' objects}
ikfast_IKFastSolver.py:6349(PropagateSolvedConstants)                           ->    1947    0.000    0.000  basic.py:179(__hash__)
                                                                                       981    0.001    0.003  basic.py:399(__ne__)
                                                                                      2122    0.002    0.301  basic.py:719(subs)
                                                                                     23735    0.036    0.365  cache.py:74(wrapper)
                                                                                      2108    0.019    0.568  expr.py:1869(expand)
                                                                                       277    0.001    0.001  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                      4660    0.004    0.045  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                       491    0.006    1.503  ikfast_IKFastSolver.py:5899(SimplifyTransform)
                                                                                         2    0.000    0.000  numbers.py:770(__ne__)
                                                                                       526    0.000    0.001  numbers.py:1091(__ne__)
                                                                                      1232    0.003    0.790  polytools.py:80(__new__)
                                                                                       949    0.001    0.004  polytools.py:1620(degree)
                                                                                       937    0.013    1.461  solvers.py:251(solve)
                                                                                      2064    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        94    0.000    0.000  {method 'iteritems' of 'dict' objects}
mul.py:599(_eval_expand_multinomial)                                            -> 6314/5875    0.032    0.407  add.py:467(_eval_expand_multinomial)
                                                                                    187446    0.024    0.024  basic.py:622(func)
                                                                                    187446    0.020    0.020  basic.py:647(args)
                                                                                    187446    0.194    0.643  cache.py:74(wrapper)
                                                                                    356974    0.024    0.024  expr.py:1854(_eval_expand_multinomial)
                                                                                     21005    0.027    0.074  function.py:455(_eval_expand_multinomial)
                                                                                 106258/104322    0.338    3.414  power.py:344(_eval_expand_multinomial)
                                                                                    490551    0.057    0.057  {hasattr}
                                                                                    490551    0.028    0.028  {method 'append' of 'list' objects}
euclidtools.py:1580(dmp_gcd)                                                    -> 9360/3626    0.010    4.915  euclidtools.py:1532(dmp_inner_gcd)
fractionfield.py:38(__call__)                                                   ->      58    0.001    4.774  polyclasses.py:917(__init__)
                                                                                        58    0.000    0.000  {len}
polyclasses.py:917(__init__)                                                    ->      58    0.000    4.744  euclidtools.py:1814(dmp_cancel)
                                                                                        58    0.000    0.029  polyclasses.py:939(_parse)
ikfast_IKFastSolver.py:8735(SolvePairVariables)                                 ->       1    0.000    0.003  __init__.py:1169(warning)
                                                                                        46    0.000    0.000  basic.py:374(__eq__)
                                                                                        59    0.000    0.000  basic.py:399(__ne__)
                                                                                       216    0.000    0.224  basic.py:719(subs)
                                                                                       133    0.001    0.036  cache.py:74(wrapper)
                                                                                       238    0.000    0.086  decorators.py:72(__sympifyit_wrapper)
                                                                                        68    0.000    0.001  evalf.py:983(evalf)
                                                                                       272    0.000    0.001  expr.py:70(__neg__)
                                                                                         6    0.000    0.000  expr.py:742(as_expr)
                                                                                        41    0.001    0.059  expr.py:1869(expand)
                                                                                         1    0.000    0.008  function.py:1108(expand)
                                                                                         6    0.000    0.108  ikfast_AST.py:60(subs)
                                                                                        10    0.000    0.000  ikfast_IKFastSolver.py:157(__init__)
                                                                                         8    0.000    0.000  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                         1    0.000    0.032  ikfast_IKFastSolver.py:635(trigsimp_new)
                                                                                        50    0.000    0.001  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                         8    0.000    0.000  ikfast_IKFastSolver.py:881(sortComplexity)
                                                                                        18    0.000    0.032  ikfast_IKFastSolver.py:6298(CheckExpressionUnique)
                                                                                         1    0.002    2.371  ikfast_IKFastSolver.py:7521(SolvePairVariablesHalfAngle)
                                                                                         8    0.001    0.363  ikfast_IKFastSolver.py:8104(solveSingleVariable)
                                                                                         1    0.000    0.001  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                        38    0.001    0.147  ikfast_IKFastSolver.py:9256(groupTerms)
                                                                                         7    0.000    0.017  ikfast_IKFastSolver.py:9384(removecommonexprs)
                                                                                        68    0.003    0.026  ikfast_IKFastSolver.py:9467(det_bareis)
                                                                                        20    0.000    0.000  iterables.py:435(numbered_symbols)
                                                                                         4    0.000    0.000  matrices.py:227(__getitem__)
                                                                                      1360    0.001    0.002  matrices.py:276(__setitem__)
                                                                                         1    0.000    0.001  matrices.py:407(__mul__)
                                                                                         1    0.000    0.013  matrices.py:1898(adjugate)
                                                                                       136    0.000    0.002  matrices.py:2616(zeros)
                                                                                         2    0.000    0.000  numbers.py:1056(__mul__)
                                                                                       594    0.000    0.001  numbers.py:1091(__ne__)
                                                                                       195    0.000    0.340  polytools.py:80(__new__)
                                                                                         2    0.000    0.000  polytools.py:115(from_dict)
                                                                                       224    0.000    0.003  polytools.py:743(monoms)
                                                                                        24    0.000    0.002  polytools.py:758(terms)
                                                                                       208    0.000    0.032  polytools.py:867(as_dict)
                                                                                        57    0.000    0.023  polytools.py:892(as_expr)
                                                                                         2    0.000    0.000  polytools.py:1244(sub)
                                                                                        63    0.000    0.001  polytools.py:1642(degree_list)
                                                                                        54    0.000    0.012  polytools.py:1701(TC)
                                                                                         7    0.000    0.000  polytools.py:1761(LM)
                                                                                         1    0.000    0.001  polytools.py:4444(lcm)
                                                                                         4    0.000    0.000  simplify.py:23(fraction)
                                                                                        14    0.000    0.736  simplify.py:1564(simplify)
                                                                                        24    0.000    0.000  symbol.py:35(__new__)
                                                                                       130    0.000    0.000  {all}
                                                                                        41    0.000    0.000  {any}
                                                                                       199    0.000    0.000  {len}
                                                                                        12    0.000    0.000  {max}
                                                                                       160    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       908    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                        20    0.000    0.000  {method 'index' of 'list' objects}
                                                                                        70    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'remove' of 'list' objects}
                                                                                         9    0.000    0.000  {method 'sort' of 'list' objects}
                                                                                       358    0.000    0.000  {range}
                                                                                       454    0.000    0.000  {sum}
polytools.py:5187(cancel)                                                       ->    1316    0.011    0.199  add.py:260(as_numer_denom)
                                                                                      2128    0.002    0.103  decorators.py:72(__sympifyit_wrapper)
                                                                                        34    0.000    0.000  expr.py:1048(as_numer_denom)
                                                                                        44    0.000    0.000  expr.py:2008(as_numer_denom)
                                                                                       721    0.003    0.053  mul.py:775(as_numer_denom)
                                                                                      2128    0.003    0.087  numbers.py:1056(__mul__)
                                                                                      2405    0.003    0.003  polyoptions.py:699(allowed_flags)
                                                                                      4256    0.006    0.304  polytools.py:892(as_expr)
                                                                                      2128    0.011    1.475  polytools.py:3003(cancel)
                                                                                      2128    0.004    2.159  polytools.py:3596(parallel_poly_from_expr)
                                                                                        13    0.000    0.000  power.py:616(as_numer_denom)
                                                                                      2405    0.004    0.004  sympify.py:23(sympify)
                                                                                      4533    0.002    0.002  {isinstance}
expr.py:1062(extract_multiplicatively)                                          ->   53356    0.012    0.016  assumptions.py:365(getit)
                                                                                     66640    0.033    0.096  basic.py:374(__eq__)
                                                                                      6740    0.007    0.021  basic.py:399(__ne__)
                                                                                    356818    0.034    0.034  basic.py:647(args)
                                                                                       784    0.001    0.003  cache.py:74(wrapper)
                                                                                    166463    0.077    2.536  decorators.py:72(__sympifyit_wrapper)
                                                                                 152423/24039    0.490    3.631  expr.py:1062(extract_multiplicatively)
                                                                                        51    0.000    0.000  numbers.py:410(__ne__)
                                                                                      1555    0.002    0.006  numbers.py:770(__ne__)
                                                                                      3470    0.003    0.041  numbers.py:1056(__mul__)
                                                                                    105533    0.079    0.663  numbers.py:1084(__eq__)
                                                                                      3847    0.005    0.021  numbers.py:1091(__ne__)
                                                                                    146310    0.086    0.143  operations.py:57(_new_rawargs)
                                                                                      8429    0.002    0.002  power.py:91(base)
                                                                                    163744    0.183    0.186  sympify.py:23(sympify)
                                                                                    127194    0.007    0.007  {len}
                                                                                      3076    0.000    0.000  {method 'append' of 'list' objects}
numbers.py:819(__hash__)                                                        -> 5413409    1.850    2.527  numbers.py:194(__hash__)
{getattr}                                                                       -> 399244/36950    0.135    2.478  assumptions.py:365(getit)
                                                                                       138    0.000    0.001  expr.py:176(is_number)
                                                                                        63    0.000    0.000  function.py:224(is_commutative)
                                                                                      3243    0.000    0.000  numbers.py:197(is_number)
                                                                                      1004    0.000    0.000  symbol.py:96(is_number)
trigonometric.py:1362(eval)                                                     ->    1445    0.001    0.491  assumptions.py:365(getit)
                                                                                      1447    0.004    3.531  cache.py:74(wrapper)
                                                                                       723    0.001    0.067  decorators.py:72(__sympifyit_wrapper)
                                                                                         1    0.000    0.000  numbers.py:197(is_number)
                                                                                         1    0.000    0.000  numbers.py:1056(__mul__)
euclidtools.py:1741(dmp_content)                                                ->    3719    0.001    0.001  densebasic.py:15(poly_LC)
                                                                                      3719    0.002    0.002  densebasic.py:58(dmp_ground_LC)
                                                                                      3719    0.001    0.001  densebasic.py:653(dmp_zero_p)
                                                                                      3792    0.002    0.004  densebasic.py:697(dmp_one_p)
                                                                                      3719    0.001    0.001  domain.py:387(is_negative)
                                                                                 3792/2449    0.003    4.064  euclidtools.py:1580(dmp_gcd)
sympify.py:23(sympify)                                                          ->    1653    0.001    0.002  compatibility.py:11(iterable)
                                                                                      4898    0.005    0.013  containers.py:30(__new__)
                                                                                      6801    0.002    0.004  inspect.py:339(getmro)
                                                                                        21    0.000    0.000  matrices.py:2836(_matrix_sympify)
                                                                                      8864    0.022    0.118  numbers.py:294(__new__)
                                                                                     82936    0.026    0.026  numbers.py:989(__new__)
                                                                                     33948    0.011    0.011  sympify.py:9(__init__)
                                                                                      9464    0.008    0.008  sympify.py:23(sympify)
                                                                                     13124    0.002    0.002  {isinstance}
complexes.py:246(eval)                                                          ->       4    0.000    0.001  add.py:517(__neg__)
                                                                                      7681    0.004    1.299  assumptions.py:365(getit)
                                                                                 1307/1224    0.004    0.046  cache.py:74(wrapper)
                                                                                       430    0.000    0.035  decorators.py:72(__sympifyit_wrapper)
                                                                                       410    0.002    0.110  expr.py:240(conjugate)
                                                                                       997    0.000    0.000  expr.py:977(as_coeff_mul)
                                                                                       410    0.006    2.208  expr.py:1869(expand)
                                                                                       410    0.001    0.010  miscellaneous.py:30(sqrt)
                                                                                        40    0.000    0.000  numbers.py:337(__neg__)
                                                                                         3    0.000    0.000  numbers.py:647(__neg__)
                                                                                        22    0.000    0.000  numbers.py:1015(__neg__)
                                                                                       117    0.000    0.007  numbers.py:1056(__mul__)
                                                                                         1    0.000    0.000  numbers.py:1419(__neg__)
                                                                                        44    0.000    0.000  power.py:243(as_base_exp)
add.py:447(_eval_expand_power_base)                                             ->   53242    0.006    0.006  basic.py:622(func)
                                                                                     53242    0.006    0.006  basic.py:647(args)
                                                                                     53242    0.066    0.193  cache.py:74(wrapper)
                                                                                     23322    0.002    0.002  expr.py:1848(_eval_expand_power_base)
                                                                                      1810    0.004    0.049  function.py:431(_eval_expand_power_base)
                                                                                 172078/171812    0.656    2.785  mul.py:560(_eval_expand_power_base)
                                                                                      7508    0.015    0.098  power.py:279(_eval_expand_power_base)
                                                                                    204718    0.020    0.020  {hasattr}
                                                                                    204718    0.012    0.012  {method 'append' of 'list' objects}
solvers.py:839(solve_linear_system)                                             ->     721    0.000    0.000  basic.py:179(__hash__)
                                                                                       774    0.000    0.031  decorators.py:72(__sympifyit_wrapper)
                                                                                      2561    0.002    0.007  matrices.py:227(__getitem__)
                                                                                       672    0.003    1.158  matrices.py:757(row)
                                                                                        70    0.000    0.001  matrices.py:793(col_swap)
                                                                                        10    0.000    0.000  matrices.py:797(row_del)
                                                                                       113    0.000    0.002  numbers.py:1042(__sub__)
                                                                                       109    0.000    0.003  numbers.py:1056(__mul__)
                                                                                       203    0.000    0.000  numbers.py:1373(__nonzero__)
                                                                                       484    0.006    2.175  simplify.py:1564(simplify)
                                                                                       257    0.000    0.000  {len}
                                                                                       247    0.000    0.000  {method 'get' of 'dict' objects}
euclidtools.py:1149(dup_zz_heu_gcd)                                             ->     366    0.000    0.000  densearith.py:267(dup_mul_ground)
                                                                                       851    0.001    0.076  densearith.py:1546(dup_div)
                                                                                       732    0.000    0.002  densearith.py:1760(dup_max_norm)
                                                                                       732    0.000    0.000  densebasic.py:15(poly_LC)
                                                                                      8120    0.002    0.002  densebasic.py:131(dup_degree)
                                                                                       764    0.451    0.451  densetools.py:274(dup_eval)
                                                                                       382    0.000    0.037  densetools.py:637(dup_primitive)
                                                                                      4060    0.006    0.122  densetools.py:697(dup_extract)
                                                                                      5092    0.002    0.003  euclidtools.py:870(_dup_rr_trivial_gcd)
                                                                                       462    0.863    0.863  euclidtools.py:1134(_dup_zz_gcd_interpolate)
                                                                                       382    0.000    1.365  pythonintegerring.py:93(gcd)
                                                                                       398    0.000    0.028  pythonintegerring.py:101(sqrt)
                                                                                       732    0.000    0.000  {abs}
                                                                                       366    0.000    0.000  {max}
                                                                                      1098    0.000    0.000  {min}
add.py:477(_eval_expand_log)                                                    ->   63085    0.007    0.007  basic.py:622(func)
                                                                                     63085    0.009    0.009  basic.py:647(args)
                                                                                     63085    0.085    0.293  cache.py:74(wrapper)
                                                                                     29741    0.002    0.002  expr.py:1857(_eval_expand_log)
                                                                                      1825    0.005    0.063  function.py:467(_eval_expand_log)
                                                                                 190012/171013    0.735    2.617  mul.py:609(_eval_expand_log)
                                                                                 9128/9122    0.031    0.087  power.py:488(_eval_expand_log)
                                                                                    230706    0.025    0.025  {hasattr}
                                                                                    230706    0.015    0.015  {method 'append' of 'list' objects}
expr.py:111(__div__)                                                            -> 491810/491806    0.518    3.076  cache.py:74(wrapper)
cse_main.py:46(postprocess_for_cse)                                             ->    4326    0.018    3.198  cse_opts.py:62(sub_post)
cse_opts.py:62(sub_post)                                                        ->    2328    0.000    0.000  basic.py:647(args)
                                                                                      1164    0.001    2.862  basic.py:719(subs)
                                                                                      2328    0.007    0.263  cache.py:74(wrapper)
                                                                                     24078    0.005    0.013  cse_opts.py:9(assumed)
                                                                                      4326    0.002    0.002  iterables.py:166(__init__)
                                                                                     28404    0.008    0.041  iterables.py:204(next)
                                                                                      4326    0.000    0.000  iterables.py:207(__iter__)
                                                                                      1164    0.000    0.000  {method 'append' of 'list' objects}
ikfast_IKFastSolver.py:6126(_SimplifyRotationDot)                               ->   11664    0.012    0.150  ikfast_IKFastSolver.py:407(equal)
                                                                                      1048    0.002    2.782  polytools.py:80(__new__)
                                                                                      1042    0.003    0.239  polytools.py:758(terms)
                                                                                      1042    0.000    0.000  {len}
                                                                                      1042    0.000    0.000  {range}
ikfast_IKFastSolver.py:6230(_SimplifyRotationCross)                             ->    1698    0.004    0.029  add.py:517(__neg__)
                                                                                       590    0.000    0.002  expr.py:70(__neg__)
                                                                                     11664    0.012    0.132  ikfast_IKFastSolver.py:407(equal)
                                                                                      1644    0.001    0.003  numbers.py:647(__neg__)
                                                                                      6778    0.002    0.004  numbers.py:1015(__neg__)
                                                                                       468    0.000    0.000  numbers.py:1393(__neg__)
                                                                                       486    0.000    0.000  numbers.py:1419(__neg__)
                                                                                      1048    0.002    2.665  polytools.py:80(__new__)
                                                                                      1042    0.003    0.222  polytools.py:758(terms)
                                                                                      1042    0.000    0.000  {len}
                                                                                      1042    0.000    0.000  {range}
assumptions.py:365(getit)                                                       -> 223316/41134    0.904    2.932  assumptions.py:188(_what_known_about)
evalf.py:983(evalf)                                                             ->   48657    0.067    0.316  evalf.py:953(evalf)
                                                                                      1330    0.000    0.000  evalf.py:1060(_eval_evalf)
                                                                                       162    0.001    0.001  function.py:236(_eval_evalf)
                                                                                     46981    0.042    0.060  libmpf.py:64(dps_to_prec)
                                                                                       132    0.000    1.258  mul.py:474(_eval_evalf)
                                                                                     40327    0.029    0.064  numbers.py:319(_new)
                                                                                      1511    0.004    0.604  operations.py:261(_eval_evalf)
                                                                                        33    0.000    0.556  power.py:585(_eval_evalf)
                                                                                     87308    0.010    0.010  {max}
                                                                                     40327    0.006    0.006  {min}
assumptions.py:188(_what_known_about)                                           ->    3522    0.002    0.045  add.py:276(<lambda>)
                                                                                      1816    0.001    0.015  add.py:277(<lambda>)
                                                                                 3505/3501    0.001    0.009  add.py:279(<lambda>)
                                                                                 3980/3973    0.002    0.025  add.py:280(<lambda>)
                                                                                 3505/3478    0.009    0.731  add.py:282(_eval_is_odd)
                                                                                 3512/3511    0.003    0.263  add.py:289(_eval_is_irrational)
                                                                                 3529/1717    0.012    0.804  add.py:296(_eval_is_positive)
                                                                                 3529/3521    0.008    0.060  add.py:315(_eval_is_negative)
                                                                                    340076    0.201    0.683  assumptions.py:315(_learn_new_facts)
                                                                                     50320    0.015    0.107  assumptions.py:365(getit)
                                                                                         1    0.000    0.000  complexes.py:196(_eval_is_zero)
                                                                                        15    0.000    0.000  complexes.py:264(_eval_is_nonzero)
                                                                                        15    0.000    0.001  complexes.py:267(_eval_is_positive)
                                                                                         9    0.000    0.000  evalf.py:983(evalf)
                                                                                       150    0.000    0.001  function.py:267(_eval_is_comparable)
                                                                                      3227    0.001    0.008  mul.py:816(<lambda>)
                                                                                 11688/11683    0.005    0.028  mul.py:818(<lambda>)
                                                                                 43951/43625    0.016    0.087  mul.py:819(<lambda>)
                                                                                     11690    0.011    0.015  mul.py:824(_eval_is_real)
                                                                                     11690    0.013    0.033  mul.py:846(_eval_is_imaginary)
                                                                                 11693/11690    0.010    0.041  mul.py:869(_eval_is_irrational)
                                                                                 11698/7510    0.042    0.867  mul.py:878(_eval_is_positive)
                                                                                 11693/7617    0.035    0.603  mul.py:903(_eval_is_negative)
                                                                                     11688    0.009    0.024  mul.py:926(_eval_is_odd)
                                                                                 11688/6541    0.010    1.474  mul.py:943(_eval_is_even)
                                                                                      1236    0.002    0.016  numbers.py:331(_eval_is_positive)
                                                                                      1402    0.002    0.017  numbers.py:334(_eval_is_negative)
                                                                                       465    0.000    0.000  numbers.py:641(_eval_is_positive)
                                                                                        12    0.000    0.000  numbers.py:1134(_eval_is_odd)
                                                                                       708    0.001    0.001  power.py:114(_eval_is_comparable)
                                                                                       572    0.001    0.002  power.py:121(_eval_is_even)
                                                                                   575/547    0.001    0.041  power.py:128(_eval_is_positive)
                                                                                   573/572    0.002    0.012  power.py:141(_eval_is_negative)
                                                                                   571/569    0.001    0.003  power.py:160(_eval_is_integer)
                                                                                       573    0.001    0.001  power.py:174(_eval_is_real)
                                                                                       572    0.001    0.005  power.py:206(_eval_is_odd)
                                                                                     51/50    0.000    0.000  power.py:210(_eval_is_bounded)
                                                                                         4    0.000    0.000  trigonometric.py:309(_eval_is_real)
                                                                                         1    0.000    0.000  trigonometric.py:312(_eval_is_bounded)
                                                                                         4    0.000    0.000  trigonometric.py:530(_eval_is_real)
                                                                                         2    0.000    0.000  trigonometric.py:533(_eval_is_bounded)
                                                                                         9    0.000    0.000  {cmp}
                                                                                 649125/64454    0.170    2.472  {getattr}
                                                                                   2037990    0.476    0.476  {hasattr}
                                                                                    211622    0.018    0.018  {method 'append' of 'list' objects}
                                                                                    159516    0.017    0.017  {method 'get' of 'dict' objects}
                                                                                    211622    0.026    0.026  {method 'pop' of 'list' objects}
expr.py:1247(could_extract_minus_sign)                                          ->     822    0.002    0.043  add.py:517(__neg__)
                                                                                      3159    0.003    0.010  basic.py:399(__ne__)
                                                                                       608    0.000    0.000  basic.py:647(args)
                                                                                      2510    0.002    0.042  expr.py:70(__neg__)
                                                                                      7042    0.041    2.812  expr.py:1062(extract_multiplicatively)
                                                                                 1858/1850    0.004    1.234  expr.py:1247(could_extract_minus_sign)
                                                                                       133    0.000    0.011  mul.py:775(as_numer_denom)
                                                                                         5    0.000    0.000  numbers.py:337(__neg__)
                                                                                         5    0.000    0.000  numbers.py:410(__ne__)
                                                                                        27    0.000    0.000  numbers.py:647(__neg__)
                                                                                        27    0.000    0.000  numbers.py:770(__ne__)
                                                                                       103    0.000    0.000  numbers.py:1015(__neg__)
                                                                                       157    0.000    0.001  numbers.py:1091(__ne__)
                                                                                        46    0.000    0.000  numbers.py:1393(__neg__)
                                                                                         8    0.000    0.000  numbers.py:1419(__neg__)
                                                                                         2    0.000    0.000  numbers.py:1705(__ne__)
                                                                                       266    0.000    0.000  operations.py:264(make_args)
                                                                                       133    0.000    0.000  {filter}
                                                                                       180    0.000    0.000  {hash}
                                                                                       741    0.000    0.000  {len}
mul.py:560(_eval_expand_power_base)                                             ->       2    0.000    0.000  add.py:447(_eval_expand_power_base)
                                                                                    183780    0.024    0.024  basic.py:622(func)
                                                                                    183780    0.020    0.020  basic.py:647(args)
                                                                                    183780    0.191    0.605  cache.py:74(wrapper)
                                                                                    372590    0.025    0.025  expr.py:1848(_eval_expand_power_base)
                                                                                 24661/24659    0.047    0.100  function.py:431(_eval_expand_power_base)
                                                                                    107851    0.193    1.363  power.py:279(_eval_expand_power_base)
                                                                                    505104    0.059    0.059  {hasattr}
                                                                                    505104    0.029    0.029  {method 'append' of 'list' objects}
add.py:427(_eval_expand_basic)                                                  ->   63085    0.007    0.007  basic.py:622(func)
                                                                                     63085    0.007    0.007  basic.py:647(args)
                                                                                     63085    0.077    0.217  cache.py:74(wrapper)
                                                                                     29741    0.002    0.002  expr.py:1842(_eval_expand_basic)
                                                                                      1825    0.004    0.050  function.py:407(_eval_expand_basic)
                                                                                 190012/171013    0.681    2.312  mul.py:540(_eval_expand_basic)
                                                                                 9128/9122    0.028    0.080  power.py:252(_eval_expand_basic)
                                                                                    230706    0.022    0.022  {hasattr}
                                                                                    230706    0.014    0.014  {method 'append' of 'list' objects}
cse_opts.py:32(_eval_subs)                                                      -> 10352/9966    0.057    2.266  add.py:334(_eval_subs)
                                                                                     14416    0.008    0.022  basic.py:374(__eq__)
                                                                                     13239    0.002    0.002  basic.py:647(args)
                                                                                      5085    0.002    0.020  basic.py:1214(_eval_subs)
                                                                                     13239    0.023    0.100  cache.py:74(wrapper)
                                                                                        96    0.000    0.002  ikfast.py:279(Pow_eval_subs)
                                                                                 10945/9903    0.063    0.569  mul.py:952(_eval_subs)
mul.py:609(_eval_expand_log)                                                    -> 6782/6343    0.034    0.286  add.py:477(_eval_expand_log)
                                                                                    202915    0.026    0.026  basic.py:622(func)
                                                                                    202915    0.023    0.023  basic.py:647(args)
                                                                                    202915    0.238    0.922  cache.py:74(wrapper)
                                                                                    387716    0.027    0.027  expr.py:1857(_eval_expand_log)
                                                                                 22220/22218    0.049    0.107  function.py:467(_eval_expand_log)
                                                                                 111116/109150    0.335    0.848  power.py:488(_eval_expand_log)
                                                                                    527834    0.060    0.060  {hasattr}
                                                                                    527834    0.032    0.032  {method 'append' of 'list' objects}
basic.py:374(__eq__)                                                            -> 1393632    0.124    0.124  basic.py:204(_hashable_content)
                                                                                 160529/149682    0.091    0.163  basic.py:374(__eq__)
                                                                                     41275    0.054    0.133  numbers.py:396(__eq__)
                                                                                     17823    0.021    0.051  numbers.py:751(__eq__)
                                                                                      1457    0.001    0.008  numbers.py:1084(__eq__)
                                                                                    755188    0.092    0.092  symbol.py:69(_hashable_content)
                                                                                      5572    0.003    0.004  symbol.py:137(_hashable_content)
                                                                                      8060    0.001    0.001  symbol.py:175(_hashable_content)
                                                                                   1078490    0.250    1.131  sympify.py:161(_sympify)
power.py:279(_eval_expand_power_base)                                           ->  217377    0.025    0.025  basic.py:647(args)
                                                                                    217368    0.201    0.669  cache.py:74(wrapper)
                                                                                    217368    1.262    1.601  expr.py:1869(expand)
                                                                                    217368    0.028    0.028  power.py:95(exp)
                                                                                    217368    0.018    0.018  {method 'get' of 'dict' objects}
basic.py:179(__hash__)                                                          ->      20    0.000    0.000  assume.py:117(_hashable_content)
                                                                                    309881    0.030    0.030  basic.py:204(_hashable_content)
                                                                                     48009    0.009    0.009  numbers.py:328(_hashable_content)
                                                                                      4385    0.001    0.001  numbers.py:638(_hashable_content)
                                                                                       163    0.000    0.000  polytools.py:215(_hashable_content)
                                                                                      1824    0.000    0.000  symbol.py:69(_hashable_content)
                                                                                      1936    0.002    0.002  symbol.py:137(_hashable_content)
                                                                                        19    0.000    0.000  symbol.py:175(_hashable_content)
                                                                                 366237/348183    0.187    0.435  {hash}
                                                                                        30    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         3    0.000    0.000  {sorted}
numbers.py:194(__hash__)                                                        -> 5690328    0.752    0.772  basic.py:179(__hash__)
sympify.py:161(_sympify)                                                        -> 2226034    2.029    2.124  sympify.py:23(sympify)
mul.py:540(_eval_expand_basic)                                                  -> 6782/6343    0.032    0.249  add.py:427(_eval_expand_basic)
                                                                                    202915    0.024    0.024  basic.py:622(func)
                                                                                    202915    0.021    0.021  basic.py:647(args)
                                                                                    202915    0.207    0.665  cache.py:74(wrapper)
                                                                                    387716    0.028    0.028  expr.py:1842(_eval_expand_basic)
                                                                                 22220/22218    0.045    0.097  function.py:407(_eval_expand_basic)
                                                                                 111116/109150    0.322    0.805  power.py:252(_eval_expand_basic)
                                                                                    527834    0.055    0.055  {hasattr}
                                                                                    527834    0.029    0.029  {method 'append' of 'list' objects}
polytools.py:3596(parallel_poly_from_expr)                                      ->    2161    0.003    0.033  polyoptions.py:689(build_options)
                                                                                      2161    0.043    2.349  polytools.py:3601(_parallel_poly_from_expr)
ikfast_IKFastSolver.py:7521(SolvePairVariablesHalfAngle)                        ->      10    0.000    0.000  basic.py:374(__eq__)
                                                                                        30    0.000    0.002  basic.py:719(subs)
                                                                                        41    0.000    0.017  cache.py:74(wrapper)
                                                                                       583    0.000    0.015  decorators.py:72(__sympifyit_wrapper)
                                                                                       181    0.002    0.084  expr.py:1869(expand)
                                                                                         1    0.000    0.000  ikfast_AST.py:146(__init__)
                                                                                         4    0.000    0.000  ikfast_IKFastSolver.py:157(__init__)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                       213    0.000    0.007  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                         2    0.000    0.000  ikfast_IKFastSolver.py:881(sortComplexity)
                                                                                         2    0.000    0.011  ikfast_IKFastSolver.py:7823(solveVariablesLinearly)
                                                                                        16    0.002    0.821  ikfast_IKFastSolver.py:8050(checkFinalEquation)
                                                                                         2    0.000    0.000  ikfast_IKFastSolver.py:8104(solveSingleVariable)
                                                                                       141    0.000    0.001  matrices.py:276(__setitem__)
                                                                                        16    0.000    0.041  matrices.py:2092(berkowitz_det)
                                                                                        16    0.000    0.000  matrices.py:2616(zeros)
                                                                                        10    0.000    0.000  numbers.py:1028(__add__)
                                                                                        20    0.000    0.000  numbers.py:1056(__mul__)
                                                                                        56    0.000    0.883  polytools.py:80(__new__)
                                                                                        30    0.000    0.000  polytools.py:743(monoms)
                                                                                        58    0.000    0.019  polytools.py:758(terms)
                                                                                        27    0.000    0.010  polytools.py:892(as_expr)
                                                                                        80    0.000    0.000  polytools.py:1642(degree_list)
                                                                                        10    0.000    0.000  polytools.py:1701(TC)
                                                                                        32    0.000    0.240  polytools.py:3944(div)
                                                                                       180    0.001    0.002  simplify.py:23(fraction)
                                                                                        30    0.001    0.212  simplify.py:1564(simplify)
                                                                                        47    0.000    0.000  {len}
                                                                                       262    0.000    0.000  {max}
                                                                                        26    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        20    0.000    0.000  {method 'remove' of 'list' objects}
                                                                                         3    0.000    0.000  {method 'sort' of 'list' objects}
                                                                                         2    0.000    0.000  {min}
                                                                                        67    0.000    0.000  {range}
ikfast_AST.py:546(generate)                                                     ->      82    0.000    2.359  ikfast_generator_cpp.py:1756(generateSequence)
ikfast_generator_cpp.py:1756(generateSequence)                                  ->      82    0.000    2.359  ikfast_generator_cpp.py:1763(generateTree)
ikfast_AST.py:488(generate)                                                     ->      82    0.000    2.358  ikfast_generator_cpp.py:1681(generateRotation)
ikfast_generator_cpp.py:1681(generateRotation)                                  ->       1    0.000    0.000  ikfast_generator_cpp.py:222(resetequations)
                                                                                         1    0.000    2.217  ikfast_generator_cpp.py:1763(generateTree)
                                                                                         1    0.000    0.141  ikfast_generator_cpp.py:1838(writeEquations)
                                                                                         9    0.000    0.000  matrices.py:227(__getitem__)
                                                                                         9    0.000    0.000  symbol.py:35(__new__)
                                                                                        18    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         4    0.000    0.000  {range}
polytools.py:3601(_parallel_poly_from_expr)                                     ->    2161    0.006    0.038  constructor.py:195(construct_domain)
                                                                                      4289    0.040    0.935  expr.py:1869(expand)
                                                                                      4322    0.009    0.093  polyclasses.py:256(from_monoms_coeffs)
                                                                                     15094    0.016    0.017  polyoptions.py:60(getter)
                                                                                      4322    0.005    0.011  polytools.py:100(new)
                                                                                        33    0.000    0.022  polytools.py:892(as_expr)
                                                                                      2161    0.012    1.174  polyutils.py:263(_parallel_dict_from_expr)
                                                                                      4322    0.009    0.009  sympify.py:23(sympify)
                                                                                      6516    0.001    0.001  {isinstance}
                                                                                      8644    0.001    0.001  {len}
                                                                                     25932    0.002    0.002  {method 'append' of 'list' objects}
                                                                                      4322    0.001    0.001  {method 'extend' of 'list' objects}
                                                                                      4322    0.001    0.001  {method 'items' of 'dict' objects}
                                                                                      6483    0.003    0.003  {zip}
add.py:260(as_numer_denom)                                                      ->   16648    0.002    0.002  basic.py:647(args)
                                                                                     95700    0.155    1.073  cache.py:74(wrapper)
                                                                                        18    0.000    0.000  expr.py:1048(as_numer_denom)
                                                                                      2761    0.000    0.000  expr.py:2008(as_numer_denom)
                                                                                 51708/50711    0.137    0.951  mul.py:775(as_numer_denom)
                                                                                      3952    0.003    0.006  numbers.py:907(as_numer_denom)
                                                                                      1230    0.000    0.000  numbers.py:1255(as_numer_denom)
                                                                                      2735    0.005    0.029  power.py:616(as_numer_denom)
                                                                                     16648    0.002    0.002  {len}
                                                                                    124808    0.007    0.007  {method 'append' of 'list' objects}
ikfast_IKFastSolver.py:7982(solveHighDegreeEquationsHalfAngle)                  ->      35    0.000    0.000  basic.py:399(__ne__)
                                                                                        35    0.000    0.095  basic.py:471(__repr__)
                                                                                        32    0.000    0.001  basic.py:475(__str__)
                                                                                       162    0.000    0.021  basic.py:719(subs)
                                                                                        56    0.000    0.011  cache.py:74(wrapper)
                                                                                      1596    0.001    0.022  decorators.py:72(__sympifyit_wrapper)
                                                                                        58    0.000    0.014  evalf.py:983(evalf)
                                                                                        42    0.000    0.028  expr.py:1869(expand)
                                                                                        10    0.000    0.000  ikfast_AST.py:146(__init__)
                                                                                        67    0.000    0.000  ikfast_IKFastSolver.py:118(__init__)
                                                                                        10    0.000    0.000  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                        42    0.007    0.974  ikfast_IKFastSolver.py:8050(checkFinalEquation)
                                                                                        42    0.001    0.038  ikfast_IKFastSolver.py:9384(removecommonexprs)
                                                                                        23    0.000    0.000  numbers.py:410(__ne__)
                                                                                        44    0.000    0.001  numbers.py:1028(__add__)
                                                                                        36    0.000    0.001  numbers.py:1056(__mul__)
                                                                                       167    0.000    0.230  polytools.py:80(__new__)
                                                                                        44    0.000    0.000  polytools.py:743(monoms)
                                                                                        44    0.000    0.002  polytools.py:758(terms)
                                                                                        42    0.000    0.011  polytools.py:892(as_expr)
                                                                                        11    0.000    0.000  polytools.py:1620(degree)
                                                                                        46    0.000    0.000  polytools.py:1642(degree_list)
                                                                                       174    0.001    0.003  simplify.py:23(fraction)
                                                                                       100    0.002    0.737  simplify.py:1564(simplify)
                                                                                        32    0.000    0.000  {len}
                                                                                       174    0.000    0.000  {max}
                                                                                        44    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       116    0.000    0.000  {range}
                                                                                        46    0.000    0.000  {sum}
add.py:395(as_real_imag)                                                        ->    5978    0.001    0.001  basic.py:622(func)
                                                                                      2989    0.000    0.000  basic.py:647(args)
                                                                                      5978    0.012    0.064  cache.py:74(wrapper)
                                                                                     10855    0.012    1.840  expr.py:935(as_real_imag)
                                                                                       166    0.005    0.250  power.py:502(as_real_imag)
                                                                                       272    0.000    0.008  symbol.py:85(as_real_imag)
                                                                                     22586    0.002    0.002  {method 'append' of 'list' objects}
function.py:184(_should_evalf)                                                  ->    2924    0.015    2.147  add.py:395(as_real_imag)
                                                                                      2924    0.000    0.000  {max}
                                                                                      2924    0.000    0.000  {method 'append' of 'list' objects}
{max}                                                                           ->     861    0.000    0.002  ctx_mp_python.py:178(__gt__)
                                                                                      2040    0.000    0.000  factor_.py:18(<genexpr>)
                                                                                 16363/8535    0.006    1.999  function.py:178(<genexpr>)
ikfast_IKFastSolver.py:635(trigsimp_new)                                        ->     798    0.001    0.657  basic.py:719(subs)
                                                                                      1531    0.004    0.337  expr.py:450(count_ops)
                                                                                       798    0.008    0.588  expr.py:1869(expand)
                                                                                       733    0.002    0.496  function.py:1108(expand)
                                                                                       798    0.001    0.002  ikfast_IKFastSolver.py:407(equal)
expr.py:935(as_real_imag)                                                       ->   44718    0.057    2.020  cache.py:74(wrapper)
function.py:178(<genexpr>)                                                      -> 8576/4662    0.004    1.996  function.py:184(_should_evalf)
cache.py:96(<lambda>)                                                           ->
str.py:471(sstr)                                                                ->   97449    0.146    0.206  printer.py:190(__init__)
                                                                                 97449/70404    0.049    1.748  printer.py:222(doprint)
mul.py:474(_eval_evalf)                                                         ->    2475    0.023    1.265  expr.py:1869(expand)
                                                                                 2475/2297    0.006    0.776  operations.py:261(_eval_evalf)
{any}                                                                           -> 807561/128250    0.127    1.350  basic.py:880(<genexpr>)
                                                                                     54051    0.024    1.756  basic.py:889(<genexpr>)
                                                                                     57164    0.019    0.034  constructor.py:111(<genexpr>)
                                                                                     14332    0.002    0.002  expr.py:325(<genexpr>)
                                                                                       238    0.000    0.000  matrices.py:227(__getitem__)
                                                                                      8395    0.011    0.056  mul.py:1048(<genexpr>)
                                                                                       224    0.000    0.000  numbers.py:1373(__nonzero__)
                                                                                    107353    0.017    0.018  polyoptions.py:267(<genexpr>)
                                                                                     66448    0.014    0.014  polyutils.py:268(<genexpr>)
polytools.py:758(terms)                                                         ->      52    0.000    0.018  fractionfield.py:50(to_sympy)
                                                                                     11673    0.008    0.376  polyclasses.py:291(terms)
                                                                                     14764    0.017    1.460  polynomialring.py:50(to_sympy)
                                                                                      3192    0.002    0.003  pythonintegerring.py:23(to_sympy)
                                                                                      2168    0.002    0.006  pythonrationalfield.py:22(to_sympy)
basic.py:847(has)                                                               ->    3208    0.000    0.000  basic.py:889(<genexpr>)
                                                                                     16456    0.008    1.765  {any}
                                                                                     16456    0.013    0.055  {map}
densearith.py:1652(dmp_div)                                                     ->   17033    0.039    1.826  densearith.py:1386(dmp_rr_div)
                                                                                        32    0.000    0.000  densearith.py:1491(dmp_ff_div)
densearith.py:1386(dmp_rr_div)                                                  ->   31090    0.032    0.076  densearith.py:47(dmp_add_term)
                                                                                     31090    0.035    0.879  densearith.py:170(dmp_mul_term)
                                                                                     31090    0.042    0.532  densearith.py:652(dmp_sub)
                                                                                     20727    0.053    0.152  densearith.py:1336(dup_rr_div)
                                                                                 31169/11628    0.055    0.771  densearith.py:1386(dmp_rr_div)
                                                                                     57709    0.006    0.006  densebasic.py:15(poly_LC)
                                                                                    112580    0.028    0.068  densebasic.py:148(dmp_degree)
                                                                                     31169    0.007    0.008  densebasic.py:653(dmp_zero_p)
                                                                                     27475    0.011    0.011  densebasic.py:677(dmp_zero)
printer.py:222(doprint)                                                         -> 103198/76153    0.168    1.786  printer.py:226(_print)
polyutils.py:173(_parallel_dict_from_expr_no_gens)                              ->  272763    0.030    0.030  basic.py:179(__hash__)
                                                                                     93731    0.078    0.239  cache.py:74(wrapper)
                                                                                    111717    0.049    0.096  exprtools.py:13(decompose_power)
                                                                                    143980    0.049    0.076  operations.py:264(make_args)
                                                                                     49611    0.037    0.042  polyoptions.py:60(getter)
                                                                                     16537    0.056    0.815  polyutils.py:26(_sort_gens)
                                                                                    111717    0.010    0.010  polyutils.py:182(_is_coeff)
                                                                                     16537    0.002    0.002  {len}
                                                                                    111717    0.026    0.036  {method 'add' of 'set' objects}
                                                                                    275007    0.024    0.024  {method 'append' of 'list' objects}
                                                                                     93731    0.007    0.007  {method 'iteritems' of 'dict' objects}
polyutils.py:298(expr_from_dict)                                                ->  365751    0.341    1.545  cache.py:74(wrapper)
                                                                                    339581    0.026    0.026  {method 'append' of 'list' objects}
                                                                                     26170    0.002    0.002  {method 'iteritems' of 'dict' objects}
                                                                                     73843    0.021    0.021  {zip}
ikfast_IKFastSolver.py:8050(checkFinalEquation)                                 ->      18    0.000    0.002  __init__.py:1169(warning)
                                                                                       131    0.000    0.000  basic.py:374(__eq__)
                                                                                      3603    0.004    1.195  basic.py:719(subs)
                                                                                       786    0.002    0.050  cache.py:74(wrapper)
                                                                                        72    0.000    0.000  ctx_mp_python.py:126(<lambda>)
                                                                                        72    0.000    0.000  ctx_mp_python.py:127(<lambda>)
                                                                                       220    0.000    0.000  ctx_mp_python.py:143(__float__)
                                                                                        76    0.000    0.000  ctx_mp_python.py:379(<lambda>)
                                                                                       572    0.001    0.088  decorators.py:72(__sympifyit_wrapper)
                                                                                      2079    0.005    0.179  evalf.py:983(evalf)
                                                                                       105    0.000    0.001  expr.py:176(is_number)
                                                                                        58    0.001    0.020  ikfast_IKFastSolver.py:9384(removecommonexprs)
                                                                                       288    0.000    0.000  numbers.py:197(is_number)
                                                                                       171    0.000    0.001  numbers.py:396(__eq__)
                                                                                       274    0.001    0.008  numbers.py:424(__lt__)
                                                                                        22    0.000    0.001  numbers.py:1049(__rsub__)
                                                                                        13    0.000    0.000  numbers.py:1056(__mul__)
                                                                                        49    0.000    0.000  numbers.py:1084(__eq__)
                                                                                        91    0.000    0.003  numbers.py:1105(__lt__)
                                                                                       135    0.009    0.141  polynomials.py:46(polyroots)
                                                                                        26    0.000    0.002  polytools.py:80(__new__)
                                                                                        26    0.000    0.003  polytools.py:758(terms)
                                                                                        58    0.000    0.016  polytools.py:867(as_dict)
                                                                                       163    0.000    0.001  polytools.py:1620(degree)
                                                                                        84    0.000    0.000  polytools.py:1642(degree_list)
                                                                                       348    0.001    0.015  polytools.py:1678(LC)
                                                                                        61    0.000    0.004  polytools.py:1701(TC)
                                                                                        18    0.000    0.000  relational.py:193(__nonzero__)
                                                                                       211    0.000    0.000  {all}
                                                                                       461    0.000    0.000  {len}
                                                                                       403    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       403    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                        18    0.000    0.050  {method 'join' of 'str' objects}
                                                                                       270    0.001    0.002  {numpy.core.multiarray.array}
                                                                                       163    0.000    0.000  {range}
                                                                                        84    0.000    0.000  {sum}
basic.py:475(__str__)                                                           -> 95175/74721    0.079    1.625  str.py:471(sstr)
printer.py:226(_print)                                                          -> 2201/1888    0.016    1.405  str.py:43(_print_Add)
                                                                                      1029    0.000    0.000  str.py:91(_print_Dummy)
                                                                                 5909/5678    0.009    0.265  str.py:118(_print_Function)
                                                                                        32    0.000    0.000  str.py:128(_print_ImaginaryUnit)
                                                                                         6    0.000    0.000  str.py:131(_print_Infinity)
                                                                                         8    0.000    0.002  str.py:191(_print_Matrix)
                                                                                 7065/5688    0.052    0.802  str.py:197(_print_Mul)
                                                                                        78    0.001    0.003  str.py:267(_print_Poly)
                                                                                 5019/4966    0.009    0.065  str.py:336(_print_Pow)
                                                                                     15049    0.005    0.005  str.py:344(_print_Integer)
                                                                                       365    0.000    0.000  str.py:353(_print_Rational)
                                                                                      4848    0.007    0.070  str.py:362(_print_Float)
                                                                                    108685    0.016    0.016  str.py:434(_print_Symbol)
                                                                                       546    0.000    0.000  str.py:467(_print_Zero)
                                                                                    150840    0.015    0.015  {getattr}
                                                                                    314403    0.087    0.087  {hasattr}
function.py:1368(count_ops)                                                     ->   26612    0.003    0.003  basic.py:622(func)
                                                                                    121145    0.014    0.014  basic.py:647(args)
                                                                                     13094    0.026    0.156  cache.py:74(wrapper)
                                                                                     22795    0.013    0.175  decorators.py:72(__sympifyit_wrapper)
                                                                                      9531    0.006    0.133  expr.py:70(__neg__)
                                                                                     10330    0.002    0.002  function.py:131(func)
                                                                                     57651    0.041    0.230  function.py:1446(isneg)
                                                                                       348    0.000    0.001  numbers.py:337(__neg__)
                                                                                       182    0.000    0.000  numbers.py:647(__neg__)
                                                                                       121    0.000    0.000  numbers.py:1015(__neg__)
                                                                                        10    0.000    0.000  numbers.py:1105(__lt__)
                                                                                       126    0.000    0.000  numbers.py:1419(__neg__)
                                                                                     12370    0.005    0.008  operations.py:264(make_args)
                                                                                        52    0.000    0.000  power.py:91(base)
                                                                                      6104    0.001    0.001  power.py:95(exp)
                                                                                     27619    0.096    0.467  simplify.py:23(fraction)
                                                                                     93542    0.041    0.168  symbol.py:35(__new__)
                                                                                     14150    0.013    0.013  sympify.py:23(sympify)
                                                                                    140352    0.020    0.020  {isinstance}
                                                                                     28214    0.002    0.002  {len}
                                                                                     94938    0.008    0.008  {method 'append' of 'list' objects}
                                                                                     91852    0.008    0.008  {method 'extend' of 'list' objects}
                                                                                    121058    0.013    0.013  {method 'pop' of 'list' objects}
                                                                                     36942    0.005    0.005  {method 'upper' of 'str' objects}
                                                                                     12370    0.008    0.036  {sum}
basic.py:889(<genexpr>)                                                         ->   40803    0.187    1.711  basic.py:871(search)
                                                                                     40803    0.014    0.021  basic.py:882(_match)
power.py:488(_eval_expand_log)                                                  -> 4111/3941    0.019    0.168  add.py:477(_eval_expand_log)
                                                                                    222274    0.030    0.030  basic.py:622(func)
                                                                                    222274    0.026    0.026  basic.py:647(args)
                                                                                    222274    0.215    0.713  cache.py:74(wrapper)
                                                                                    430606    0.029    0.029  expr.py:1857(_eval_expand_log)
                                                                                 9797/9791    0.020    0.042  function.py:467(_eval_expand_log)
                                                                                        19    0.000    0.001  mul.py:609(_eval_expand_log)
                                                                                        15    0.000    0.000  power.py:488(_eval_expand_log)
                                                                                    444548    0.059    0.059  {hasattr}
                                                                                    444548    0.027    0.027  {method 'append' of 'list' objects}
polynomialring.py:50(to_sympy)                                                  ->   19635    0.036    0.477  polyclasses.py:234(to_sympy_dict)
                                                                                     19635    0.168    1.244  polyutils.py:298(expr_from_dict)
add.py:17(flatten)                                                              ->  372395    0.076    0.136  basic.py:179(__hash__)
                                                                                     12240    0.006    0.008  basic.py:374(__eq__)
                                                                                     83153    0.008    0.008  basic.py:647(args)
                                                                                     33865    0.049    0.307  cache.py:74(wrapper)
                                                                                      2327    0.001    0.019  decorators.py:72(__sympifyit_wrapper)
                                                                                      7240    0.008    0.016  function.py:224(is_commutative)
                                                                                    139010    0.140    0.311  mul.py:783(as_coeff_Mul)
                                                                                     30377    0.026    0.095  numbers.py:1028(__add__)
                                                                                       547    0.001    0.003  numbers.py:1035(__radd__)
                                                                                       301    0.000    0.000  numbers.py:1760(__hash__)
                                                                                     67726    0.075    0.136  operations.py:57(_new_rawargs)
                                                                                    153909    0.013    0.013  {method 'append' of 'list' objects}
                                                                                     15427    0.003    0.003  {method 'extend' of 'list' objects}
                                                                                      8623    0.002    0.002  {method 'insert' of 'list' objects}
                                                                                     42047    0.010    0.010  {method 'items' of 'dict' objects}
                                                                                     42047    0.067    0.257  {method 'sort' of 'list' objects}
numbers.py:36(igcd)                                                             ->   53503    0.004    0.004  {abs}
basic.py:871(search)                                                            ->  426728    0.154    0.282  basic.py:675(iter_basic_args)
                                                                                      8300    0.001    0.001  basic.py:880(<genexpr>)
                                                                                     37563    0.006    0.011  basic.py:884(<lambda>)
                                                                                    392373    0.088    0.680  basic.py:886(<lambda>)
                                                                                 426728/40731    0.094    1.364  {any}
                                                                                    429936    0.052    0.052  {isinstance}
polyutils.py:248(_dict_from_expr_if_gens)                                       ->   18151    0.410    1.644  polyutils.py:130(_parallel_dict_from_expr_if_gens)
power.py:252(_eval_expand_basic)                                                -> 4111/3941    0.018    0.154  add.py:427(_eval_expand_basic)
                                                                                    222274    0.027    0.027  basic.py:622(func)
                                                                                    222274    0.024    0.024  basic.py:647(args)
                                                                                    222274    0.195    0.663  cache.py:74(wrapper)
                                                                                    430606    0.030    0.030  expr.py:1842(_eval_expand_basic)
                                                                                 9797/9791    0.019    0.040  function.py:407(_eval_expand_basic)
                                                                                        19    0.000    0.001  mul.py:540(_eval_expand_basic)
                                                                                        15    0.000    0.000  power.py:252(_eval_expand_basic)
                                                                                    444548    0.056    0.056  {hasattr}
                                                                                    444548    0.027    0.027  {method 'append' of 'list' objects}
polyutils.py:130(_parallel_dict_from_expr_if_gens)                              ->  203334    0.021    0.021  basic.py:179(__hash__)
                                                                                       480    0.002    0.135  basic.py:475(__str__)
                                                                                    156507    0.197    0.560  cache.py:74(wrapper)
                                                                                     36496    0.021    0.306  decorators.py:72(__sympifyit_wrapper)
                                                                                    114156    0.057    0.105  exprtools.py:13(decompose_power)
                                                                                       352    0.000    0.006  numbers.py:1028(__add__)
                                                                                       278    0.000    0.000  numbers.py:1393(__neg__)
                                                                                     84500    0.038    0.056  operations.py:264(make_args)
                                                                                    144333    0.034    0.034  polyoptions.py:60(getter)
                                                                                     18151    0.002    0.002  {len}
                                                                                    159832    0.011    0.011  {method 'append' of 'list' objects}
pythonintegerring.py:93(gcd)                                                    ->   90542    1.551    1.553  numbers.py:36(igcd)
simplify.py:1128(powsimp)                                                       ->   28446    0.010    0.148  assumptions.py:365(getit)
                                                                                     28552    0.003    0.003  basic.py:179(__hash__)
                                                                                     13492    0.002    0.002  basic.py:647(args)
                                                                                     72465    0.088    0.640  cache.py:74(wrapper)
                                                                                      5211    0.003    0.223  decorators.py:72(__sympifyit_wrapper)
                                                                                     22229    0.004    0.004  expr.py:963(as_base_exp)
                                                                                      8877    0.002    0.002  numbers.py:201(as_coeff_mul)
                                                                                         8    0.000    0.000  numbers.py:448(__hash__)
                                                                                       850    0.001    0.003  numbers.py:770(__ne__)
                                                                                      5271    0.002    0.004  numbers.py:819(__hash__)
                                                                                      4055    0.005    0.138  numbers.py:1056(__mul__)
                                                                                      1348    0.002    0.008  numbers.py:1091(__ne__)
                                                                                     12222    0.004    0.013  numbers.py:1126(__hash__)
                                                                                       799    0.000    0.000  power.py:91(base)
                                                                                       799    0.000    0.000  power.py:95(exp)
                                                                                      6217    0.005    0.007  power.py:243(as_base_exp)
                                                                                 38305/9307    0.172    1.280  simplify.py:1128(powsimp)
                                                                                     41175    0.035    0.110  symbol.py:127(__new__)
                                                                                      7909    0.019    0.022  sympify.py:23(sympify)
                                                                                      8044    0.001    0.001  {len}
                                                                                     46817    0.004    0.004  {method 'append' of 'list' objects}
                                                                                      7909    0.001    0.001  {method 'items' of 'dict' objects}
                                                                                     19121    0.002    0.002  {method 'iteritems' of 'dict' objects}
                                                                                     33187    0.011    0.033  {method 'setdefault' of 'dict' objects}
ikfast_IKFastSolver.py:9256(groupTerms)                                         ->     344    0.001    0.005  basic.py:475(__str__)
                                                                                       816    0.000    0.000  basic.py:647(args)
                                                                                     12269    0.006    0.123  decorators.py:72(__sympifyit_wrapper)
                                                                                      2742    0.004    0.013  expr.py:176(is_number)
                                                                                       563    0.001    0.003  iterables.py:435(numbered_symbols)
                                                                                      1383    0.000    0.000  numbers.py:197(is_number)
                                                                                      1050    0.001    0.014  numbers.py:1028(__add__)
                                                                                       478    0.001    0.004  numbers.py:1056(__mul__)
                                                                                         9    0.000    0.000  numbers.py:1063(__rmul__)
                                                                                      1122    0.003    1.211  polytools.py:80(__new__)
                                                                                      1050    0.003    0.166  polytools.py:758(terms)
                                                                                      2329    0.000    0.000  symbol.py:96(is_number)
                                                                                       816    0.000    0.000  {all}
                                                                                       344    0.000    0.000  {len}
                                                                                       563    0.000    0.000  {method 'append' of 'list' objects}
                                                                                      2336    0.000    0.000  {sum}
expr.py:93(__mul__)                                                             -> 85243/84457    0.135    1.480  cache.py:74(wrapper)
expr.py:761(as_coefficient)                                                     ->    4227    0.028    1.523  expr.py:1062(extract_multiplicatively)
polytools.py:3003(cancel)                                                       ->    2128    0.002    0.037  decorators.py:72(__sympifyit_wrapper)
                                                                                      2128    0.006    1.388  polyclasses.py:623(cancel)
                                                                                      2128    0.011    0.024  polytools.py:355(_unify)
                                                                                      4256    0.003    0.011  polytools.py:393(per)
                                                                                      4256    0.002    0.004  pythonintegerring.py:23(to_sympy)
                                                                                      2128    0.000    0.000  ring.py:11(get_ring)
                                                                                      2128    0.000    0.000  {hasattr}
mul.py:943(_eval_is_even)                                                       -> 11688/6541    0.010    1.468  assumptions.py:365(getit)
numbers.py:1056(__mul__)                                                        -> 60772/59112    0.037    0.937  decorators.py:72(__sympifyit_wrapper)
                                                                                    320240    0.090    0.092  numbers.py:989(__new__)
                                                                                    756403    0.142    0.142  {isinstance}
{method 'sort' of 'list' objects}                                               ->     183    0.000    0.000  <string>:2(__eq__)
                                                                                    153866    0.052    0.191  basic.py:179(__hash__)
                                                                                    200506    0.040    0.040  compatibility.py:116(__init__)
                                                                                    154429    0.088    0.901  compatibility.py:118(__lt__)
                                                                                       119    0.000    0.000  ctx_mp_python.py:177(__lt__)
                                                                                       813    0.000    0.018  ikfast_IKFastSolver.py:884(<lambda>)
                                                                                         6    0.000    0.000  ikfast_IKFastSolver.py:6534(<lambda>)
                                                                                       173    0.000    0.000  ikfast_IKFastSolver.py:6819(<lambda>)
                                                                                      4456    0.000    0.000  ikfast_IKFastSolver.py:8262(<lambda>)
                                                                                        31    0.000    0.000  ikfast_IKFastSolver.py:8762(<lambda>)
                                                                                        24    0.000    0.000  ikfast_IKFastSolver.py:8845(<lambda>)
                                                                                        53    0.000    0.000  ikfast_IKFastSolver.py:8895(<lambda>)
                                                                                        43    0.000    0.000  numbers.py:1760(__hash__)
                                                                                       148    0.000    0.001  polynomials.py:182(<lambda>)
ikfast_generator_cpp.py:108(evalNumbers)                                        ->    9829    0.001    0.001  basic.py:647(args)
                                                                                      3152    0.004    0.932  cache.py:74(wrapper)
                                                                                     12404    0.007    0.266  decorators.py:72(__sympifyit_wrapper)
                                                                                      4755    0.011    0.053  evalf.py:983(evalf)
                                                                                     10624    0.012    0.046  expr.py:176(is_number)
                                                                                      3098    0.001    0.001  function.py:131(func)
                                                                                 22503/4709    0.038    1.269  ikfast_generator_cpp.py:108(evalNumbers)
                                                                                      4334    0.000    0.000  numbers.py:197(is_number)
                                                                                        40    0.000    0.000  numbers.py:424(__lt__)
                                                                                        14    0.000    0.000  numbers.py:789(__lt__)
                                                                                      4707    0.005    0.060  numbers.py:1056(__mul__)
                                                                                       450    0.000    0.000  numbers.py:1098(__gt__)
                                                                                        67    0.000    0.000  numbers.py:1105(__lt__)
                                                                                       571    0.000    0.000  power.py:91(base)
                                                                                      1142    0.000    0.000  power.py:95(exp)
                                                                                     10028    0.001    0.001  symbol.py:96(is_number)
                                                                                       571    0.000    0.001  {abs}
                                                                                      2024    0.000    0.000  {len}
                                                                                      9305    0.001    0.001  {method 'append' of 'list' objects}
                                                                                      3099    0.001    0.001  {range}
str.py:43(_print_Add)                                                           ->   10377    0.009    0.028  precedence.py:57(precedence)
                                                                                 8176/6654    0.013    0.746  printer.py:226(_print)
                                                                                      2201    0.004    0.719  printer.py:255(_as_ordered_terms)
                                                                                      8176    0.001    0.001  {method 'extend' of 'list' objects}
                                                                                      2201    0.001    0.001  {method 'join' of 'str' objects}
                                                                                      2201    0.001    0.001  {method 'pop' of 'list' objects}
                                                                                      8176    0.002    0.002  {method 'startswith' of 'str' objects}
polyclasses.py:623(cancel)                                                      ->    2128    0.008    1.375  euclidtools.py:1814(dmp_cancel)
                                                                                      2128    0.001    0.001  polyclasses.py:171(unify)
                                                                                      4256    0.003    0.006  polyclasses.py:197(per)
{hasattr}                                                                       ->      72    0.000    0.000  ctx_mp_python.py:126(<lambda>)
                                                                                        72    0.000    0.000  ctx_mp_python.py:127(<lambda>)
                                                                                       152    0.000    0.000  ctx_mp_python.py:378(<lambda>)
                                                                                       224    0.000    0.000  ctx_mp_python.py:379(<lambda>)
                                                                                         9    0.000    0.000  matrices.py:2185(__getattr__)
evalf.py:1053(_evalf)                                                           ->    4102    0.000    0.000  evalf.py:1060(_eval_evalf)
                                                                                      1540    0.007    0.028  function.py:236(_eval_evalf)
                                                                                 2259/2163    0.003    0.791  mul.py:474(_eval_evalf)
                                                                                      1764    0.002    0.010  numbers.py:155(_eval_evalf)
                                                                                       191    0.000    0.000  numbers.py:1386(_eval_evalf)
                                                                                       630    0.000    0.000  numbers.py:1412(_eval_evalf)
                                                                                   124/100    0.000    0.195  operations.py:261(_eval_evalf)
                                                                                   935/811    0.003    0.812  power.py:585(_eval_evalf)
basic.py:880(<genexpr>)                                                         -> 389133/90655    0.277    1.322  basic.py:871(search)
{sorted}                                                                        ->     276    0.000    0.035  decorators.py:72(__sympifyit_wrapper)
                                                                                     11396    0.011    0.035  expr.py:271(key)
                                                                                     19496    0.008    0.289  expr.py:307(<lambda>)
                                                                                        23    0.000    0.000  iterables.py:659(<lambda>)
                                                                                         3    0.000    0.000  logic.py:94(__hash__)
                                                                                 9417/8250    0.006    0.245  misc.py:5(default_sort_key)
                                                                                       123    0.000    0.001  numbers.py:396(__eq__)
                                                                                        68    0.000    0.001  numbers.py:424(__lt__)
                                                                                       108    0.000    0.000  numbers.py:751(__eq__)
                                                                                        24    0.000    0.000  numbers.py:789(__lt__)
                                                                                        26    0.000    0.000  numbers.py:1084(__eq__)
                                                                                         8    0.000    0.000  numbers.py:1105(__lt__)
                                                                                     49993    0.138    0.665  polyutils.py:38(order_key)
                                                                                         3    0.000    0.000  polyutils.py:118(order_if_multiple_key)
                                                                                       276    0.000    0.001  relational.py:193(__nonzero__)
                                                                                       493    0.001    0.013  solvers.py:448(<lambda>)
expr.py:450(count_ops)                                                          ->   11280    0.227    1.313  function.py:1368(count_ops)
power.py:334(_eval_expand_mul)                                                  -> 1827/1699    0.009    0.563  add.py:457(_eval_expand_mul)
                                                                                    109848    0.016    0.016  basic.py:622(func)
                                                                                    109848    0.013    0.013  basic.py:647(args)
                                                                                    109848    0.097    0.331  cache.py:74(wrapper)
                                                                                    213278    0.015    0.015  expr.py:1851(_eval_expand_mul)
                                                                                 4575/4572    0.009    0.021  function.py:443(_eval_expand_mul)
                                                                                         6    0.000    0.001  mul.py:570(_eval_expand_mul)
                                                                                        10    0.000    0.000  power.py:334(_eval_expand_mul)
                                                                                    219696    0.032    0.032  {hasattr}
                                                                                    219696    0.015    0.015  {method 'append' of 'list' objects}
numbers.py:751(__eq__)                                                          ->  123390    0.054    0.317  assumptions.py:365(getit)
                                                                                       612    0.001    0.005  evalf.py:983(evalf)
                                                                                       612    0.000    0.000  libmpf.py:511(mpf_eq)
                                                                                       612    0.000    0.000  numbers.py:982(_as_mpf_val)
                                                                                    383536    0.096    0.430  sympify.py:161(_sympify)
                                                                                   1354090    0.165    0.165  {isinstance}
operations.py:261(_eval_evalf)                                                  ->    4143    0.000    0.000  basic.py:622(func)
                                                                                      4143    0.000    0.000  basic.py:647(args)
                                                                                      4143    0.007    0.056  cache.py:74(wrapper)
                                                                                 10501/4206    0.005    1.260  evalf.py:1053(_evalf)
basic.py:1214(_eval_subs)                                                       ->  383453    0.190    0.423  basic.py:374(__eq__)
                                                                                     42014    0.032    0.093  numbers.py:396(__eq__)
                                                                                     64556    0.056    0.147  numbers.py:751(__eq__)
                                                                                    117418    0.095    0.410  numbers.py:1084(__eq__)
                                                                                      1390    0.001    0.002  numbers.py:1693(__eq__)
complexes.py:39(eval)                                                           ->    4015    0.001    0.024  assumptions.py:365(getit)
                                                                                      2006    0.008    0.215  cache.py:74(wrapper)
                                                                                         1    0.000    0.000  core.py:220(__cmp__)
                                                                                      2006    0.001    0.995  expr.py:761(as_coefficient)
                                                                                         1    0.000    0.000  function.py:131(func)
                                                                                      2006    0.001    0.001  operations.py:264(make_args)
                                                                                      4012    0.000    0.000  {len}
                                                                                      2006    0.000    0.000  {method 'append' of 'list' objects}
densebasic.py:921(dmp_from_dict)                                                ->  217954    0.144    0.378  densebasic.py:264(dmp_strip)
                                                                                     49537    0.024    0.024  densebasic.py:677(dmp_zero)
                                                                                     83561    0.129    0.221  densebasic.py:865(dup_from_dict)
                                                                                 254596/54830    0.380    0.976  densebasic.py:921(dmp_from_dict)
                                                                                    217954    0.025    0.025  {max}
                                                                                    304069    0.021    0.021  {method 'append' of 'list' objects}
                                                                                    304069    0.020    0.020  {method 'get' of 'dict' objects}
                                                                                    217954    0.016    0.016  {method 'iteritems' of 'dict' objects}
                                                                                    217954    0.013    0.013  {method 'iterkeys' of 'dict' objects}
power.py:585(_eval_evalf)                                                       ->      36    0.000    0.000  assumptions.py:365(getit)
                                                                                       968    0.001    0.004  cache.py:74(wrapper)
                                                                                        72    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                  1044/864    0.000    0.394  evalf.py:1053(_evalf)
                                                                                        72    0.000    0.001  expr.py:240(conjugate)
                                                                                       968    0.009    1.049  expr.py:1869(expand)
                                                                                        40    0.000    0.001  numbers.py:424(__lt__)
                                                                                       928    0.001    0.001  numbers.py:1105(__lt__)
                                                                                        36    0.000    0.000  numbers.py:1419(__neg__)
                                                                                       968    0.001    0.001  power.py:243(as_base_exp)
matrices.py:757(row)                                                            ->    2016    0.001    0.001  matrices.py:227(__getitem__)
                                                                                      2016    0.002    0.005  matrices.py:276(__setitem__)
                                                                                      1506    0.001    0.029  solvers.py:910(<lambda>)
                                                                                       510    0.001    1.119  solvers.py:918(<lambda>)
                                                                                       672    0.000    0.000  {range}
numbers.py:1084(__eq__)                                                         ->  228965    0.221    0.858  numbers.py:751(__eq__)
                                                                                    507791    0.090    0.090  {isinstance}
mul.py:775(as_numer_denom)                                                      -> 1157/1145    0.007    0.080  add.py:260(as_numer_denom)
                                                                                     58557    0.007    0.007  basic.py:647(args)
                                                                                    117114    0.125    0.544  cache.py:74(wrapper)
                                                                                      5150    0.001    0.001  expr.py:1048(as_numer_denom)
                                                                                     68039    0.009    0.009  expr.py:2008(as_numer_denom)
                                                                                     32774    0.021    0.037  numbers.py:907(as_numer_denom)
                                                                                     18635    0.003    0.003  numbers.py:1255(as_numer_denom)
                                                                                 29341/29232    0.049    0.312  power.py:616(as_numer_denom)
                                                                                    310192    0.018    0.018  {method 'append' of 'list' objects}
solvers.py:918(<lambda>)                                                        ->     661    0.000    0.027  decorators.py:72(__sympifyit_wrapper)
                                                                                       510    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        70    0.000    0.000  numbers.py:1042(__sub__)
                                                                                        12    0.000    0.000  numbers.py:1049(__rsub__)
                                                                                       277    0.000    0.004  numbers.py:1056(__mul__)
                                                                                       510    0.004    1.086  simplify.py:1564(simplify)
cse_main.py:25(preprocess_for_cse)                                              ->    2680    0.026    1.047  cse_opts.py:38(sub_pre)
cse_opts.py:38(sub_pre)                                                         ->    1948    0.000    0.000  basic.py:647(args)
                                                                                      1260    0.001    0.859  basic.py:719(subs)
                                                                                     10456    0.015    0.094  cache.py:74(wrapper)
                                                                                     39149    0.008    0.017  cse_opts.py:9(assumed)
                                                                                      2680    0.001    0.001  iterables.py:166(__init__)
                                                                                     28340    0.007    0.042  iterables.py:204(next)
                                                                                      2680    0.000    0.000  iterables.py:207(__iter__)
                                                                                      2291    0.002    0.006  numbers.py:337(__neg__)
                                                                                      1948    0.000    0.000  {len}
                                                                                      7121    0.001    0.001  {method 'append' of 'list' objects}
numbers.py:650(__mul__)                                                         ->   32047    0.063    0.107  cache.py:74(wrapper)
                                                                                 49907/48753    0.026    0.851  decorators.py:72(__sympifyit_wrapper)
                                                                                    144124    0.016    0.016  {isinstance}
__init__.py:1267(_log)                                                          ->    1311    0.005    0.008  __init__.py:1233(findCaller)
                                                                                      1311    0.002    0.031  __init__.py:1254(makeRecord)
                                                                                      1311    0.002    0.972  __init__.py:1288(handle)
mul.py:521(_expandsums)                                                         ->    6832    0.001    0.001  basic.py:647(args)
                                                                                     45747    0.063    0.950  cache.py:74(wrapper)
                                                                                 4012/3636    0.005    0.265  mul.py:521(_expandsums)
                                                                                      2006    0.001    0.002  operations.py:264(make_args)
                                                                                      8838    0.001    0.001  {len}
__init__.py:1288(handle)                                                        ->    1311    0.001    0.001  __init__.py:607(filter)
                                                                                      1311    0.005    0.970  __init__.py:1320(callHandlers)
__init__.py:1320(callHandlers)                                                  ->    2622    0.004    0.965  __init__.py:746(handle)
compatibility.py:109(cmp_to_key)                                                ->   95534    0.161    0.161  compatibility.py:115(K)
__init__.py:746(handle)                                                         ->    2622    0.001    0.001  __init__.py:607(filter)
                                                                                      2622    0.002    0.009  __init__.py:703(acquire)
                                                                                      2622    0.001    0.005  __init__.py:710(release)
                                                                                      1311    0.002    0.459  __init__.py:849(emit)
                                                                                      1311    0.002    0.487  __init__.py:948(emit)
ikfast.py:279(Pow_eval_subs)                                                    -> 3859/3182    0.014    0.229  add.py:334(_eval_subs)
                                                                                     53548    0.028    0.082  basic.py:374(__eq__)
                                                                                    124741    0.013    0.013  basic.py:622(func)
                                                                                     82054    0.027    0.212  basic.py:1214(_eval_subs)
                                                                                     45187    0.048    0.168  cache.py:74(wrapper)
                                                                                        29    0.000    0.003  cse_opts.py:32(_eval_subs)
                                                                                        36    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                     10844    0.001    0.001  function.py:131(func)
                                                                                 4163/4070    0.007    0.204  function.py:135(_eval_subs)
                                                                                       188    0.000    0.011  ikfast.py:279(Pow_eval_subs)
                                                                                        31    0.000    0.003  mul.py:952(_eval_subs)
                                                                                        24    0.000    0.000  numbers.py:201(as_coeff_mul)
                                                                                     61019    0.009    0.009  power.py:91(base)
                                                                                     45211    0.006    0.006  power.py:95(exp)
                                                                                        25    0.000    0.001  trigonometric.py:731(_eval_subs)
                                                                                        25    0.000    0.001  trigonometric.py:901(_eval_subs)
__init__.py:849(emit)                                                           ->    2622    0.002    0.904  __init__.py:723(format)
                                                                                      2622    0.004    0.025  __init__.py:838(flush)
                                                                                        60    0.000    0.000  {getattr}
                                                                                      2622    0.001    0.001  {isinstance}
                                                                                      2622    0.008    0.008  {method 'write' of 'file' objects}
{isinstance}                                                                    ->     257    0.001    0.002  abc.py:128(__instancecheck__)
__init__.py:723(format)                                                         ->    2622    0.010    0.902  __init__.py:452(format)
__init__.py:452(format)                                                         ->    2622    0.007    0.889  __init__.py:312(getMessage)
                                                                                      2622    0.002    0.002  __init__.py:446(usesTime)
compatibility.py:118(__lt__)                                                    ->  154429    0.215    0.812  basic.py:210(compare)
__init__.py:312(getMessage)                                                     ->    1814    0.004    0.268  basic.py:471(__repr__)
                                                                                       370    0.001    0.613  basic.py:475(__str__)
                                                                                        46    0.000    0.000  ikfast_IKFastSolver.py:123(__str__)
                                                                                         6    0.000    0.000  matrices.py:508(__str__)
                                                                                        98    0.000    0.000  numbers.py:162(__float__)
                                                                                        12    0.000    0.000  numeric.py:1835(array_str)
                                                                                      2622    0.000    0.000  {isinstance}
densearith.py:170(dmp_mul_term)                                                 ->   39738    0.077    0.814  densearith.py:812(dmp_mul)
                                                                                     62180    0.014    0.017  densebasic.py:653(dmp_zero_p)
                                                                                     31090    0.009    0.014  densebasic.py:781(dmp_zeros)
mul.py:878(_eval_is_positive)                                                   -> 101805/67499    0.021    0.826  assumptions.py:365(getit)
                                                                                     11698    0.001    0.001  basic.py:647(args)
                                                                                     11429    0.008    0.012  operations.py:57(_new_rawargs)
                                                                                     11694    0.001    0.001  {len}
euclidtools.py:1134(_dup_zz_gcd_interpolate)                                    ->    1191    0.000    0.000  {method 'insert' of 'list' objects}
ikfast_IKFastSolver.py:407(equal)                                               ->   15078    0.009    0.033  basic.py:374(__eq__)
                                                                                     15493    0.009    0.634  decorators.py:72(__sympifyit_wrapper)
                                                                                     16350    0.011    0.087  numbers.py:1042(__sub__)
                                                                                      2616    0.002    0.022  numbers.py:1049(__rsub__)
                                                                                     20179    0.010    0.032  numbers.py:1084(__eq__)
                                                                                     70514    0.011    0.011  {isinstance}
densearith.py:1705(dmp_quo)                                                     ->   14960    0.007    0.840  densearith.py:1652(dmp_div)
expr.py:84(__sub__)                                                             ->   10664    0.022    0.259  add.py:517(__neg__)
                                                                                     31868    0.046    0.462  cache.py:74(wrapper)
                                                                                     12134    0.007    0.077  expr.py:70(__neg__)
                                                                                      2535    0.002    0.006  numbers.py:337(__neg__)
                                                                                      3418    0.002    0.007  numbers.py:647(__neg__)
                                                                                        40    0.000    0.000  numbers.py:1015(__neg__)
                                                                                      2069    0.000    0.000  numbers.py:1349(__neg__)
                                                                                       515    0.000    0.000  numbers.py:1393(__neg__)
                                                                                       493    0.000    0.000  numbers.py:1419(__neg__)
polyutils.py:26(_sort_gens)                                                     ->   33738    0.031    0.035  polyoptions.py:60(getter)
                                                                                     16869    0.011    0.013  polyoptions.py:689(build_options)
                                                                                     16869    0.056    0.721  {sorted}
expr.py:309(as_ordered_terms)                                                   ->    2936    0.013    0.014  expr.py:245(_parse_order)
                                                                                 2936/2611    0.090    0.759  expr.py:344(as_terms)
                                                                                      2936    0.002    0.004  {any}
                                                                                      2936    0.009    0.044  {sorted}
densearith.py:812(dmp_mul)                                                      ->  162511    0.040    0.100  densearith.py:571(dmp_add)
                                                                                    114761    0.148    0.223  densearith.py:774(dup_mul)
                                                                                 162511/46328    0.176    0.556  densearith.py:812(dmp_mul)
                                                                                 5897/5889    0.005    0.017  densearith.py:898(dmp_sqr)
                                                                                    152261    0.039    0.088  densebasic.py:148(dmp_degree)
                                                                                     61621    0.037    0.066  densebasic.py:264(dmp_strip)
                                                                                    142154    0.035    0.035  densebasic.py:677(dmp_zero)
                                                                                    142154    0.014    0.014  {max}
                                                                                    142154    0.008    0.008  {method 'append' of 'list' objects}
                                                                                    142154    0.012    0.012  {min}
basic.py:210(compare)                                                           ->   41400    0.005    0.005  basic.py:204(_hashable_content)
                                                                                 20350/19587    0.036    0.071  basic.py:210(compare)
                                                                                       176    0.000    0.000  numbers.py:328(_hashable_content)
                                                                                        62    0.000    0.000  numbers.py:638(_hashable_content)
                                                                                    161066    0.025    0.025  symbol.py:69(_hashable_content)
                                                                                       332    0.000    0.000  symbol.py:137(_hashable_content)
                                                                                    438031    0.087    0.398  {cmp}
                                                                                    181923    0.028    0.028  {isinstance}
                                                                                    203036    0.012    0.012  {len}
                                                                                    100983    0.094    0.094  {zip}
add.py:296(_eval_is_positive)                                                   -> 21169/10297    0.012    0.784  assumptions.py:365(getit)
                                                                                      3529    0.009    0.030  cache.py:74(wrapper)
str.py:197(_print_Mul)                                                          ->   10938    0.003    0.003  assumptions.py:365(getit)
                                                                                     16149    0.015    0.035  cache.py:74(wrapper)
                                                                                      7065    0.014    0.322  expr.py:282(as_ordered_factors)
                                                                                      1845    0.002    0.004  numbers.py:647(__neg__)
                                                                                       298    0.000    0.000  numbers.py:1015(__neg__)
                                                                                      1249    0.000    0.000  numbers.py:1419(__neg__)
                                                                                      7065    0.008    0.015  operations.py:57(_new_rawargs)
                                                                                         2    0.000    0.000  power.py:91(base)
                                                                                      9586    0.001    0.001  power.py:95(exp)
                                                                                      7065    0.001    0.001  printer.py:218(order)
                                                                                     22496    0.001    0.001  {len}
                                                                                 14130/11376    0.009    0.413  {map}
                                                                                     23379    0.002    0.002  {method 'append' of 'list' objects}
                                                                                      7065    0.002    0.002  {method 'join' of 'str' objects}
densebasic.py:653(dmp_zero_p)                                                   -> 4120808    0.143    0.143  {len}
expr.py:344(as_terms)                                                           ->   47805    0.006    0.006  basic.py:179(__hash__)
                                                                                     11396    0.024    0.388  expr.py:131(__complex__)
                                                                                      8788    0.012    0.027  expr.py:176(is_number)
                                                                                      1275    0.000    0.000  expr.py:1823(as_coeff_Mul)
                                                                                     19196    0.010    0.020  exprtools.py:13(decompose_power)
                                                                                      1004    0.001    0.002  function.py:224(is_commutative)
                                                                                      9330    0.012    0.026  mul.py:783(as_coeff_Mul)
                                                                                       791    0.000    0.000  numbers.py:230(as_coeff_Mul)
                                                                                     13541    0.007    0.010  operations.py:264(make_args)
                                                                                     10408    0.001    0.001  symbol.py:96(is_number)
                                                                                      2936    0.000    0.000  {len}
                                                                                     19196    0.005    0.007  {method 'add' of 'set' objects}
                                                                                     22792    0.002    0.002  {method 'append' of 'list' objects}
                                                                                     11396    0.001    0.001  {method 'iteritems' of 'dict' objects}
                                                                                 2936/2611    0.011    0.255  {sorted}
ikfast_IKFastSolver.py:3147(buildEquationsFromPositions)                        ->      12    0.000    0.013  expr.py:1869(expand)
                                                                                         2    0.000    0.010  ikfast_IKFastSolver.py:400(multiplyMatrix)
                                                                                        21    0.000    0.004  ikfast_IKFastSolver.py:618(has)
                                                                                        12    0.000    0.006  ikfast_IKFastSolver.py:2438(RoundEquationTerms)
                                                                                         1    0.000    0.719  ikfast_IKFastSolver.py:3058(buildEquationsFromTwoSides)
                                                                                        12    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        12    0.000    0.000  matrices.py:276(__setitem__)
                                                                                         7    0.000    0.006  matrices.py:407(__mul__)
                                                                                         4    0.000    0.000  matrices.py:961(extract)
                                                                                         1    0.000    0.000  matrices.py:2626(eye)
                                                                                         5    0.000    0.000  {len}
                                                                                         4    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         4    0.000    0.000  {range}
                                                                                         7    0.000    0.000  {sum}
polyclasses.py:146(__init__)                                                    ->   28418    0.021    0.037  densebasic.py:758(dmp_ground)
                                                                                     28358    0.093    0.599  densebasic.py:921(dmp_from_dict)
                                                                                     28418    0.021    0.040  domain.py:69(convert)
numbers.py:396(__eq__)                                                          ->  163981    0.050    0.050  libmpf.py:511(mpf_eq)
                                                                                    161055    0.019    0.019  numbers.py:288(_as_mpf_val)
                                                                                      2926    0.001    0.002  numbers.py:982(_as_mpf_val)
                                                                                    221037    0.060    0.291  sympify.py:161(_sympify)
                                                                                    663111    0.093    0.093  {isinstance}
ikfast_IKFastSolver.py:9167(isValidSolution)                                    ->   58204    0.006    0.006  basic.py:647(args)
                                                                                     17920    0.026    0.106  cache.py:74(wrapper)
                                                                                      2218    0.001    0.016  decorators.py:72(__sympifyit_wrapper)
                                                                                      5532    0.013    0.054  evalf.py:983(evalf)
                                                                                     35226    0.035    0.146  expr.py:176(is_number)
                                                                                 45167/8365    0.106    0.649  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                     26682    0.003    0.003  numbers.py:197(is_number)
                                                                                     12388    0.013    0.032  numbers.py:294(__new__)
                                                                                      4243    0.003    0.006  numbers.py:1028(__add__)
                                                                                      5927    0.005    0.030  numbers.py:1035(__radd__)
                                                                                     52003    0.005    0.005  symbol.py:96(is_number)
                                                                                     45815    0.005    0.005  {all}
                                                                                     17920    0.008    0.075  {math.isinf}
                                                                                     17919    0.006    0.053  {math.isnan}
                                                                                     12388    0.008    0.087  {sum}
polyoptions.py:689(build_options)                                               ->   34697    0.314    0.667  polyoptions.py:120(__init__)
                                                                                     69941    0.007    0.007  {len}
add.py:282(_eval_is_odd)                                                        -> 15527/15442    0.004    0.722  assumptions.py:365(getit)
                                                                                      3505    0.000    0.000  basic.py:647(args)
                                                                                        47    0.000    0.000  operations.py:57(_new_rawargs)
printer.py:255(_as_ordered_terms)                                               ->    2201    0.009    0.715  expr.py:309(as_ordered_terms)
                                                                                      2201    0.000    0.000  printer.py:218(order)
ikfast_IKFastSolver.py:3058(buildEquationsFromTwoSides)                         ->      10    0.000    0.000  basic.py:647(args)
                                                                                        27    0.000    0.003  decorators.py:72(__sympifyit_wrapper)
                                                                                        37    0.000    0.000  expr.py:176(is_number)
                                                                                         2    0.000    0.002  expr.py:1869(expand)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:625(gen_trigsubs)
                                                                                        10    0.000    0.278  ikfast_IKFastSolver.py:635(trigsimp_new)
                                                                                        10    0.000    0.001  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                         1    0.000    0.001  ikfast_IKFastSolver.py:881(sortComplexity)
                                                                                         8    0.000    0.421  ikfast_IKFastSolver.py:5899(SimplifyTransform)
                                                                                         8    0.000    0.012  ikfast_IKFastSolver.py:6298(CheckExpressionUnique)
                                                                                        36    0.000    0.000  matrices.py:227(__getitem__)
                                                                                         6    0.000    0.000  matrices.py:382(shape)
                                                                                         3    0.000    0.000  numbers.py:197(is_number)
                                                                                         4    0.000    0.000  numbers.py:1028(__add__)
                                                                                         1    0.000    0.001  numbers.py:1042(__sub__)
                                                                                         8    0.000    0.000  {len}
                                                                                         8    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         8    0.000    0.000  {range}
polyclasses.py:234(to_sympy_dict)                                               ->   25763    0.057    0.386  densebasic.py:1014(dmp_to_dict)
                                                                                      3971    0.004    0.211  polynomialring.py:50(to_sympy)
                                                                                     23608    0.011    0.019  pythonintegerring.py:23(to_sympy)
                                                                                     40286    0.039    0.110  pythonrationalfield.py:22(to_sympy)
                                                                                     25763    0.002    0.002  {method 'iteritems' of 'dict' objects}
ikfast_IKFastSolver.py:9384(removecommonexprs)                                  ->    1996    0.000    0.000  basic.py:647(args)
                                                                                      1197    0.001    0.004  cache.py:74(wrapper)
                                                                                       661    0.000    0.017  decorators.py:72(__sympifyit_wrapper)
                                                                                      3248    0.004    0.014  expr.py:176(is_number)
                                                                                      1462    0.014    0.523  expr.py:1869(expand)
                                                                                      2364    0.001    0.001  ikfast_IKFastSolver.py:9319(frontnumbers)
                                                                                       980    0.000    0.000  numbers.py:197(is_number)
                                                                                       575    0.000    0.001  numbers.py:1056(__mul__)
                                                                                        28    0.000    0.000  numbers.py:1063(__rmul__)
                                                                                      2924    0.001    0.002  numbers.py:1084(__eq__)
                                                                                      2369    0.001    0.002  numbers.py:1091(__ne__)
                                                                                       693    0.000    0.001  numbers.py:1098(__gt__)
                                                                                        25    0.000    0.000  numbers.py:1105(__lt__)
                                                                                        12    0.000    0.012  polytools.py:5187(cancel)
                                                                                      2381    0.008    0.029  simplify.py:23(fraction)
                                                                                       709    0.000    0.000  symbol.py:96(is_number)
                                                                                       982    0.000    0.000  {len}
                                                                                       988    0.000    0.000  {range}
                                                                                      4840    0.003    0.007  {reduce}
                                                                                      2444    0.003    0.073  {sum}
assumptions.py:315(_learn_new_facts)                                            ->  340079    0.402    0.474  facts.py:821(deduce_all_facts)
                                                                                     54987    0.008    0.008  {method 'copy' of 'dict' objects}
basic.py:886(<lambda>)                                                          ->   25460    0.015    0.048  basic.py:1050(matches)
                                                                                    366913    0.101    0.544  basic.py:1210(matches)
polyoptions.py:120(__init__)                                                    ->  630522    0.038    0.038  polyoptions.py:37(postprocess)
                                                                                       498    0.000    0.000  polyoptions.py:49(preprocess)
                                                                                     18157    0.081    0.240  polyoptions.py:256(preprocess)
                                                                                       840    0.000    0.001  polyoptions.py:389(preprocess)
                                                                                     35029    0.019    0.020  polyoptions.py:443(postprocess)
                                                                                     35029    0.008    0.008  polyoptions.py:459(postprocess)
                                                                                     35029    0.008    0.008  polyoptions.py:474(postprocess)
                                                                                       530    0.000    0.000  polyoptions.py:490(preprocess)
                                                                                     35029    0.007    0.007  polyoptions.py:507(postprocess)
                                                                                     35029    0.007    0.007  polyoptions.py:531(postprocess)
                                                                                     35029    0.009    0.009  polyoptions.py:597(postprocess)
                                                                                     20027    0.005    0.005  {issubclass}
                                                                                     24745    0.003    0.003  {method 'get' of 'dict' objects}
                                                                                     35029    0.004    0.004  {method 'iteritems' of 'dict' objects}
                                                                                     35029    0.006    0.006  {method 'keys' of 'dict' objects}
polyutils.py:38(order_key)                                                      ->   49993    0.118    0.480  basic.py:475(__str__)
                                                                                     49993    0.011    0.011  {method 'groups' of '_sre.SRE_Match' objects}
                                                                                     49993    0.037    0.037  {method 'match' of '_sre.SRE_Pattern' objects}
rationaltools.py:6(together)                                                    ->    1437    0.004    0.647  rationaltools.py:57(_together)
                                                                                      1437    0.003    0.003  sympify.py:23(sympify)
{method 'append' of 'list' objects}                                             ->
rationaltools.py:57(_together)                                                  ->    3651    0.000    0.000  basic.py:647(args)
                                                                                      6208    0.006    0.025  cache.py:74(wrapper)
                                                                                      1388    0.010    0.597  exprtools.py:366(gcd_terms)
                                                                                      1388    0.001    0.001  operations.py:264(make_args)
                                                                                      2557    0.000    0.000  power.py:91(base)
                                                                                      2557    0.000    0.000  power.py:95(exp)
                                                                                 12609/9553    0.007    0.084  rationaltools.py:57(_together)
                                                                                     18082    0.002    0.002  {isinstance}
                                                                                 1388/1200    0.002    0.089  {map}
basic.py:647(args)                                                              ->
solvers.py:752(solve_linear)                                                    ->     764    0.007    0.113  add.py:260(as_numer_denom)
                                                                                       398    0.001    0.010  add.py:517(__neg__)
                                                                                      1921    0.000    0.000  basic.py:179(__hash__)
                                                                                      2760    0.003    0.014  basic.py:580(free_symbols)
                                                                                       958    0.001    0.059  basic.py:719(subs)
                                                                                      1937    0.001    0.065  decorators.py:72(__sympifyit_wrapper)
                                                                                       277    0.000    0.003  expr.py:70(__neg__)
                                                                                       963    0.002    0.263  expr.py:1831(diff)
                                                                                       109    0.000    0.000  expr.py:2008(as_numer_denom)
                                                                                       979    0.001    0.062  function.py:1271(expand_mul)
                                                                                       106    0.000    0.003  mul.py:775(as_numer_denom)
                                                                                        36    0.000    0.000  numbers.py:1015(__neg__)
                                                                                       215    0.000    0.000  numbers.py:1349(__neg__)
                                                                                        22    0.000    0.000  numbers.py:1393(__neg__)
                                                                                        10    0.000    0.000  numbers.py:1419(__neg__)
                                                                                       958    0.002    0.014  solvers.py:57(checksol)
                                                                                       161    0.000    0.000  symbol.py:100(free_symbols)
                                                                                       979    0.000    0.000  {isinstance}
                                                                                       979    0.000    0.000  {method 'difference' of 'set' objects}
                                                                                       979    0.001    0.001  {method 'intersection' of 'set' objects}
densebasic.py:148(dmp_degree)                                                   ->  949484    0.288    0.353  densebasic.py:653(dmp_zero_p)
                                                                                    721540    0.026    0.026  {len}
polyclasses.py:251(from_dict)                                                   ->   17051    0.035    0.580  densebasic.py:921(dmp_from_dict)
                                                                                     17051    0.008    0.008  polyclasses.py:146(__init__)
mul.py:903(_eval_is_negative)                                                   -> 78919/53793    0.012    0.568  assumptions.py:365(getit)
                                                                                     11693    0.001    0.001  basic.py:647(args)
                                                                                     11429    0.007    0.012  operations.py:57(_new_rawargs)
                                                                                     11690    0.001    0.001  {len}
ikfast_AST.py:60(subs)                                                          ->    1569    0.002    0.520  basic.py:719(subs)
                                                                                       173    0.001    0.081  ikfast_AST.py:93(checkValidSolution)
densebasic.py:264(dmp_strip)                                                    ->  843369    0.263    0.321  densebasic.py:653(dmp_zero_p)
                                                                                     32747    0.011    0.011  densebasic.py:677(dmp_zero)
                                                                                    360287    0.014    0.014  {len}
exprtools.py:366(gcd_terms)                                                     ->    1748    0.001    0.044  decorators.py:72(__sympifyit_wrapper)
                                                                                       185    0.000    0.000  expr.py:1823(as_coeff_Mul)
                                                                                      1388    0.022    0.487  exprtools.py:325(_gcd_terms)
                                                                                       175    0.000    0.000  mul.py:783(as_coeff_Mul)
                                                                                      1028    0.000    0.000  numbers.py:230(as_coeff_Mul)
                                                                                      1028    0.001    0.018  numbers.py:1056(__mul__)
                                                                                      1388    0.002    0.015  polytools.py:3700(_keep_coeff)
                                                                                      1388    0.016    0.022  sympify.py:23(sympify)
expr.py:70(__neg__)                                                             ->   81230    0.091    0.552  cache.py:74(wrapper)
simplify.py:23(fraction)                                                        ->   10134    0.002    0.002  assumptions.py:365(getit)
                                                                                     71465    0.008    0.008  basic.py:622(func)
                                                                                     71659    0.069    0.347  cache.py:74(wrapper)
                                                                                      8422    0.001    0.001  function.py:131(func)
                                                                                      8465    0.006    0.011  numbers.py:907(as_numer_denom)
                                                                                        15    0.000    0.000  numbers.py:1015(__neg__)
                                                                                     10195    0.002    0.002  numbers.py:1255(as_numer_denom)
                                                                                     35822    0.019    0.026  operations.py:264(make_args)
                                                                                     10134    0.008    0.011  power.py:243(as_base_exp)
                                                                                     35822    0.045    0.045  sympify.py:23(sympify)
                                                                                    108681    0.008    0.008  {method 'append' of 'list' objects}
mul.py:967(breakup)                                                             ->  250866    0.024    0.024  basic.py:179(__hash__)
                                                                                       387    0.000    0.001  cache.py:74(wrapper)
                                                                                       387    0.000    0.005  decorators.py:72(__sympifyit_wrapper)
                                                                                    163182    0.021    0.021  expr.py:963(as_base_exp)
                                                                                       386    0.000    0.001  function.py:224(is_commutative)
                                                                                       388    0.000    0.000  function.py:301(as_base_exp)
                                                                                       387    0.000    0.000  numbers.py:201(as_coeff_mul)
                                                                                     68096    0.029    0.062  numbers.py:448(__hash__)
                                                                                       156    0.000    0.000  numbers.py:819(__hash__)
                                                                                       460    0.000    0.001  numbers.py:1126(__hash__)
                                                                                     72476    0.032    0.044  operations.py:264(make_args)
                                                                                       387    0.000    0.000  power.py:243(as_base_exp)
                                                                                    163957    0.066    0.197  simplify.py:941(powdenest)
                                                                                      4168    0.000    0.000  {method 'append' of 'list' objects}
{sum}                                                                           ->    8876    0.005    0.097  decorators.py:72(__sympifyit_wrapper)
                                                                                     42345    0.023    0.028  function.py:1540(<genexpr>)
                                                                                 392837/89570    0.073    0.374  ikfast_IKFastSolver.py:843(<genexpr>)
                                                                                 32439/32415    0.005    0.032  ikfast_IKFastSolver.py:846(<genexpr>)
                                                                                      3351    0.002    0.045  ikfast_IKFastSolver.py:9451(<genexpr>)
                                                                                        84    0.000    0.001  numbers.py:1028(__add__)
                                                                                      4327    0.004    0.006  numbers.py:1035(__radd__)
polytools.py:892(as_expr)                                                       ->    5741    0.011    0.246  polyclasses.py:234(to_sympy_dict)
                                                                                      5741    0.034    0.328  polyutils.py:298(expr_from_dict)
str.py:23(parenthesize)                                                         ->   39306    0.039    0.052  precedence.py:57(precedence)
                                                                                 39306/20706    0.044    0.528  printer.py:226(_print)
densearith.py:652(dmp_sub)                                                      ->   24609    0.009    0.023  densearith.py:511(dmp_neg)
                                                                                 103966/103964    0.065    0.118  densearith.py:615(dup_sub)
                                                                                 196160/60301    0.114    0.429  densearith.py:652(dmp_sub)
                                                                                    227479    0.058    0.129  densebasic.py:148(dmp_degree)
                                                                                     94723    0.052    0.116  densebasic.py:264(dmp_strip)
                                                                                       172    0.000    0.000  {abs}
                                                                                     94895    0.019    0.019  {zip}
basic.py:1210(matches)                                                          ->  373485    0.181    0.449  basic.py:374(__eq__)
                                                                                      2656    0.004    0.009  numbers.py:751(__eq__)
                                                                                       102    0.000    0.000  numbers.py:1084(__eq__)
polynomialring.py:38(__call__)                                                  ->   23703    0.020    0.538  polyclasses.py:146(__init__)
                                                                                     23703    0.002    0.002  {len}
densebasic.py:1014(dmp_to_dict)                                                 ->  155375    0.043    0.094  densebasic.py:148(dmp_degree)
                                                                                    155375    0.044    0.053  densebasic.py:653(dmp_zero_p)
                                                                                    107302    0.082    0.117  densebasic.py:964(dup_to_dict)
                                                                                 222300/62116    0.192    0.416  densebasic.py:1014(dmp_to_dict)
                                                                                    222300    0.014    0.014  {method 'iteritems' of 'dict' objects}
__init__.py:1169(warning)                                                       ->      62    0.000    0.546  __init__.py:1267(_log)
                                                                                        62    0.000    0.000  __init__.py:1360(isEnabledFor)
ikfast_IKFastSolver.py:6298(CheckExpressionUnique)                              ->    2451    0.005    0.091  add.py:517(__neg__)
                                                                                      1600    0.003    0.007  core.py:220(__cmp__)
                                                                                      1116    0.001    0.006  expr.py:70(__neg__)
                                                                                      1600    0.000    0.000  function.py:131(func)
                                                                                      7626    0.010    0.414  ikfast_IKFastSolver.py:407(equal)
                                                                                         2    0.000    0.000  numbers.py:1015(__neg__)
                                                                                         4    0.000    0.000  numbers.py:1393(__neg__)
function.py:443(_eval_expand_mul)                                               ->    1162    0.007    0.154  add.py:457(_eval_expand_mul)
                                                                                     47909    0.005    0.005  basic.py:647(args)
                                                                                     47909    0.032    0.205  cache.py:74(wrapper)
                                                                                     46560    0.003    0.003  expr.py:1851(_eval_expand_mul)
                                                                                     47909    0.006    0.006  function.py:131(func)
                                                                                       251    0.001    0.046  mul.py:570(_eval_expand_mul)
                                                                                        17    0.000    0.002  power.py:334(_eval_expand_mul)
                                                                                     47990    0.006    0.006  {hasattr}
                                                                                     47990    0.003    0.003  {method 'append' of 'list' objects}
complexes.py:166(eval)                                                          ->    1673    0.001    0.517  assumptions.py:365(getit)
                                                                                   144/134    0.000    0.003  cache.py:74(wrapper)
                                                                                        43    0.000    0.002  numbers.py:1056(__mul__)
                                                                                        43    0.000    0.000  operations.py:57(_new_rawargs)
                                                                                       126    0.000    0.000  {len}
                                                                                       205    0.000    0.000  {method 'append' of 'list' objects}
ikfast_IKFastSolver.py:1483(ComputeConsistentValues)                            ->     480    0.001    0.002  basic.py:475(__str__)
                                                                                       148    0.000    0.503  basic.py:719(subs)
                                                                                        12    0.000    0.007  cache.py:74(wrapper)
                                                                                        70    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                         5    0.000    0.000  evalf.py:983(evalf)
                                                                                        35    0.000    0.001  ikfast_IKFastSolver.py:157(__init__)
                                                                                         6    0.000    0.002  ikfast_IKFastSolver.py:250(convertRealToRational)
                                                                                        48    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        15    0.000    0.000  numbers.py:1035(__radd__)
                                                                                        28    0.000    0.000  {len}
                                                                                       104    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         8    0.000    0.000  {range}
function.py:1108(expand)                                                        ->     734    0.007    0.500  expr.py:1869(expand)
                                                                                       734    0.001    0.001  sympify.py:23(sympify)
complexes.py:111(eval)                                                          ->    4015    0.001    0.001  assumptions.py:365(getit)
                                                                                      2006    0.002    0.004  cache.py:74(wrapper)
                                                                                         1    0.000    0.000  core.py:220(__cmp__)
                                                                                      2006    0.001    0.490  expr.py:761(as_coefficient)
                                                                                         1    0.000    0.000  function.py:131(func)
                                                                                      2006    0.001    0.001  operations.py:264(make_args)
                                                                                      4012    0.000    0.000  {len}
                                                                                      2006    0.000    0.000  {method 'append' of 'list' objects}
exprtools.py:325(_gcd_terms)                                                    ->    1388    0.004    0.022  add.py:527(primitive)
                                                                                      1388    0.002    0.015  cache.py:74(wrapper)
                                                                                       360    0.000    0.006  decorators.py:72(__sympifyit_wrapper)
                                                                                      5424    0.009    0.080  exprtools.py:73(as_expr)
                                                                                      4036    0.003    0.008  exprtools.py:101(mul)
                                                                                      4036    0.002    0.011  exprtools.py:138(quo)
                                                                                      2648    0.002    0.004  exprtools.py:166(lcm)
                                                                                      1388    0.003    0.038  exprtools.py:261(as_expr)
                                                                                      4036    0.003    0.126  exprtools.py:276(quo)
                                                                                      2648    0.004    0.037  exprtools.py:287(gcd)
                                                                                      4818    0.004    0.073  numbers.py:1056(__mul__)
                                                                                       246    0.000    0.001  numbers.py:1063(__rmul__)
                                                                                      1388    0.000    0.000  {isinstance}
                                                                                      1388    0.000    0.000  {len}
                                                                                      1388    0.003    0.044  {map}
                                                                                      4036    0.000    0.000  {method 'append' of 'list' objects}
__init__.py:948(emit)                                                           ->    1311    0.004    0.485  __init__.py:849(emit)
operations.py:57(_new_rawargs)                                                  ->  215531    0.115    0.153  basic.py:82(__new__)
                                                                                      6736    0.001    0.001  operations.py:139(<genexpr>)
                                                                                      6743    0.003    0.018  {all}
                                                                                    215531    0.025    0.025  {hasattr}
                                                                                    439543    0.021    0.021  {len}
                                                                                      6743    0.000    0.000  {method 'pop' of 'dict' objects}
facts.py:821(deduce_all_facts)                                                  ->   40666    0.066    0.066  facts.py:846(x_new_facts)
                                                                                     14596    0.002    0.002  logic.py:49(fuzzy_not)
                                                                                      6625    0.001    0.001  {method 'append' of 'list' objects}
                                                                                       176    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                     20333    0.003    0.003  {method 'update' of 'set' objects}
add.py:517(__neg__)                                                             ->   17270    0.002    0.002  basic.py:647(args)
                                                                                     17270    0.022    0.109  cache.py:74(wrapper)
                                                                                     52835    0.023    0.312  expr.py:70(__neg__)
                                                                                        23    0.000    0.000  numbers.py:337(__neg__)
                                                                                      5219    0.003    0.011  numbers.py:647(__neg__)
                                                                                       707    0.000    0.001  numbers.py:1015(__neg__)
                                                                                       327    0.000    0.000  numbers.py:1393(__neg__)
                                                                                       154    0.000    0.000  numbers.py:1419(__neg__)
basic.py:82(__new__)                                                            ->       3    0.000    0.000  assumptions.py:315(_learn_new_facts)
                                                                                    536339    0.098    0.098  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                         3    0.000    0.000  {method 'difference' of 'set' objects}
                                                                                         6    0.000    0.000  {method 'keys' of 'dict' objects}
densetools.py:274(dup_eval)                                                     ->
{hash}                                                                          -> 761894/761831    0.075    0.075  basic.py:179(__hash__)
                                                                                       635    0.000    0.000  domain.py:59(__hash__)
                                                                                         6    0.000    0.000  logic.py:94(__hash__)
                                                                                     35866    0.013    0.046  numbers.py:448(__hash__)
                                                                                     46039    0.016    0.039  numbers.py:819(__hash__)
                                                                                     71021    0.026    0.084  numbers.py:1126(__hash__)
                                                                                       330    0.000    0.000  numbers.py:1760(__hash__)
                                                                                   635/163    0.001    0.006  polyclasses.py:162(__hash__)
                                                                                       139    0.000    0.000  polynomialring.py:35(__hash__)
                                                                                       210    0.000    0.000  pythonrationaltype.py:48(__hash__)
{len}                                                                           ->    2569    0.001    0.001  matrices.py:334(__len__)
                                                                                         2    0.000    0.000  six.py:62(__len__)
                                                                                       599    0.000    0.000  sre_parse.py:137(__len__)
expr.py:75(__add__)                                                             ->   52926    0.068    0.382  cache.py:74(wrapper)
ikfast_IKFastSolver.py:839(codeComplexity)                                      ->  115318    0.013    0.013  basic.py:647(args)
                                                                                 96410/94670    0.037    0.056  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                    119226    0.011    0.011  numbers.py:197(is_number)
                                                                                     48205    0.006    0.006  power.py:91(base)
                                                                                     48205    0.005    0.005  power.py:95(exp)
                                                                                    144032    0.013    0.013  symbol.py:96(is_number)
                                                                                 115318/18431    0.047    0.386  {sum}
{cmp}                                                                           ->   39732    0.065    0.116  core.py:220(__cmp__)
                                                                                     18146    0.010    0.069  core.py:247(__lt__)
                                                                                     31829    0.017    0.125  core.py:252(__gt__)
                                                                                         3    0.000    0.000  numbers.py:189(__gt__)
                                                                                         9    0.000    0.000  numbers.py:396(__eq__)
                                                                                         9    0.000    0.000  numbers.py:424(__lt__)
function.py:467(_eval_expand_log)                                               ->    1361    0.007    0.060  add.py:477(_eval_expand_log)
                                                                                     74421    0.010    0.010  basic.py:647(args)
                                                                                     74421    0.059    0.124  cache.py:74(wrapper)
                                                                                     72741    0.005    0.005  expr.py:1857(_eval_expand_log)
                                                                                     74421    0.012    0.012  function.py:131(func)
                                                                                       432    0.001    0.011  mul.py:609(_eval_expand_log)
                                                                                        20    0.000    0.001  power.py:488(_eval_expand_log)
                                                                                     74554    0.009    0.009  {hasattr}
                                                                                     74554    0.006    0.006  {method 'append' of 'list' objects}
expr.py:131(__complex__)                                                        ->   11396    0.026    0.132  evalf.py:983(evalf)
                                                                                     11396    0.014    0.197  expr.py:935(as_real_imag)
                                                                                     22792    0.013    0.035  numbers.py:162(__float__)
basic.py:399(__ne__)                                                            ->  264760    0.029    0.029  basic.py:204(_hashable_content)
                                                                                      7318    0.004    0.008  basic.py:374(__eq__)
                                                                                         2    0.000    0.000  numbers.py:396(__eq__)
                                                                                        24    0.000    0.000  numbers.py:751(__eq__)
                                                                                        18    0.000    0.000  numbers.py:1084(__eq__)
                                                                                    396320    0.056    0.056  symbol.py:69(_hashable_content)
                                                                                       922    0.001    0.001  symbol.py:137(_hashable_content)
                                                                                        44    0.000    0.000  symbol.py:175(_hashable_content)
                                                                                     11786    0.003    0.026  sympify.py:161(_sympify)
str.py:231(<lambda>)                                                            ->   19196    0.013    0.072  precedence.py:57(precedence)
                                                                                 19196/15981    0.010    0.313  str.py:23(parenthesize)
ikfast_IKFastSolver.py:6781(_SubstituteGlobalSymbols)                           ->    1309    0.001    0.003  basic.py:399(__ne__)
                                                                                      1762    0.003    0.359  basic.py:719(subs)
                                                                                        92    0.000    0.016  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                       414    0.000    0.000  numbers.py:1091(__ne__)
                                                                                        39    0.000    0.000  numbers.py:1705(__ne__)
ikfast_generator_cpp.py:1924(_WriteExprCode)                                    ->   13202    0.011    0.025  basic.py:374(__eq__)
                                                                                      9372    0.017    0.067  basic.py:475(__str__)
                                                                                     25661    0.003    0.003  basic.py:647(args)
                                                                                        27    0.000    0.000  cache.py:74(wrapper)
                                                                                      8713    0.014    0.032  core.py:220(__cmp__)
                                                                                        27    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                      5749    0.014    0.044  evalf.py:983(evalf)
                                                                                      7321    0.009    0.030  expr.py:176(is_number)
                                                                                      8716    0.001    0.001  function.py:131(func)
                                                                                 10168/4930    0.038    0.255  ikfast_generator_cpp.py:1924(_WriteExprCode)
                                                                                       154    0.000    0.001  iterables.py:435(numbered_symbols)
                                                                                      4938    0.001    0.001  numbers.py:197(is_number)
                                                                                      2828    0.003    0.010  numbers.py:396(__eq__)
                                                                                       330    0.000    0.000  numbers.py:1012(__int__)
                                                                                      1114    0.001    0.006  numbers.py:1084(__eq__)
                                                                                       330    0.000    0.000  numbers.py:1098(__gt__)
                                                                                      1078    0.000    0.000  power.py:91(base)
                                                                                      1505    0.000    0.000  power.py:95(exp)
                                                                                      5749    0.003    0.078  printer.py:222(doprint)
                                                                                      1168    0.000    0.000  symbol.py:96(is_number)
                                                                                      4394    0.001    0.001  {cStringIO.StringIO}
                                                                                      1168    0.000    0.000  {hasattr}
                                                                                       249    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       154    0.000    0.000  {method 'getvalue' of 'cStringIO.StringO' objects}
                                                                                       155    0.000    0.000  {method 'read' of 'cStringIO.StringO' objects}
                                                                                       310    0.000    0.000  {method 'seek' of 'cStringIO.StringO' objects}
                                                                                       310    0.000    0.000  {method 'tell' of 'cStringIO.StringO' objects}
                                                                                     59585    0.011    0.011  {method 'write' of 'cStringIO.StringO' objects}
                                                                                       280    0.000    0.000  {range}
densebasic.py:1636(dmp_list_terms)                                              ->   12484    0.023    0.371  densebasic.py:1617(_rec_list_terms)
polyclasses.py:291(terms)                                                       ->   11673    0.006    0.368  densebasic.py:1636(dmp_list_terms)
basic.py:471(__repr__)                                                          ->    2266    0.002    0.369  str.py:471(sstr)
ikfast_IKFastSolver.py:843(<genexpr>)                                           -> 293611/71255    0.171    0.353  ikfast_IKFastSolver.py:839(codeComplexity)
expr.py:12(sort_key)                                                            ->     735    0.000    0.000  add.py:187(class_key)
                                                                                      7282    0.009    0.044  basic.py:475(__str__)
                                                                                     10866    0.001    0.001  basic.py:647(args)
                                                                                      7282    0.001    0.001  basic.py:1226(class_key)
                                                                                 14125/7865    0.004    0.128  expr.py:41(<genexpr>)
                                                                                   735/723    0.003    0.208  expr.py:309(as_ordered_terms)
                                                                                      9346    0.002    0.002  expr.py:1823(as_coeff_Mul)
                                                                                      2585    0.003    0.003  function.py:202(class_key)
                                                                                      1562    0.000    0.000  mul.py:469(class_key)
                                                                                      2820    0.003    0.007  mul.py:783(as_coeff_Mul)
                                                                                     12166    0.004    0.005  numbers.py:176(sort_key)
                                                                                         2    0.000    0.000  power.py:99(class_key)
                                                                                     12166    0.001    0.001  {len}
                                                                                      1562    0.001    0.001  {sorted}
densebasic.py:1617(_rec_list_terms)                                             ->  179931    0.045    0.174  densebasic.py:148(dmp_degree)
                                                                                 167447/16041    0.152    0.332  densebasic.py:1617(_rec_list_terms)
                                                                                     17458    0.005    0.010  polyclasses.py:905(__nonzero__)
                                                                                        52    0.000    0.000  polyclasses.py:1293(__nonzero__)
                                                                                      2168    0.000    0.000  pythonrationaltype.py:177(__nonzero__)
                                                                                     22144    0.002    0.002  {method 'append' of 'list' objects}
                                                                                    167447    0.011    0.011  {method 'extend' of 'list' objects}
__init__.py:1157(info)                                                          ->     952    0.002    0.364  __init__.py:1267(_log)
                                                                                       952    0.001    0.002  __init__.py:1360(isEnabledFor)
basic.py:1085(match)                                                            ->    5148    0.001    0.007  basic.py:1210(matches)
                                                                                       332    0.000    0.110  mul.py:667(matches)
                                                                                       180    0.003    0.238  operations.py:162(_matches_commutative)
                                                                                      5660    0.004    0.004  sympify.py:23(sympify)
function.py:407(_eval_expand_basic)                                             ->    1361    0.007    0.048  add.py:427(_eval_expand_basic)
                                                                                     74421    0.009    0.009  basic.py:647(args)
                                                                                     74421    0.051    0.110  cache.py:74(wrapper)
                                                                                     72741    0.005    0.005  expr.py:1842(_eval_expand_basic)
                                                                                     74421    0.010    0.010  function.py:131(func)
                                                                                       432    0.001    0.010  mul.py:540(_eval_expand_basic)
                                                                                        20    0.000    0.001  power.py:252(_eval_expand_basic)
                                                                                     74554    0.010    0.010  {hasattr}
                                                                                     74554    0.005    0.005  {method 'append' of 'list' objects}
basic.py:675(iter_basic_args)                                                   ->  537822    0.056    0.056  basic.py:647(args)
                                                                                         1    0.000    0.000  operations.py:372(args)
                                                                                       215    0.000    0.046  polytools.py:276(args)
                                                                                    538038    0.045    0.045  {iter}
operations.py:162(_matches_commutative)                                         ->     591    0.000    0.002  add.py:218(_matches_simple)
                                                                                       358    0.002    0.022  add.py:227(_combine_inverse)
                                                                                      3261    0.003    0.008  basic.py:374(__eq__)
                                                                                      3892    0.001    0.001  basic.py:622(func)
                                                                                      3163    0.000    0.000  basic.py:647(args)
                                                                                      1802    0.002    0.038  basic.py:719(subs)
                                                                                      4640    0.006    0.076  basic.py:835(__contains__)
                                                                                        32    0.000    0.000  basic.py:1210(matches)
                                                                                        54    0.000    0.000  basic.py:1223(__contains__)
                                                                                     10860    0.009    0.024  cache.py:74(wrapper)
                                                                                       132    0.000    0.001  function.py:146(__contains__)
                                                                                      2670    0.002    0.024  mul.py:659(_matches_simple)
                                                                                 2240/1172    0.003    0.229  mul.py:667(matches)
                                                                                      1588    0.003    0.034  mul.py:740(_combine_inverse)
                                                                                   411/305    0.003    0.137  operations.py:162(_matches_commutative)
                                                                                      1217    0.001    0.001  operations.py:264(make_args)
                                                                                      3136    0.008    0.082  power.py:648(matches)
                                                                                      1867    0.002    0.004  symbol.py:179(matches)
                                                                                      6968    0.001    0.001  {method 'append' of 'list' objects}
                                                                                      1802    0.000    0.000  {method 'items' of 'dict' objects}
mul.py:783(as_coeff_Mul)                                                        ->  302670    0.027    0.027  basic.py:647(args)
                                                                                     79598    0.073    0.155  operations.py:57(_new_rawargs)
                                                                                    120144    0.007    0.007  {len}
basic.py:691(as_poly)                                                           ->     532    0.001    0.339  polytools.py:80(__new__)
power.py:616(as_numer_denom)                                                    ->     670    0.004    0.031  add.py:260(as_numer_denom)
                                                                                     32291    0.008    0.008  assumptions.py:365(getit)
                                                                                     64266    0.054    0.210  cache.py:74(wrapper)
                                                                                       133    0.000    0.000  expr.py:1048(as_numer_denom)
                                                                                     31330    0.004    0.004  expr.py:2008(as_numer_denom)
                                                                                         5    0.000    0.000  mul.py:775(as_numer_denom)
                                                                                        61    0.000    0.000  numbers.py:201(as_coeff_mul)
                                                                                         4    0.000    0.000  numbers.py:1015(__neg__)
                                                                                      1946    0.000    0.000  numbers.py:1419(__neg__)
                                                                                     32143    0.023    0.034  power.py:243(as_base_exp)
                                                                                         5    0.000    0.000  power.py:616(as_numer_denom)
core.py:220(__cmp__)                                                            ->  190733    0.022    0.022  {cmp}
                                                                                    110834    0.017    0.017  {isinstance}
                                                                                     99120    0.006    0.006  {len}
                                                                                    198240    0.112    0.112  {method 'index' of 'list' objects}
function.py:419(_eval_expand_power_exp)                                         -> 1346/1340    0.007    0.065  add.py:437(_eval_expand_power_exp)
                                                                                     66921    0.007    0.007  basic.py:647(args)
                                                                                     66921    0.046    0.099  cache.py:74(wrapper)
                                                                                     65542    0.005    0.005  expr.py:1845(_eval_expand_power_exp)
                                                                                     66921    0.009    0.009  function.py:131(func)
                                                                                       151    0.000    0.002  mul.py:550(_eval_expand_power_exp)
                                                                                        15    0.000    0.008  power.py:262(_eval_expand_power_exp)
                                                                                     67054    0.007    0.007  {hasattr}
                                                                                     67054    0.005    0.005  {method 'append' of 'list' objects}
expr.py:282(as_ordered_factors)                                                 ->    6448    0.001    0.001  basic.py:647(args)
                                                                                       691    0.001    0.001  function.py:224(is_commutative)
                                                                                     19496    0.001    0.001  {method 'append' of 'list' objects}
                                                                                      6448    0.014    0.305  {sorted}
numbers.py:448(__hash__)                                                        ->  276919    0.107    0.202  numbers.py:194(__hash__)
evalf.py:953(evalf)                                                             ->   62467    0.010    0.010  basic.py:622(func)
                                                                                      1604    0.001    0.020  evalf.py:141(evalf_abs)
                                                                                 4398/3700    0.009    0.064  evalf.py:315(evalf_add)
                                                                                 3811/3581    0.012    0.088  evalf.py:346(evalf_mul)
                                                                                   967/815    0.002    0.009  evalf.py:416(evalf_pow)
                                                                                         2    0.000    0.000  evalf.py:606(evalf_atan)
                                                                                      4935    0.002    0.002  evalf.py:892(evalf_symbol)
                                                                                     12886    0.003    0.003  evalf.py:916(<lambda>)
                                                                                     11378    0.007    0.087  evalf.py:917(<lambda>)
                                                                                      6696    0.003    0.021  evalf.py:918(<lambda>)
                                                                                      3486    0.001    0.001  evalf.py:919(<lambda>)
                                                                                      4283    0.001    0.001  evalf.py:920(<lambda>)
                                                                                       963    0.000    0.000  evalf.py:921(<lambda>)
                                                                                      1505    0.001    0.009  evalf.py:922(<lambda>)
                                                                                      7157    0.002    0.002  evalf.py:925(<lambda>)
                                                                                      4935    0.001    0.001  evalf.py:1060(_eval_evalf)
                                                                                      1716    0.000    0.000  function.py:131(func)
                                                                                       110    0.000    0.042  function.py:236(_eval_evalf)
                                                                                         2    0.000    0.000  numbers.py:155(_eval_evalf)
                                                                                    148473    0.011    0.011  {method 'get' of 'dict' objects}
function.py:431(_eval_expand_power_base)                                        ->    1346    0.007    0.052  add.py:447(_eval_expand_power_base)
                                                                                     66921    0.007    0.007  basic.py:647(args)
                                                                                     66921    0.044    0.096  cache.py:74(wrapper)
                                                                                     65542    0.004    0.004  expr.py:1848(_eval_expand_power_base)
                                                                                     66921    0.009    0.009  function.py:131(func)
                                                                                       151    0.000    0.001  mul.py:560(_eval_expand_power_base)
                                                                                        15    0.000    0.000  power.py:279(_eval_expand_power_base)
                                                                                     67054    0.008    0.008  {hasattr}
                                                                                     67054    0.005    0.005  {method 'append' of 'list' objects}
polyoptions.py:60(getter)                                                       ->  123459    0.012    0.012  polyoptions.py:29(default)
                                                                                     38814    0.005    0.005  polyoptions.py:238(default)
                                                                                     16539    0.002    0.002  polyoptions.py:252(default)
                                                                                     16869    0.002    0.002  polyoptions.py:310(default)
                                                                                       108    0.000    0.000  polyoptions.py:333(default)
                                                                                     14207    0.002    0.002  polyoptions.py:367(default)
                                                                                        32    0.000    0.000  polyoptions.py:593(default)
expr.py:176(is_number)                                                          ->  111309    0.012    0.012  basic.py:647(args)
                                                                                    111309    0.046    0.065  basic.py:675(iter_basic_args)
                                                                                    110818    0.011    0.011  expr.py:197(<genexpr>)
                                                                                 111309/72601    0.023    0.154  {all}
{method 'update' of 'dict' objects}                                             ->
expr.py:307(<lambda>)                                                           ->    5498    0.020    0.201  expr.py:12(sort_key)
                                                                                      6063    0.002    0.003  numbers.py:176(sort_key)
                                                                                      7935    0.020    0.076  symbol.py:72(sort_key)
densebasic.py:1275(dmp_multi_deflate)                                           ->   13662    0.004    0.005  densebasic.py:653(dmp_zero_p)
                                                                                      1466    0.004    0.022  densebasic.py:921(dmp_from_dict)
                                                                                     13662    0.025    0.159  densebasic.py:1014(dmp_to_dict)
                                                                                     98718    0.035    0.036  numbers.py:36(igcd)
                                                                                      6831    0.001    0.001  {all}
                                                                                     15128    0.001    0.001  {method 'append' of 'list' objects}
                                                                                      1466    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                     12768    0.001    0.001  {method 'iterkeys' of 'dict' objects}
                                                                                      3135    0.001    0.001  {zip}
mul.py:667(matches)                                                             ->      72    0.000    0.000  function.py:224(is_commutative)
                                                                                  2670/976    0.020    0.276  operations.py:162(_matches_commutative)
                                                                                      2670    0.003    0.003  sympify.py:23(sympify)
basic.py:622(func)                                                              ->
ikfast_AST.py:93(checkValidSolution)                                            ->     804    0.002    0.266  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                       942    0.000    0.000  {all}
str.py:118(_print_Function)                                                     ->    5909    0.001    0.001  basic.py:647(args)
                                                                                      5909    0.001    0.001  function.py:131(func)
                                                                                 5909/5678    0.006    0.254  str.py:29(stringify)
add.py:289(_eval_is_irrational)                                                 -> 3523/3522    0.001    0.260  assumptions.py:365(getit)
                                                                                      3512    0.000    0.000  basic.py:647(args)
expr.py:1831(diff)                                                              -> 4898/963    0.038    0.258  function.py:630(__new__)
                                                                                      4898    0.003    0.009  {map}
                                                                                      4898    0.000    0.000  {method 'setdefault' of 'dict' objects}
function.py:630(__new__)                                                        -> 751/748    0.002    0.127  add.py:211(_eval_derivative)
                                                                                      4898    0.001    0.001  basic.py:179(__hash__)
                                                                                      3729    0.005    0.017  basic.py:580(free_symbols)
                                                                                      4898    0.002    0.003  containers.py:41(__len__)
                                                                                      4898    0.003    0.004  containers.py:47(__iter__)
                                                                                       969    0.001    0.003  expr.py:2003(_eval_derivative)
                                                                                      9796    0.002    0.002  function.py:673(<genexpr>)
                                                                                      5032    0.002    0.002  function.py:680(<genexpr>)
                                                                                   785/782    0.004    0.064  mul.py:649(_eval_derivative)
                                                                                      4898    0.001    0.001  numbers.py:1012(__int__)
                                                                                      11/8    0.000    0.003  power.py:580(_eval_derivative)
                                                                                      1169    0.001    0.001  symbol.py:100(free_symbols)
                                                                                      9796    0.124    0.145  sympify.py:23(sympify)
                                                                                      2516    0.001    0.001  {hasattr}
                                                                                      2516    0.001    0.001  {isinstance}
                                                                                      9796    0.001    0.001  {len}
                                                                                      9796    0.001    0.001  {method 'append' of 'list' objects}
                                                                                      4898    0.001    0.001  {method 'difference' of 'set' objects}
                                                                                      4898    0.001    0.001  {method 'pop' of 'dict' objects}
str.py:29(stringify)                                                            -> 5909/5678    0.005    0.248  str.py:23(parenthesize)
                                                                                      5909    0.001    0.001  {method 'join' of 'str' objects}
polytools.py:178(_from_poly)                                                    ->     619    0.000    0.000  basic.py:179(__hash__)
                                                                                        45    0.000    0.000  basic.py:374(__eq__)
                                                                                       108    0.000    0.000  core.py:220(__cmp__)
                                                                                       432    0.000    0.001  polyoptions.py:60(getter)
                                                                                       106    0.000    0.213  polytools.py:205(_from_expr)
                                                                                       106    0.000    0.037  polytools.py:892(as_expr)
ikfast_generator_cpp.py:1838(writeEquations)                                    ->     106    0.000    0.250  ikfast_generator_cpp.py:1843(WriteEquations2)
                                                                                       106    0.000    0.000  {cStringIO.StringIO}
                                                                                       106    0.000    0.000  {method 'getvalue' of 'cStringIO.StringO' objects}
{method 'iteritems' of 'dict' objects}                                          ->
power.py:502(as_real_imag)                                                      ->      32    0.000    0.003  add.py:395(as_real_imag)
                                                                                        32    0.000    0.001  add.py:517(__neg__)
                                                                                       996    0.000    0.000  basic.py:179(__hash__)
                                                                                       498    0.001    0.076  basic.py:719(subs)
                                                                                       498    0.001    0.005  cache.py:74(wrapper)
                                                                                      1992    0.001    0.050  decorators.py:72(__sympifyit_wrapper)
                                                                                       134    0.000    0.001  expr.py:70(__neg__)
                                                                                        24    0.000    0.002  expr.py:935(as_real_imag)
                                                                                       664    0.001    0.031  numbers.py:1056(__mul__)
                                                                                       166    0.000    0.000  numbers.py:1112(__ge__)
                                                                                       498    0.001    0.007  polytools.py:758(terms)
                                                                                       166    0.001    0.064  polytools.py:5327(poly)
                                                                                       166    0.000    0.000  power.py:91(base)
                                                                                       332    0.000    0.000  power.py:95(exp)
                                                                                       110    0.000    0.002  symbol.py:85(as_real_imag)
                                                                                       166    0.001    0.003  symbol.py:205(symbols)
misc.py:5(default_sort_key)                                                     -> 1401/1252    0.009    0.162  expr.py:12(sort_key)
                                                                                      8016    0.017    0.078  symbol.py:72(sort_key)
                                                                                      9417    0.010    0.010  sympify.py:23(sympify)
{all}                                                                           ->     691    0.000    0.000  collections.py:349(<genexpr>)
                                                                                 153775/97455    0.052    0.138  expr.py:197(<genexpr>)
                                                                                    142580    0.028    0.037  function.py:226(<genexpr>)
                                                                                        16    0.000    0.000  matrices.py:984(<genexpr>)
                                                                                         8    0.000    0.000  matrices.py:986(<genexpr>)
                                                                                       237    0.000    0.000  operations.py:38(<genexpr>)
                                                                                     28574    0.005    0.016  operations.py:139(<genexpr>)
                                                                                         6    0.000    0.000  polyroots.py:384(<genexpr>)
                                                                                       795    0.001    0.007  solvers.py:732(<genexpr>)
numbers.py:340(__mul__)                                                         -> 3766/3693    0.002    0.087  decorators.py:72(__sympifyit_wrapper)
                                                                                     23571    0.032    0.040  libmpf.py:858(python_mpf_mul)
                                                                                     22530    0.015    0.040  numbers.py:158(_as_mpf_op)
                                                                                      1041    0.000    0.001  numbers.py:291(_as_mpf_op)
                                                                                     23571    0.016    0.038  numbers.py:319(_new)
                                                                                     27337    0.004    0.004  {isinstance}
numbers.py:770(__ne__)                                                          ->     106    0.000    0.000  assumptions.py:365(getit)
                                                                                     56014    0.021    0.117  sympify.py:161(_sympify)
                                                                                    251818    0.035    0.035  {isinstance}
polytools.py:3944(div)                                                          ->      64    0.000    0.000  polyoptions.py:60(getter)
                                                                                        32    0.000    0.000  polyoptions.py:699(allowed_flags)
                                                                                        32    0.000    0.013  polytools.py:1451(div)
                                                                                        32    0.000    0.226  polytools.py:3596(parallel_poly_from_expr)
polyoptions.py:256(preprocess)                                                  ->   89196    0.011    0.011  basic.py:179(__hash__)
                                                                                     18157    0.027    0.104  basic.py:374(__eq__)
                                                                                     18157    0.015    0.033  {any}
                                                                                      5659    0.003    0.003  {hasattr}
                                                                                     18157    0.005    0.005  {isinstance}
                                                                                     54471    0.004    0.004  {len}
operations.py:264(make_args)                                                    ->  269766    0.029    0.029  basic.py:647(args)
                                                                                    389035    0.045    0.045  {isinstance}
trigonometric.py:947(eval)                                                      ->       5    0.000    0.000  add.py:517(__neg__)
                                                                                        64    0.000    0.000  basic.py:179(__hash__)
                                                                                         8    0.000    0.000  basic.py:374(__eq__)
                                                                                        10    0.000    0.065  cache.py:74(wrapper)
                                                                                       112    0.000    0.003  decorators.py:72(__sympifyit_wrapper)
                                                                                        35    0.000    0.001  expr.py:70(__neg__)
                                                                                        59    0.000    0.001  expr.py:176(is_number)
                                                                                        63    0.000    0.031  expr.py:761(as_coefficient)
                                                                                        73    0.000    0.175  expr.py:1247(could_extract_minus_sign)
                                                                                        88    0.000    0.001  miscellaneous.py:30(sqrt)
                                                                                         4    0.000    0.000  numbers.py:197(is_number)
                                                                                         4    0.000    0.000  numbers.py:448(__hash__)
                                                                                         4    0.000    0.000  numbers.py:647(__neg__)
                                                                                         8    0.000    0.000  numbers.py:819(__hash__)
                                                                                         4    0.000    0.000  numbers.py:1015(__neg__)
                                                                                         8    0.000    0.000  sympify.py:23(sympify)
function.py:1446(isneg)                                                         ->   31580    0.009    0.014  assumptions.py:365(getit)
                                                                                     49802    0.052    0.163  cache.py:74(wrapper)
                                                                                      4745    0.001    0.001  expr.py:977(as_coeff_mul)
                                                                                      3104    0.002    0.011  numbers.py:201(as_coeff_mul)
exprtools.py:13(decompose_power)                                                ->      78    0.000    0.000  cache.py:74(wrapper)
                                                                                    162532    0.026    0.026  expr.py:963(as_base_exp)
                                                                                     10403    0.002    0.002  function.py:301(as_base_exp)
                                                                                        32    0.000    0.000  numbers.py:1944(as_base_exp)
                                                                                     79317    0.055    0.080  power.py:243(as_base_exp)
densearith.py:1336(dup_rr_div)                                                  ->   24166    0.020    0.021  densearith.py:17(dup_add_term)
                                                                                     24166    0.056    0.056  densearith.py:149(dup_mul_term)
                                                                                     24166    0.026    0.048  densearith.py:615(dup_sub)
                                                                                     44761    0.004    0.004  densebasic.py:15(poly_LC)
                                                                                     87865    0.013    0.017  densebasic.py:131(dup_degree)
                                                                                     24166    0.018    0.018  ring.py:15(exquo)
densearith.py:774(dup_mul)                                                      ->   13033    0.012    0.017  densearith.py:857(dup_sqr)
                                                                                    107940    0.017    0.021  densebasic.py:131(dup_degree)
                                                                                     53970    0.007    0.007  densebasic.py:238(dup_strip)
                                                                                    130098    0.012    0.012  {max}
                                                                                    130098    0.008    0.008  {method 'append' of 'list' objects}
                                                                                    130098    0.011    0.011  {min}
densebasic.py:865(dup_from_dict)                                                ->   83561    0.029    0.050  densebasic.py:238(dup_strip)
                                                                                     83561    0.012    0.012  {max}
                                                                                    129098    0.011    0.011  {method 'append' of 'list' objects}
                                                                                    129098    0.013    0.013  {method 'get' of 'dict' objects}
                                                                                     83561    0.006    0.006  {method 'iterkeys' of 'dict' objects}
function.py:455(_eval_expand_multinomial)                                       ->   63401    0.009    0.009  basic.py:647(args)
                                                                                     63401    0.043    0.089  cache.py:74(wrapper)
                                                                                     63401    0.008    0.008  function.py:131(func)
                                                                                     63534    0.030    0.030  {hasattr}
                                                                                     63534    0.004    0.004  {method 'append' of 'list' objects}
printer.py:190(__init__)                                                        ->  194900    0.012    0.012  {len}
                                                                                     97450    0.013    0.013  {method 'copy' of 'dict' objects}
                                                                                     97450    0.012    0.012  {method 'iteritems' of 'dict' objects}
                                                                                     97450    0.023    0.023  {method 'update' of 'dict' objects}
power.py:243(as_base_exp)                                                       ->  372637    0.046    0.046  power.py:91(base)
                                                                                    186280    0.019    0.019  power.py:95(exp)
symbol.py:35(__new__)                                                           ->  107274    0.064    0.155  cache.py:74(wrapper)
matrices.py:77(__init__)                                                        ->    2664    0.001    0.004  compatibility.py:54(is_sequence)
                                                                                        12    0.000    0.000  matrices.py:988(<lambda>)
                                                                                        16    0.000    0.013  matrices.py:1221(<lambda>)
                                                                                      2451    0.002    0.157  matrices.py:2583(<lambda>)
                                                                                      3122    0.003    0.003  sympify.py:23(sympify)
                                                                                      2533    0.000    0.000  {callable}
                                                                                       257    0.000    0.000  {hasattr}
                                                                                       992    0.000    0.000  {isinstance}
                                                                                     10556    0.001    0.002  {len}
                                                                                      2342    0.003    0.022  {map}
                                                                                      3857    0.000    0.000  {method 'append' of 'list' objects}
                                                                                      1452    0.000    0.000  {range}
densetools.py:571(dup_content)                                                  ->   44533    0.006    0.006  domain.py:379(is_one)
                                                                                         6    0.000    0.000  polynomialring.py:175(gcd)
                                                                                     44527    0.015    0.172  pythonintegerring.py:93(gcd)
{min}                                                                           ->   16363    0.004    0.162  function.py:179(<genexpr>)
domain.py:357(poly_ring)                                                        ->   14165    0.025    0.158  polynomialring.py:20(__init__)
simplify.py:941(powdenest)                                                      ->    4652    0.001    0.001  basic.py:622(func)
                                                                                       316    0.000    0.000  expr.py:963(as_base_exp)
                                                                                       388    0.000    0.000  function.py:131(func)
                                                                                        71    0.000    0.000  function.py:301(as_base_exp)
                                                                                     11669    0.003    0.005  operations.py:264(make_args)
                                                                                       387    0.000    0.001  power.py:243(as_base_exp)
                                                                                    163957    0.125    0.125  sympify.py:23(sympify)
symbol.py:72(sort_key)                                                          ->   20230    0.028    0.137  basic.py:475(__str__)
                                                                                     20230    0.004    0.004  basic.py:1226(class_key)
                                                                                     20230    0.007    0.009  numbers.py:176(sort_key)
basic.py:204(_hashable_content)                                                 ->
{zip}                                                                           ->
numbers.py:989(__new__)                                                         ->    2643    0.002    0.002  basic.py:82(__new__)
operations.py:252(_eval_template_is_attr)                                       ->   71689    0.008    0.008  basic.py:647(args)
                                                                                 146879/138014    0.025    0.104  {getattr}
numbers.py:1042(__sub__)                                                        ->    6715    0.004    0.146  decorators.py:72(__sympifyit_wrapper)
                                                                                     18614    0.004    0.004  numbers.py:989(__new__)
                                                                                     50656    0.007    0.007  {isinstance}
symbol.py:69(_hashable_content)                                                 ->
pythonrationalfield.py:26(from_sympy)                                           ->   42787    0.029    0.151  pythonrationaltype.py:26(__init__)
matrices.py:407(__mul__)                                                        ->       6    0.000    0.000  matrices.py:77(__init__)
                                                                                       378    0.000    0.000  matrices.py:382(shape)
                                                                                       378    0.001    0.170  matrices.py:2543(matrix_multiply)
                                                                                       384    0.000    0.000  {hasattr}
                                                                                         6    0.000    0.000  {map}
matrices.py:2543(matrix_multiply)                                               ->     378    0.003    0.163  matrices.py:77(__init__)
                                                                                       378    0.001    0.005  matrices.py:171(transpose)
                                                                                       756    0.001    0.001  matrices.py:342(tolist)
                                                                                      1512    0.000    0.000  matrices.py:382(shape)
precedence.py:57(precedence)                                                    ->   29894    0.021    0.081  precedence.py:35(precedence_Mul)
                                                                                       112    0.000    0.000  precedence.py:40(precedence_Rational)
                                                                                     14255    0.003    0.003  precedence.py:45(precedence_Integer)
                                                                                     78081    0.021    0.021  {hasattr}
numbers.py:1028(__add__)                                                        -> 9572/9568    0.006    0.095  decorators.py:72(__sympifyit_wrapper)
                                                                                     41246    0.011    0.012  numbers.py:989(__new__)
                                                                                    101636    0.019    0.019  {isinstance}
{method 'join' of 'str' objects}                                                ->      83    0.000    0.000  collections.py:373(<genexpr>)
                                                                                        83    0.000    0.000  collections.py:375(<genexpr>)
                                                                                       289    0.000    0.031  ikfast_IKFastSolver.py:6442(<genexpr>)
                                                                                        72    0.000    0.023  ikfast_IKFastSolver.py:7130(<genexpr>)
                                                                                        48    0.000    0.005  ikfast_IKFastSolver.py:7312(<genexpr>)
                                                                                       290    0.000    0.032  ikfast_IKFastSolver.py:7392(<genexpr>)
                                                                                       207    0.000    0.022  ikfast_IKFastSolver.py:7433(<genexpr>)
                                                                                       128    0.000    0.050  ikfast_IKFastSolver.py:8090(<genexpr>)
                                                                                         8    0.000    0.000  ikfast_generator_cpp.py:648(<genexpr>)
                                                                                        75    0.000    0.000  ikfast_generator_cpp.py:686(<genexpr>)
                                                                                         4    0.000    0.000  inversekinematics.py:377(<genexpr>)
                                                                                        28    0.000    0.000  inversekinematics.py:595(<genexpr>)
                                                                                         8    0.000    0.000  inversekinematics.py:598(<genexpr>)
                                                                                         7    0.000    0.000  inversekinematics.py:631(<genexpr>)
                                                                                         2    0.000    0.000  inversekinematics.py:633(<genexpr>)
                                                                                         6    0.000    0.000  inversekinematics.py:655(<genexpr>)
                                                                                        21    0.000    0.000  inversekinematics.py:662(<genexpr>)
                                                                                        18    0.000    0.000  inversekinematics.py:1291(<genexpr>)
                                                                                         8    0.000    0.000  misc.py:147(<genexpr>)
                                                                                       217    0.000    0.000  numbers.py:532(<genexpr>)
                                                                                        14    0.000    0.000  openrave.py:73(<genexpr>)
                                                                                      1302    0.000    0.000  version.py:254(<genexpr>)
numbers.py:1091(__ne__)                                                         ->    5492    0.007    0.020  numbers.py:770(__ne__)
                                                                                    233298    0.056    0.056  {isinstance}
densearith.py:615(dup_sub)                                                      ->   43972    0.005    0.005  densearith.py:494(dup_neg)
                                                                                    161088    0.024    0.030  densebasic.py:131(dup_degree)
                                                                                     79692    0.022    0.022  densebasic.py:238(dup_strip)
                                                                                         4    0.000    0.000  polyclasses.py:825(__sub__)
                                                                                       852    0.000    0.000  {abs}
                                                                                     80544    0.018    0.018  {zip}
expr.py:1842(_eval_expand_basic)                                                ->
expr.py:1857(_eval_expand_log)                                                  ->
power.py:91(base)                                                               ->
matrices.py:400(subs)                                                           ->       3    0.000    0.000  matrices.py:77(__init__)
                                                                                         3    0.000    0.163  {map}
matrices.py:401(<lambda>)                                                       ->      44    0.000    0.163  basic.py:719(subs)
function.py:179(<genexpr>)                                                      ->    8576    0.003    0.158  function.py:184(_should_evalf)
compatibility.py:115(K)                                                         ->
polynomialring.py:20(__init__)                                                  ->   14208    0.010    0.085  polyclasses.py:212(zero)
                                                                                     14208    0.007    0.047  polyclasses.py:216(one)
                                                                                     14208    0.001    0.001  {len}
matrices.py:2583(<lambda>)                                                      ->    2451    0.001    0.052  {_functools.reduce}
                                                                                      2451    0.003    0.104  {map}
{__import__}                                                                    ->       1    0.000    0.000  FixTk.py:1(<module>)
                                                                                         2    0.000    0.000  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  __init__.py:12(<module>)
                                                                                         1    0.000    0.000  __init__.py:14(<module>)
                                                                                         1    0.023    0.064  __init__.py:22(<module>)
                                                                                         9    0.000    0.000  __init__.py:22(find_module)
                                                                                         2    0.000    0.009  __init__.py:34(load_module)
                                                                                         1    0.000    0.000  colorize.py:4(<module>)
                                                                                         1    0.000    0.001  cython.py:7(<module>)
                                                                                         1    0.010    0.080  ikfast.py:179(<module>)
                                                                                         1    0.000    0.000  sets.py:3(<module>)
                                                                                         1    0.000    0.000  six.py:1(<module>)
                                                                                        23    0.000    0.000  six.py:184(find_module)
                                                                                         2    0.000    0.000  six.py:195(load_module)
                                                                                         1    0.000    0.006  specifiers.py:14(<module>)
                                                                                         1    0.000    0.000  unicode_escape.py:8(<module>)
                                                                                         1    0.000    0.000  unixccompiler.py:14(<module>)
                                                                                         1    0.000    0.002  version.py:14(<module>)
numbers.py:294(__new__)                                                         ->    9095    0.005    0.006  basic.py:82(__new__)
                                                                                      9268    0.018    0.080  ctx_mp_python.py:47(__new__)
                                                                                     21660    0.017    0.024  libmpf.py:64(dps_to_prec)
                                                                                         2    0.000    0.000  libmpf.py:1284(from_str)
                                                                                     12390    0.003    0.003  numbers.py:989(__new__)
                                                                                       175    0.000    0.000  singleton.py:65(__new__)
                                                                                     40198    0.006    0.006  {isinstance}
pythonrationaltype.py:26(__init__)                                              ->   42803    0.122    0.122  numbers.py:36(igcd)
cse_main.py:119(insert)                                                         ->    5952    0.004    0.013  basic.py:374(__eq__)
                                                                                      2829    0.005    0.132  expr.py:450(count_ops)
                                                                                      2829    0.001    0.001  {_bisect.bisect}
                                                                                      3292    0.001    0.001  {method 'insert' of 'list' objects}
{method 'setdefault' of 'dict' objects}                                         ->  222703    0.029    0.030  basic.py:179(__hash__)
                                                                                         7    0.000    0.000  basic.py:374(__eq__)
                                                                                       396    0.000    0.000  numbers.py:448(__hash__)
                                                                                      1917    0.001    0.002  numbers.py:819(__hash__)
                                                                                     17938    0.009    0.024  numbers.py:1126(__hash__)
                                                                                       166    0.000    0.000  numbers.py:1760(__hash__)
power.py:95(exp)                                                                ->
densearith.py:571(dmp_add)                                                      -> 131881/131815    0.020    0.027  densearith.py:534(dup_add)
                                                                                 27894/18671    0.010    0.032  densearith.py:571(dmp_add)
                                                                                     97021    0.020    0.052  densebasic.py:148(dmp_degree)
                                                                                      6229    0.004    0.006  densebasic.py:264(dmp_strip)
                                                                                      3884    0.000    0.000  {abs}
                                                                                     10113    0.003    0.003  {zip}
expr.py:197(<genexpr>)                                                          -> 38708/22175    0.038    0.097  expr.py:176(is_number)
                                                                                     41486    0.004    0.004  numbers.py:197(is_number)
                                                                                     72210    0.008    0.008  symbol.py:96(is_number)
simplify.py:705(trigsimp)                                                       ->      85    0.000    0.003  cache.py:74(wrapper)
                                                                                        16    0.001    0.138  simplify.py:751(trigsimp_nonrecursive)
polynomials.py:46(polyroots)                                                    ->      55    0.000    0.000  <string>:2(__eq__)
                                                                                        59    0.000    0.000  <string>:2(__mul__)
                                                                                        76    0.000    0.000  ctx_base.py:65(_re)
                                                                                       148    0.000    0.000  ctx_base.py:70(_im)
                                                                                       127    0.000    0.000  ctx_mp_python.py:155(__pos__)
                                                                                      1663    0.000    0.003  ctx_mp_python.py:177(__lt__)
                                                                                       197    0.000    0.002  ctx_mp_python.py:199(__rdiv__)
                                                                                       148    0.000    0.002  ctx_mp_python.py:366(__new__)
                                                                                        72    0.000    0.000  ctx_mp_python.py:378(<lambda>)
                                                                                         4    0.000    0.000  ctx_mp_python.py:379(<lambda>)
                                                                                        76    0.000    0.000  ctx_mp_python.py:400(__pos__)
                                                                                      3784    0.002    0.019  ctx_mp_python.py:477(__sub__)
                                                                                      2784    0.002    0.040  ctx_mp_python.py:510(__div__)
                                                                                       110    0.000    0.000  ctx_mp_python.py:610(_set_prec)
                                                                                       110    0.000    0.000  ctx_mp_python.py:618(<lambda>)
                                                                                        61    0.000    0.001  ctx_mp_python.py:621(convert)
                                                                                      1000    0.001    0.044  polynomials.py:156(<lambda>)
                                                                                      2663    0.001    0.014  {abs}
                                                                                       190    0.000    0.000  {len}
                                                                                       359    0.000    0.002  {max}
                                                                                        55    0.000    0.001  {method 'sort' of 'list' objects}
                                                                                      1000    0.000    0.000  {range}
euclidtools.py:1256(_dmp_zz_gcd_interpolate)                                    ->    2754    0.001    0.037  densearith.py:339(dmp_quo_ground)
                                                                                       134    0.000    0.001  densearith.py:511(dmp_neg)
                                                                                      2754    0.003    0.033  densearith.py:652(dmp_sub)
                                                                                      1116    0.001    0.001  densebasic.py:58(dmp_ground_LC)
                                                                                      3870    0.001    0.001  densebasic.py:653(dmp_zero_p)
                                                                                      2754    0.002    0.061  densetools.py:489(dmp_ground_trunc)
                                                                                      1116    0.000    0.000  domain.py:387(is_negative)
                                                                                      2754    0.001    0.001  {method 'insert' of 'list' objects}
densetools.py:602(dmp_ground_content)                                           ->   20953    0.005    0.007  densebasic.py:653(dmp_zero_p)
                                                                                     22525    0.014    0.056  densetools.py:571(dup_content)
                                                                                 40622/6880    0.027    0.124  densetools.py:602(dmp_ground_content)
                                                                                     40622    0.005    0.005  domain.py:379(is_one)
                                                                                     40622    0.012    0.040  pythonintegerring.py:93(gcd)
simplify.py:751(trigsimp_nonrecursive)                                          ->    1148    0.000    0.000  basic.py:179(__hash__)
                                                                                        60    0.000    0.000  basic.py:647(args)
                                                                                       112    0.000    0.003  basic.py:719(subs)
                                                                                       332    0.000    0.110  basic.py:1085(match)
                                                                                      1704    0.001    0.008  cache.py:74(wrapper)
                                                                                      2024    0.001    0.013  decorators.py:72(__sympifyit_wrapper)
                                                                                        32    0.000    0.000  expr.py:70(__neg__)
                                                                                        48    0.000    0.000  numbers.py:197(is_number)
                                                                                        16    0.000    0.000  numbers.py:1028(__add__)
                                                                                        64    0.000    0.001  numbers.py:1056(__mul__)
                                                                                       164    0.000    0.000  numbers.py:1084(__eq__)
                                                                                        32    0.000    0.000  power.py:91(base)
                                                                                        32    0.000    0.000  power.py:95(exp)
                                                                                    208/48    0.002    0.100  simplify.py:751(trigsimp_nonrecursive)
                                                                                        48    0.000    0.000  symbol.py:149(__new__)
                                                                                        60    0.000    0.001  {map}
numbers.py:162(__float__)                                                       ->   60054    0.026    0.039  libmpf.py:429(to_float)
                                                                                     26498    0.003    0.003  numbers.py:288(_as_mpf_val)
                                                                                      8454    0.003    0.046  numbers.py:739(_as_mpf_val)
                                                                                     25101    0.009    0.016  numbers.py:982(_as_mpf_val)
                                                                                         1    0.000    0.000  numbers.py:1501(_as_mpf_val)
{method 'items' of 'dict' objects}                                              ->
ikfast_IKFastSolver.py:9340(AreAllImaginaryByEval)                              ->       2    0.000    0.002  assumptions.py:365(getit)
                                                                                        80    0.000    0.033  basic.py:719(subs)
                                                                                        80    0.000    0.100  evalf.py:983(evalf)
densetools.py:724(dmp_ground_extract)                                           ->     846    0.001    0.015  densearith.py:339(dmp_quo_ground)
                                                                                      1902    0.004    0.114  densetools.py:602(dmp_ground_content)
                                                                                       951    0.000    0.000  domain.py:379(is_one)
                                                                                       951    0.000    0.001  pythonintegerring.py:93(gcd)
expr.py:102(__pow__)                                                            -> 26294/26168    0.033    0.117  cache.py:74(wrapper)
__init__.py:171(InitializeFromParser)                                           ->       1    0.000    0.080  inversekinematics.py:1309(<lambda>)
                                                                                         1    0.000    0.000  misc.py:152(parseGlobal)
                                                                                         1    0.000    0.000  misc.py:163(parseEnvironment)
                                                                                         1    0.000    0.000  optparse.py:1368(parse_args)
                                                                                         1    0.000    0.000  {hasattr}
                                                                                         2    0.000    0.000  {len}
                                                                                         2    0.005    0.005  {posix.system}
numbers.py:436(__le__)                                                          ->    5199    0.009    0.031  evalf.py:983(evalf)
                                                                                      5199    0.003    0.006  libmpf.py:605(mpf_le)
                                                                                      5199    0.001    0.001  numbers.py:288(_as_mpf_val)
                                                                                      5199    0.002    0.080  sympify.py:161(_sympify)
                                                                                     10398    0.002    0.002  {isinstance}
libmpf.py:465(from_rational)                                                    ->   41770    0.013    0.038  libmpf.py:330(from_int)
                                                                                     20885    0.035    0.077  libmpf.py:924(mpf_div)
{abs}                                                                           ->    1811    0.001    0.002  ctx_mp_python.py:149(__abs__)
                                                                                      1000    0.001    0.011  ctx_mp_python.py:406(__abs__)
                                                                                       496    0.001    0.095  expr.py:72(__abs__)
                                                                                      5245    0.004    0.011  numbers.py:390(__abs__)
                                                                                       509    0.000    0.000  numbers.py:1018(__abs__)
                                                                                       114    0.000    0.000  numbers.py:1345(__abs__)
                                                                                         4    0.000    0.000  numbers.py:1389(__abs__)
                                                                                        72    0.000    0.000  numbers.py:1415(__abs__)
                                                                                        14    0.000    0.000  numbers.py:1452(__abs__)
numbers.py:678(__add__)                                                         ->   10936    0.010    0.025  cache.py:74(wrapper)
                                                                                      7989    0.004    0.075  decorators.py:72(__sympifyit_wrapper)
                                                                                     35092    0.004    0.004  {isinstance}
polytools.py:3432(__eq__)                                                       ->      59    0.000    0.000  domain.py:316(__ne__)
                                                                                       855    0.001    0.001  polyclasses.py:867(__eq__)
                                                                                       796    0.000    0.001  polynomialring.py:46(__ne__)
                                                                                       838    0.002    0.123  polytools.py:80(__new__)
                                                                                       838    0.000    0.000  polytools.py:437(get_domain)
numbers.py:319(_new)                                                            ->   82117    0.056    0.071  basic.py:82(__new__)
expr.py:41(<genexpr>)                                                           -> 9241/5033    0.007    0.126  expr.py:16(key_inner)
function.py:224(is_commutative)                                                 ->   72274    0.008    0.008  basic.py:647(args)
                                                                                      2659    0.000    0.000  function.py:226(<genexpr>)
                                                                                     72274    0.024    0.060  {all}
add.py:211(_eval_derivative)                                                    ->     751    0.000    0.000  basic.py:647(args)
                                                                                       751    0.001    0.007  cache.py:74(wrapper)
                                                                                 2151/2145    0.003    0.117  expr.py:1831(diff)
relational.py:119(__new__)                                                      ->    2814    0.001    0.112  assumptions.py:365(getit)
                                                                                      2832    0.002    0.002  basic.py:82(__new__)
                                                                                        18    0.000    0.000  expr.py:176(is_number)
                                                                                      2538    0.001    0.001  relational.py:109(get_relational_class)
                                                                                      5664    0.001    0.008  sympify.py:161(_sympify)
exprtools.py:276(quo)                                                           ->    4036    0.010    0.063  exprtools.py:264(mul)
                                                                                      4036    0.005    0.060  exprtools.py:273(inv)
expr.py:16(key_inner)                                                           -> 4774/2608    0.018    0.096  expr.py:12(sort_key)
                                                                                       188    0.000    0.000  numbers.py:176(sort_key)
                                                                                      4279    0.009    0.041  symbol.py:72(sort_key)
                                                                                      9241    0.002    0.002  {isinstance}
relational.py:19(Eq)                                                            ->    2538    0.003    0.125  relational.py:119(__new__)
core.py:252(__gt__)                                                             ->   31829    0.056    0.109  core.py:220(__cmp__)
ikfast_IKFastSolver.py:2299(iterateThreeIntersectingAxes)                       ->       1    0.000    0.000  __init__.py:1157(info)
                                                                                        21    0.000    0.025  expr.py:1869(expand)
                                                                                         6    0.000    0.000  ikfast_IKFastSolver.py:157(__init__)
                                                                                         7    0.000    0.051  ikfast_IKFastSolver.py:400(multiplyMatrix)
                                                                                         6    0.000    0.000  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                        50    0.000    0.016  ikfast_IKFastSolver.py:618(has)
                                                                                         7    0.000    0.015  ikfast_IKFastSolver.py:2188(_ExtractTranslationsOutsideOfMatrixMultiplication)
                                                                                        21    0.000    0.016  ikfast_IKFastSolver.py:2438(RoundEquationTerms)
                                                                                        71    0.000    0.001  matrices.py:227(__getitem__)
                                                                                         3    0.000    0.000  matrices.py:276(__setitem__)
                                                                                         2    0.000    0.000  matrices.py:404(__sub__)
                                                                                         1    0.000    0.000  matrices.py:407(__mul__)
                                                                                         4    0.000    0.000  {len}
                                                                                         7    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {range}
                                                                                         4    0.000    0.000  {sum}
ikfast_generator_cpp.py:1771(WriteDictEquations)                                ->     681    0.000    0.000  basic.py:179(__hash__)
                                                                                       681    0.001    0.018  expr.py:450(count_ops)
                                                                                       108    0.002    0.103  ikfast_generator_cpp.py:1795(_WriteDictEquations)
                                                                                         4    0.000    0.000  {cStringIO.StringIO}
                                                                                      1589    0.000    0.000  {len}
                                                                                       681    0.000    0.000  {method 'append' of 'list' objects}
densetools.py:697(dup_extract)                                                  ->    3444    0.003    0.003  densearith.py:310(dup_quo_ground)
                                                                                      8120    0.008    0.108  densetools.py:571(dup_content)
                                                                                      4060    0.000    0.000  domain.py:379(is_one)
                                                                                      4060    0.001    0.004  pythonintegerring.py:93(gcd)
basic.py:789(_subs_dict)                                                        ->    5474    0.004    0.103  basic.py:769(_subs_list)
                                                                                      3890    0.001    0.006  basic.py:1223(__contains__)
                                                                                      5474    0.000    0.000  {isinstance}
                                                                                      6948    0.001    0.001  {method 'append' of 'list' objects}
                                                                                      5474    0.001    0.001  {method 'items' of 'dict' objects}
                                                                                      5474    0.000    0.000  {method 'reverse' of 'list' objects}
{method 'add' of 'set' objects}                                                 ->  146039    0.013    0.013  basic.py:179(__hash__)
                                                                                        81    0.000    0.000  logic.py:94(__hash__)
                                                                                       521    0.001    0.002  numbers.py:751(__eq__)
                                                                                     31330    0.009    0.023  numbers.py:819(__hash__)
                                                                                     28149    0.008    0.028  numbers.py:1126(__hash__)
polytools.py:3312(__add__)                                                      ->      54    0.000    0.070  polytools.py:80(__new__)
                                                                                        54    0.000    0.049  polytools.py:1214(add)
iterables.py:204(next)                                                          ->   82923    0.021    0.097  iterables.py:170(_preorder_traversal)
densetools.py:298(dmp_eval)                                                     ->    4195    0.002    0.081  densearith.py:287(dmp_mul_ground)
                                                                                      4195    0.005    0.032  densearith.py:571(dmp_add)
                                                                                      1908    0.000    0.000  densebasic.py:15(poly_LC)
expr.py:1845(_eval_expand_power_exp)                                            ->
densebasic.py:964(dup_to_dict)                                                  ->  107302    0.021    0.025  densebasic.py:131(dup_degree)
                                                                                      5642    0.002    0.004  polyclasses.py:905(__nonzero__)
                                                                                     43554    0.006    0.006  pythonrationaltype.py:177(__nonzero__)
power.py:74(__new__)                                                            ->    3573    0.003    0.004  basic.py:82(__new__)
                                                                                        43    0.000    0.000  complexes.py:273(_eval_power)
                                                                                      3161    0.000    0.000  expr.py:233(_eval_power)
                                                                                       347    0.000    0.001  function.py:224(is_commutative)
                                                                                       945    0.003    0.059  mul.py:399(_eval_power)
                                                                                        14    0.000    0.000  numbers.py:370(_eval_power)
                                                                                   130/129    0.000    0.003  numbers.py:696(_eval_power)
                                                                                   248/242    0.002    0.009  numbers.py:1137(_eval_power)
                                                                                         4    0.000    0.000  numbers.py:1353(_eval_power)
                                                                                         8    0.000    0.000  numbers.py:1423(_eval_power)
                                                                                         2    0.000    0.000  numbers.py:1918(_eval_power)
                                                                                        79    0.000    0.002  power.py:103(_eval_power)
                                                                                     20460    0.006    0.031  sympify.py:161(_sympify)
expr.py:1848(_eval_expand_power_base)                                           ->
expr.py:1854(_eval_expand_multinomial)                                          ->
pythonrationalfield.py:22(to_sympy)                                             ->   42454    0.029    0.065  cache.py:74(wrapper)
                                                                                     42454    0.005    0.005  pythonrationaltype.py:211(numer)
                                                                                     42454    0.004    0.004  pythonrationaltype.py:215(denom)
{method 'index' of 'list' objects}                                              ->    1533    0.001    0.002  basic.py:374(__eq__)
                                                                                        95    0.000    0.001  basic.py:471(__repr__)
numbers.py:201(as_coeff_mul)                                                    ->    3332    0.003    0.049  assumptions.py:365(getit)
                                                                                      1319    0.001    0.004  numbers.py:337(__neg__)
symbol.py:127(__new__)                                                          ->   42010    0.029    0.077  symbol.py:56(__new_stage2__)
ikfast_IKFastSolver.py:157(__init__)                                            ->   18270    0.012    0.047  cache.py:74(wrapper)
                                                                                      2610    0.002    0.032  decorators.py:72(__sympifyit_wrapper)
                                                                                     10440    0.004    0.018  symbol.py:35(__new__)
expr.py:240(conjugate)                                                          -> 2940/482    0.006    0.109  cache.py:74(wrapper)
constructor.py:9(_construct_simple)                                             ->     509    0.001    0.034  constructor.py:14(<lambda>)
                                                                                     13698    0.002    0.002  constructor.py:16(<lambda>)
                                                                                     22547    0.021    0.023  polyoptions.py:60(getter)
                                                                                     10490    0.003    0.003  pythonintegerring.py:27(from_sympy)
                                                                                      2246    0.001    0.005  pythonrationalfield.py:26(from_sympy)
                                                                                     12736    0.001    0.001  {method 'append' of 'list' objects}
{built-in method __new__ of type object at 0x5653c9d8abc0}                      ->
expr.py:1851(_eval_expand_mul)                                                  ->
{reduce}                                                                        ->      18    0.000    0.002  matrices.py:386(__rmul__)
                                                                                        77    0.000    0.099  matrices.py:407(__mul__)
                                                                                      3230    0.002    0.004  numbers.py:1063(__rmul__)
domain.py:69(convert)                                                           ->   12112    0.007    0.011  domain.py:62(__call__)
                                                                                     29352    0.009    0.009  domain.py:109(of_type)
                                                                                         6    0.000    0.000  fractionfield.py:102(from_PolynomialRing)
                                                                                       792    0.002    0.052  polynomialring.py:54(from_sympy)
                                                                                         2    0.000    0.000  polynomialring.py:66(from_ZZ_python)
                                                                                        78    0.000    0.008  polynomialring.py:103(from_PolynomialRing)
                                                                                        46    0.000    0.000  pythonintegerring.py:27(from_sympy)
                                                                                         2    0.000    0.000  pythonintegerring.py:40(from_ZZ_python)
                                                                                       886    0.000    0.001  pythonintegerring.py:44(from_QQ_python)
                                                                                       950    0.000    0.000  pythonrationalfield.py:36(from_ZZ_python)
                                                                                       838    0.001    0.001  sympify.py:23(sympify)
                                                                                      1970    0.000    0.000  {getattr}
                                                                                       838    0.000    0.000  {isinstance}
__init__.py:1(<module>)                                                         ->       1    0.000    0.001  Shadow.py:2(<module>)
                                                                                         2    0.000    0.000  UserDict.py:103(__contains__)
                                                                                         5    0.001    0.002  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  __init__.py:4(AskHandler)
                                                                                         1    0.000    0.000  __init__.py:4(VendorImporter)
                                                                                         1    0.000    0.010  __init__.py:7(<module>)
                                                                                         1    0.000    0.000  __init__.py:8(CommonHandler)
                                                                                         1    0.000    0.000  __init__.py:9(__init__)
                                                                                         1    0.000    0.000  __init__.py:15(AskCommutativeHandler)
                                                                                         1    0.000    0.000  __init__.py:22(find_module)
                                                                                         1    0.000    0.000  __init__.py:45(TautologicalHandler)
                                                                                         1    0.000    0.001  __init__.py:52(<module>)
                                                                                         1    0.000    0.000  __init__.py:63(install)
                                                                                         1    0.000    0.000  __init__.py:65(_getenv)
                                                                                         2    0.000    0.000  __init__.py:75(CFUNCTYPE)
                                                                                        14    0.000    0.000  __init__.py:144(_check_size)
                                                                                         1    0.000    0.000  __init__.py:156(py_object)
                                                                                         1    0.000    0.000  __init__.py:165(c_short)
                                                                                         1    0.000    0.000  __init__.py:169(c_ushort)
                                                                                         1    0.000    0.000  __init__.py:173(c_long)
                                                                                         1    0.000    0.000  __init__.py:177(c_ulong)
                                                                                         1    0.000    0.000  __init__.py:186(c_int)
                                                                                         1    0.000    0.000  __init__.py:190(c_uint)
                                                                                         1    0.000    0.000  __init__.py:194(c_float)
                                                                                         1    0.000    0.000  __init__.py:198(c_double)
                                                                                         1    0.000    0.000  __init__.py:202(c_longdouble)
                                                                                         1    0.000    0.000  __init__.py:223(c_ubyte)
                                                                                         1    0.000    0.000  __init__.py:230(c_byte)
                                                                                         1    0.000    0.000  __init__.py:235(c_char)
                                                                                         1    0.000    0.000  __init__.py:240(c_char_p)
                                                                                         1    0.000    0.000  __init__.py:252(c_void_p)
                                                                                         1    0.000    0.000  __init__.py:257(c_bool)
                                                                                         1    0.000    0.000  __init__.py:262(_reset_cache)
                                                                                         1    0.000    0.000  __init__.py:288(c_wchar_p)
                                                                                         1    0.000    0.000  __init__.py:291(c_wchar)
                                                                                         1    0.000    0.000  __init__.py:329(CDLL)
                                                                                         1    0.000    0.000  __init__.py:346(__init__)
                                                                                         1    0.000    0.000  __init__.py:385(PyDLL)
                                                                                         1    0.000    0.000  __init__.py:425(LibraryLoader)
                                                                                         2    0.000    0.000  __init__.py:426(__init__)
                                                                                         3    0.000    0.000  __init__.py:490(PYFUNCTYPE)
                                                                                         1    0.000    0.000  _endian.py:1(<module>)
                                                                                         1    0.000    0.004  _internal.py:6(<module>)
                                                                                         1    0.000    0.000  _version.py:7(<module>)
                                                                                         1    0.000    0.000  algebraicfield.py:1(<module>)
                                                                                         2    0.000    0.000  approximation.py:1(<module>)
                                                                                         1    0.000    0.000  arpack.py:7(<module>)
                                                                                         1    0.000    0.000  arraypad.py:5(<module>)
                                                                                         1    0.000    0.000  arraysetops.py:26(<module>)
                                                                                         1    0.000    0.000  arrayterator.py:9(<module>)
                                                                                         1    0.000    0.003  ask.py:1(<module>)
                                                                                         1    0.000    0.000  assume.py:1(<module>)
                                                                                         2    0.000    0.000  bessel.py:1(<module>)
                                                                                         1    0.000    0.000  boolalg.py:1(<module>)
                                                                                         2    0.000    0.000  calculus.py:1(<module>)
                                                                                         1    0.000    0.000  ccode.py:10(<module>)
                                                                                         1    0.000    0.000  characteristiczero.py:1(<module>)
                                                                                         1    0.000    0.001  complexes.py:1(<module>)
                                                                                         1    0.000    0.000  compositedomain.py:1(<module>)
                                                                                         1    0.000    0.000  copy_reg.py:14(pickle)
                                                                                         2    0.001    0.011  ctx_fp.py:1(<module>)
                                                                                         2    0.000    0.001  ctx_fp.py:18(__init__)
                                                                                         2    0.000    0.000  ctx_iv.py:1(<module>)
                                                                                         2    0.000    0.001  ctx_iv.py:278(__init__)
                                                                                         2    0.001    0.005  ctx_mp.py:4(<module>)
                                                                                         1    0.000    0.000  ctx_mp.py:57(__init__)
                                                                                         1    0.000    0.000  ctx_mp.py:62(__init__)
                                                                                         1    0.000    0.000  defchararray.py:17(<module>)
                                                                                         1    0.000    0.000  delta_functions.py:1(<module>)
                                                                                         2    0.000    0.000  differentiation.py:1(<module>)
                                                                                         1    0.000    0.000  domain.py:1(<module>)
                                                                                         2    0.000    0.000  elliptic.py:63(<module>)
                                                                                         2    0.000    0.000  expintegrals.py:1(<module>)
                                                                                         1    0.000    0.000  exponential.py:1(<module>)
                                                                                         1    0.000    0.000  expressiondomain.py:1(<module>)
                                                                                         1    0.000    0.000  expressiondomain.py:111(__init__)
                                                                                         2    0.000    0.000  extrapolation.py:1(<module>)
                                                                                         3    0.000    0.000  factorials.py:1(<module>)
                                                                                         1    0.000    0.000  fcode.py:18(<module>)
                                                                                         1    0.000    0.000  fftpack.py:32(<module>)
                                                                                         1    0.000    0.000  field.py:1(<module>)
                                                                                         1    0.000    0.000  financial.py:10(<module>)
                                                                                         1    0.000    0.000  finitefield.py:1(<module>)
                                                                                         1    0.000    0.000  fractionfield.py:1(<module>)
                                                                                         1    0.000    0.000  function_base.py:1(<module>)
                                                                                         2    0.000    0.000  functions.py:1(<module>)
                                                                                         1    0.000    0.000  gamma_functions.py:1(<module>)
                                                                                         1    0.000    0.000  getlimits.py:3(<module>)
                                                                                         1    0.000    0.000  gmpyfinitefield.py:1(<module>)
                                                                                         1    0.000    0.000  gmpyintegerring.py:21(__init__)
                                                                                         1    0.000    0.000  gmpyrationalfield.py:1(<module>)
                                                                                         1    0.000    0.000  gmpyrationalfield.py:21(__init__)
                                                                                         1    0.000    0.000  gtk.py:2(<module>)
                                                                                         1    0.000    0.000  helper.py:4(<module>)
                                                                                         1    0.000    0.000  hyperbolic.py:1(<module>)
                                                                                         2    0.000    0.000  hypergeometric.py:1(<module>)
                                                                                         1    0.001    0.001  index_tricks.py:1(<module>)
                                                                                         1    0.000    0.000  inference.py:1(<module>)
                                                                                         1    0.000    0.000  info.py:14(<module>)
                                                                                         1    0.000    0.000  info.py:18(<module>)
                                                                                         1    0.000    0.000  info.py:83(<module>)
                                                                                         1    0.000    0.000  info.py:86(<module>)
                                                                                         1    0.000    0.000  info.py:104(<module>)
                                                                                         1    0.000    0.000  info.py:154(<module>)
                                                                                         1    0.000    0.000  info.py:167(<module>)
                                                                                         1    0.000    0.000  info.py:184(<module>)
                                                                                         1    0.000    0.000  integerring.py:1(<module>)
                                                                                         1    0.000    0.000  integers.py:1(<module>)
                                                                                         1    0.000    0.000  iterative.py:1(<module>)
                                                                                         1    0.000    0.000  latex.py:3(<module>)
                                                                                         1    0.000    0.000  lgmres.py:4(<module>)
                                                                                         2    0.000    0.002  libhyper.py:6(<module>)
                                                                                         2    0.000    0.000  libmpc.py:3(<module>)
                                                                                         2    0.000    0.003  libmpf.py:3(<module>)
                                                                                         2    0.000    0.000  libmpi.py:4(<module>)
                                                                                         1    0.000    0.000  lobpcg.py:11(<module>)
                                                                                         1    0.000    0.000  lsqr.py:50(<module>)
                                                                                         1    0.000    0.000  machar.py:7(<module>)
                                                                                         1    0.000    0.000  mathml.py:3(<module>)
                                                                                         1    0.000    0.000  memmap.py:1(<module>)
                                                                                         1    0.000    0.000  minres.py:1(<module>)
                                                                                         1    0.000    0.000  mpmathcomplexdomain.py:1(<module>)
                                                                                         1    0.000    0.000  mpmathcomplexdomain.py:10(__init__)
                                                                                         1    0.000    0.000  mpmathrealdomain.py:1(<module>)
                                                                                         1    0.000    0.000  mpmathrealdomain.py:14(__init__)
                                                                                         1    0.000    0.000  nanfunctions.py:19(<module>)
                                                                                         2    0.000    0.000  nosetester.py:170(__init__)
                                                                                         2    0.000    0.000  nosetester.py:511(_numpy_tester)
                                                                                         1    0.000    0.001  npyio.py:1(<module>)
                                                                                         1    0.000    0.000  numberfields.py:1(<module>)
                                                                                         1    0.000    0.000  numbers.py:8(<module>)
                                                                                         1    0.001    0.002  numeric.py:1(<module>)
                                                                                         2    0.000    0.000  orthogonal.py:1(<module>)
                                                                                         2    0.000    0.000  os.py:472(__setitem__)
                                                                                         2    0.000    0.000  os.py:496(__delitem__)
                                                                                         1    0.000    0.002  partfrac.py:1(<module>)
                                                                                         1    0.000    0.001  polyfuncs.py:1(<module>)
                                                                                         1    0.000    0.001  polynomial.py:4(<module>)
                                                                                         1    0.000    0.000  polynomialring.py:1(<module>)
                                                                                         2    0.000    0.000  polynomials.py:1(<module>)
                                                                                         1    0.000    0.000  polynomials.py:7(<module>)
                                                                                         1    0.000    0.007  polytools.py:1(<module>)
                                                                                         1    0.000    0.001  pretty.py:1(<module>)
                                                                                         1    0.000    0.000  pretty_symbology.py:58(pretty_try_use_unicode)
                                                                                         1    0.000    0.000  preview.py:1(<module>)
                                                                                         1    0.000    0.000  printing.py:1(<module>)
                                                                                         1    0.000    0.000  products.py:1(<module>)
                                                                                         1    0.000    0.000  python.py:3(<module>)
                                                                                         1    0.000    0.000  pythoncomplexdomain.py:1(<module>)
                                                                                         1    0.000    0.000  pythonfinitefield.py:1(<module>)
                                                                                         1    0.000    0.000  pythonintegerring.py:20(__init__)
                                                                                         1    0.000    0.000  pythonrationalfield.py:1(<module>)
                                                                                         1    0.000    0.000  pythonrationalfield.py:19(__init__)
                                                                                         1    0.000    0.000  pythonrealdomain.py:1(<module>)
                                                                                         2    0.000    0.000  qfunctions.py:1(<module>)
                                                                                         1    0.000    0.000  rationalfield.py:1(<module>)
                                                                                         1    0.000    0.000  realdomain.py:1(<module>)
                                                                                         1    0.000    0.000  records.py:36(<module>)
                                                                                         1    0.000    0.000  refine.py:1(<module>)
                                                                                         1    0.000    0.000  ring.py:1(<module>)
                                                                                         1    0.000    0.005  rootoftools.py:1(<module>)
                                                                                         2    0.000    0.000  rszeta.py:49(<module>)
                                                                                         1    0.000    0.000  scimath.py:17(<module>)
                                                                                         1    0.000    0.000  session.py:1(<module>)
                                                                                         2    0.000    0.000  shape_base.py:1(<module>)
                                                                                         1    0.000    0.000  simpledomain.py:1(<module>)
                                                                                        10    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.001  summations.py:1(<module>)
                                                                                         1    0.000    0.000  sympyfinitefield.py:1(<module>)
                                                                                         1    0.000    0.000  sympyintegerring.py:16(__init__)
                                                                                         1    0.000    0.000  sympyrationalfield.py:1(<module>)
                                                                                         1    0.000    0.000  sympyrationalfield.py:22(__init__)
                                                                                         1    0.000    0.000  sympyrealdomain.py:1(<module>)
                                                                                         1    0.000    0.000  tensor_functions.py:1(<module>)
                                                                                         2    0.000    0.000  theta.py:1(<module>)
                                                                                         1    0.000    0.000  tree.py:3(<module>)
                                                                                         1    0.000    0.001  trigonometric.py:1(<module>)
                                                                                         1    0.000    0.020  type_check.py:3(<module>)
                                                                                         1    0.000    0.000  umfpack.py:6(<module>)
                                                                                         2    0.000    0.000  usertools.py:2(<module>)
                                                                                         2    0.000    0.000  zeta.py:1(<module>)
                                                                                         2    0.000    0.000  zetazeros.py:16(<module>)
                                                                                         1    0.000    0.000  {_ctypes.set_conversion_mode}
                                                                                        24    0.000    0.000  {_ctypes.sizeof}
                                                                                         4    0.000    0.000  {_struct.calcsize}
                                                                                         1    0.000    0.000  {dir}
                                                                                         1    0.000    0.000  {filter}
                                                                                         2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                         1    0.000    0.000  {numpy.core.multiarray.set_typeDict}
__init__.py:1145(debug)                                                         ->     297    0.001    0.105  __init__.py:1267(_log)
                                                                                       297    0.000    0.001  __init__.py:1360(isEnabledFor)
complexes.py:334(eval)                                                          ->     111    0.000    0.059  add.py:424(_eval_conjugate)
                                                                                       737    0.000    0.003  expr.py:236(_eval_conjugate)
                                                                                   813/411    0.002    0.104  mul.py:1188(_eval_conjugate)
                                                                                        56    0.000    0.000  numbers.py:165(_eval_conjugate)
                                                                                   329/324    0.001    0.036  power.py:248(_eval_conjugate)
mul.py:1188(_eval_conjugate)                                                    ->     813    0.000    0.000  basic.py:647(args)
                                                                                       813    0.003    0.055  cache.py:74(wrapper)
                                                                                  1916/845    0.004    0.081  expr.py:240(conjugate)
ikfast_generator_cpp.py:1795(_WriteDictEquations)                               ->     692    0.001    0.005  basic.py:475(__str__)
                                                                                        11    0.000    0.000  basic.py:719(subs)
                                                                                        11    0.000    0.001  expr.py:450(count_ops)
                                                                                        11    0.000    0.001  expr.py:1869(expand)
                                                                                       108    0.002    0.076  ikfast_generator_cpp.py:158(customcse)
                                                                                       692    0.002    0.018  ikfast_generator_cpp.py:1924(_WriteExprCode)
                                                                                       108    0.000    0.000  {len}
                                                                                        22    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       692    0.000    0.000  {method 'getvalue' of 'cStringIO.StringO' objects}
                                                                                      2108    0.000    0.000  {method 'write' of 'cStringIO.StringO' objects}
matrices.py:2585(<lambda>)                                                      ->    3255    0.002    0.075  decorators.py:72(__sympifyit_wrapper)
                                                                                      5446    0.004    0.022  numbers.py:1056(__mul__)
                                                                                       128    0.000    0.001  numbers.py:1063(__rmul__)
ikfast_IKFastSolver.py:400(multiplyMatrix)                                      ->      18    0.000    0.000  {len}
                                                                                        18    0.000    0.101  {reduce}
densebasic.py:677(dmp_zero)                                                     ->
densebasic.py:131(dup_degree)                                                   ->  503407    0.019    0.019  {len}
iterables.py:170(_preorder_traversal)                                           ->   71525    0.007    0.007  basic.py:647(args)
                                                                                 237321/78586    0.060    0.074  iterables.py:170(_preorder_traversal)
                                                                                     71525    0.009    0.009  {isinstance}
ccompiler.py:875(spawn)                                                         ->       2    0.000    0.095  spawn.py:18(spawn)
spawn.py:18(spawn)                                                              ->       2    0.000    0.095  spawn.py:116(_spawn_posix)
spawn.py:116(_spawn_posix)                                                      ->       2    0.000    0.000  log.py:39(info)
                                                                                         2    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         2    0.000    0.000  {posix.WEXITSTATUS}
                                                                                         2    0.000    0.000  {posix.WIFEXITED}
                                                                                         2    0.000    0.000  {posix.WIFSIGNALED}
                                                                                         2    0.004    0.004  {posix.fork}
                                                                                         2    0.091    0.091  {posix.waitpid}
expr.py:72(__abs__)                                                             ->     496    0.001    0.094  cache.py:74(wrapper)
ctx_mp_python.py:47(__new__)                                                    ->    9566    0.007    0.056  ctx_mp_python.py:80(mpf_convert_arg)
                                                                                      2638    0.003    0.003  libmpf.py:153(_normalize)
                                                                                      9566    0.004    0.006  libmpf.py:627(mpf_pos)
                                                                                     11908    0.002    0.002  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                      5276    0.000    0.000  {len}
power.py:648(matches)                                                           ->    2194    0.002    0.033  basic.py:719(subs)
                                                                                      3398    0.005    0.029  basic.py:1050(matches)
                                                                                      2182    0.001    0.008  basic.py:1210(matches)
                                                                                      1428    0.000    0.000  expr.py:963(as_base_exp)
                                                                                       744    0.000    0.000  function.py:301(as_base_exp)
                                                                                        98    0.000    0.003  mul.py:667(matches)
                                                                                       276    0.001    0.002  mul.py:795(as_base_exp)
                                                                                      3356    0.001    0.001  power.py:91(base)
                                                                                      2378    0.000    0.000  power.py:95(exp)
                                                                                       908    0.001    0.001  power.py:243(as_base_exp)
                                                                                      2038    0.002    0.003  symbol.py:179(matches)
                                                                                      3356    0.001    0.004  sympify.py:161(_sympify)
                                                                                      3540    0.000    0.000  {method 'copy' of 'dict' objects}
polyclasses.py:256(from_monoms_coeffs)                                          ->    4325    0.005    0.082  polyclasses.py:146(__init__)
                                                                                      4325    0.002    0.002  {zip}
{posix.waitpid}                                                                 ->
libmpf.py:924(mpf_div)                                                          ->   25800    0.008    0.019  libintmath.py:83(python_bitcount)
                                                                                        42    0.000    0.000  libmpf.py:153(_normalize)
                                                                                     26446    0.025    0.025  libmpf.py:208(_normalize1)
                                                                                     20264    0.004    0.004  {divmod}
densearith.py:287(dmp_mul_ground)                                               ->   32584    0.071    0.071  densearith.py:267(dup_mul_ground)
                                                                                 52176/9104    0.015    0.028  densearith.py:287(dmp_mul_ground)
exprtools.py:73(as_expr)                                                        ->    8200    0.007    0.029  cache.py:74(wrapper)
                                                                                      6777    0.003    0.048  decorators.py:72(__sympifyit_wrapper)
                                                                                      8200    0.001    0.001  {method 'iteritems' of 'dict' objects}
evalf.py:346(evalf_mul)                                                         ->    3811    0.000    0.000  basic.py:647(args)
                                                                                 7422/6998    0.014    0.075  evalf.py:953(evalf)
                                                                                       546    0.000    0.000  libintmath.py:83(python_bitcount)
                                                                                       546    0.000    0.000  libmpf.py:153(_normalize)
                                                                                      3811    0.000    0.000  {len}
                                                                                      4157    0.001    0.001  {min}
evalf.py:917(<lambda>)                                                          ->   11378    0.010    0.081  libmpf.py:465(from_rational)
mul.py:819(<lambda>)                                                            -> 43951/43625    0.046    0.071  operations.py:252(_eval_template_is_attr)
{method 'get' of 'dict' objects}                                                ->      13    0.000    0.000  basic.py:179(__hash__)
polyclasses.py:212(zero)                                                        ->   14208    0.024    0.074  polyclasses.py:146(__init__)
ikfast_IKFastSolver.py:3199(buildEquationsFromRotation)                         ->     306    0.000    0.000  basic.py:374(__eq__)
                                                                                        27    0.000    0.002  decorators.py:72(__sympifyit_wrapper)
                                                                                         3    0.000    0.004  ikfast_IKFastSolver.py:400(multiplyMatrix)
                                                                                        18    0.000    0.004  ikfast_IKFastSolver.py:618(has)
                                                                                        27    0.000    0.061  ikfast_IKFastSolver.py:635(trigsimp_new)
                                                                                         1    0.000    0.002  ikfast_IKFastSolver.py:881(sortComplexity)
                                                                                         6    0.000    0.000  matrices.py:171(transpose)
                                                                                        60    0.000    0.000  matrices.py:227(__getitem__)
                                                                                         6    0.000    0.009  matrices.py:407(__mul__)
                                                                                         9    0.000    0.000  {any}
                                                                                        30    0.000    0.000  {len}
                                                                                        36    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        16    0.000    0.000  {range}
                                                                                        10    0.000    0.000  {sum}
libmpf.py:64(dps_to_prec)                                                       ->   68641    0.012    0.012  {max}
                                                                                     68641    0.013    0.013  {round}
densebasic.py:238(dup_strip)                                                    ->   20594    0.009    0.017  polyclasses.py:905(__nonzero__)
                                                                                        54    0.000    0.000  polyclasses.py:1293(__nonzero__)
                                                                                     29791    0.005    0.005  pythonrationaltype.py:177(__nonzero__)
__init__.py:13(<module>)                                                        ->       1    0.000    0.004  __init__.py:10(<module>)
                                                                                         1    0.000    0.000  __init__.py:15(<module>)
                                                                                         1    0.000    0.064  __init__.py:15(loadlatest)
                                                                                         1    0.000    0.000  attrs.py:15(<module>)
                                                                                         1    0.000    0.001  base.py:12(<module>)
                                                                                         1    0.000    0.002  files.py:12(<module>)
                                                                                         1    0.000    0.000  filters.py:39(<module>)
                                                                                       259    0.001    0.001  functools.py:17(update_wrapper)
                                                                                         1    0.000    0.005  platform.py:10(<module>)
                                                                                         1    0.000    0.001  platform.py:1281(system)
                                                                                         3    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {h5py._conv.register_converters}
                                                                                         1    0.000    0.000  {h5py._errors.silence_errors}
                                                                                         1    0.000    0.000  {h5py.h5z._register_lzf}
                                                                                         1    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'startswith' of 'str' objects}
symbol.py:56(__new_stage2__)                                                    ->   44034    0.041    0.047  basic.py:82(__new__)
                                                                                     44034    0.004    0.004  {isinstance}
precedence.py:35(precedence_Mul)                                                ->   26966    0.005    0.005  assumptions.py:365(getit)
                                                                                     29894    0.026    0.055  cache.py:74(wrapper)
inversekinematics.py:258(__init__)                                              ->       2    0.000    0.000  __init__.py:49(__init__)
                                                                                         1    0.000    0.000  fromnumeric.py:1987(all)
                                                                                         2    0.000    0.080  {__import__}
inversekinematics.py:1309(<lambda>)                                             ->       1    0.000    0.080  inversekinematics.py:258(__init__)
                                                                                         1    0.000    0.000  metaclass.py:20(__new__)
ikfast.py:179(<module>)                                                         ->       1    0.000    0.059  __init__.py:10(<module>)
                                                                                         2    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  ikfast.py:325(fmod)
                                                                                         1    0.000    0.000  ikfast.py:331(atan2check)
                                                                                         1    0.000    0.000  ikfast.py:337(GinacUtils)
                                                                                         1    0.001    0.011  ikfast_IKFastSolver.py:1(<module>)
                                                                                         4    0.000    0.000  six.py:184(find_module)
basic.py:835(__contains__)                                                      ->   11187    0.006    0.020  basic.py:374(__eq__)
                                                                                     11187    0.001    0.001  basic.py:647(args)
                                                                                 3490/3234    0.004    0.036  basic.py:835(__contains__)
                                                                                     14316    0.005    0.036  basic.py:1223(__contains__)
                                                                                      2782    0.003    0.018  function.py:146(__contains__)
basic.py:1050(matches)                                                          ->    4773    0.003    0.007  basic.py:374(__eq__)
                                                                                      8888    0.001    0.001  basic.py:647(args)
                                                                                      2766    0.002    0.016  basic.py:719(subs)
                                                                                      1968    0.001    0.003  basic.py:1210(matches)
                                                                                       544    0.001    0.002  numbers.py:751(__eq__)
                                                                                       798    0.001    0.001  symbol.py:179(matches)
                                                                                     28858    0.021    0.021  sympify.py:23(sympify)
                                                                                     28858    0.004    0.004  {isinstance}
                                                                                      4444    0.000    0.000  {len}
                                                                                      2222    0.000    0.000  {method 'copy' of 'dict' objects}
                                                                                      2222    0.001    0.001  {zip}
densearith.py:47(dmp_add_term)                                                  ->   21262    0.006    0.014  densearith.py:571(dmp_add)
                                                                                     16633    0.010    0.020  densebasic.py:264(dmp_strip)
                                                                                     31090    0.005    0.006  densebasic.py:653(dmp_zero_p)
                                                                                      9828    0.002    0.003  densebasic.py:781(dmp_zeros)
                                                                                     31090    0.001    0.001  {len}
densearith.py:1546(dup_div)                                                     ->     852    0.010    0.075  densearith.py:1336(dup_rr_div)
libmpf.py:330(from_int)                                                         ->   22332    0.028    0.042  libmpf.py:291(from_man_exp)
libmpf.py:291(from_man_exp)                                                     ->   19449    0.007    0.016  libintmath.py:83(python_bitcount)
                                                                                     17555    0.020    0.020  libmpf.py:153(_normalize)
simplify.py:174(collect)                                                        ->     105    0.000    0.000  basic.py:179(__hash__)
                                                                                        19    0.000    0.000  basic.py:374(__eq__)
                                                                                        41    0.000    0.000  basic.py:647(args)
                                                                                       221    0.000    0.001  cache.py:74(wrapper)
                                                                                       291    0.000    0.007  decorators.py:72(__sympifyit_wrapper)
                                                                                        30    0.000    0.001  numbers.py:1028(__add__)
                                                                                        31    0.000    0.001  numbers.py:1056(__mul__)
                                                                                         1    0.000    0.000  numbers.py:1063(__rmul__)
                                                                                        30    0.000    0.000  numbers.py:1126(__hash__)
                                                                                       251    0.000    0.000  operations.py:264(make_args)
                                                                                      8929    0.006    0.032  simplify.py:116(separate)
                                                                                        83    0.002    0.044  simplify.py:174(collect)
                                                                                       105    0.000    0.001  simplify.py:300(make_expression)
                                                                                       166    0.000    0.000  simplify.py:345(parse_term)
                                                                                      4557    0.007    0.028  simplify.py:390(parse_expression)
                                                                                       116    0.000    0.000  sympify.py:23(sympify)
                                                                                       116    0.000    0.000  {hasattr}
                                                                                       116    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                       105    0.000    0.000  {method 'keys' of 'dict' objects}
{math.isinf}                                                                    ->     250    0.000    0.009  expr.py:124(__float__)
                                                                                     17670    0.011    0.057  numbers.py:162(__float__)
expr.py:963(as_base_exp)                                                        ->
ikfast_IKFastSolver.py:1014(checkpow)                                           ->      95    0.000    0.000  assumptions.py:365(getit)
                                                                                       150    0.000    0.002  cache.py:74(wrapper)
                                                                                      1029    0.002    0.071  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                        95    0.000    0.000  numbers.py:197(is_number)
                                                                                        12    0.000    0.000  numbers.py:424(__lt__)
                                                                                        83    0.000    0.000  numbers.py:1105(__lt__)
                                                                                       340    0.000    0.000  power.py:91(base)
                                                                                       190    0.000    0.000  power.py:95(exp)
                                                                                        95    0.000    0.000  {method 'append' of 'list' objects}
mul.py:1001(ndiv)                                                               ->    5617    0.003    0.064  decorators.py:72(__sympifyit_wrapper)
                                                                                      5617    0.001    0.001  numbers.py:1012(__int__)
function.py:131(func)                                                           ->
polytools.py:355(_unify)                                                        ->    2217    0.003    0.041  domain.py:191(unify)
                                                                                      4434    0.002    0.012  polyclasses.py:272(convert)
                                                                                      2217    0.002    0.002  polyutils.py:73(_unify_gens)
                                                                                      2217    0.005    0.005  sympify.py:23(sympify)
                                                                                      4434    0.000    0.000  {isinstance}
                                                                                      2217    0.000    0.000  {len}
function.py:236(_eval_evalf)                                                    ->     201    0.000    0.000  basic.py:647(args)
                                                                                         8    0.000    0.000  ctx_mp_python.py:610(_set_prec)
                                                                                         4    0.000    0.000  ctx_mp_python.py:618(<lambda>)
                                                                                         4    0.000    0.001  ctx_mp_python.py:982(f)
                                                                                       201    0.001    0.062  evalf.py:1063(_to_mpmath)
                                                                                         4    0.000    0.000  expr.py:164(_from_mpmath)
                                                                                      1812    0.000    0.000  function.py:131(func)
                                                                                       201    0.000    0.000  {getattr}
                                                                                      1812    0.001    0.001  {hasattr}
densearith.py:267(dup_mul_ground)                                               ->
str.py:362(_print_Float)                                                        ->    4848    0.005    0.006  libmpf.py:59(prec_to_dps)
                                                                                      4848    0.017    0.057  libmpf.py:1179(to_str)
expr.py:115(__rdiv__)                                                           ->   13092    0.014    0.063  cache.py:74(wrapper)
core.py:247(__lt__)                                                             ->   18146    0.032    0.060  core.py:220(__cmp__)
function.py:1271(expand_mul)                                                    ->    1337    0.005    0.065  expr.py:1869(expand)
                                                                                      1337    0.002    0.002  sympify.py:23(sympify)
mul.py:991(rejoin)                                                              ->    9134    0.012    0.044  cache.py:74(wrapper)
                                                                                         4    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                      9114    0.001    0.001  expr.py:963(as_base_exp)
                                                                                        16    0.000    0.000  function.py:301(as_base_exp)
                                                                                      9130    0.007    0.012  numbers.py:1056(__mul__)
                                                                                         4    0.000    0.000  power.py:243(as_base_exp)
facts.py:846(x_new_facts)                                                       ->
polytools.py:100(new)                                                           ->   26264    0.023    0.029  basic.py:82(__new__)
                                                                                     26264    0.003    0.003  {isinstance}
                                                                                     26264    0.002    0.002  {len}
str.py:336(_print_Pow)                                                          ->    5019    0.001    0.001  power.py:91(base)
                                                                                     10018    0.001    0.001  power.py:95(exp)
                                                                                      5019    0.002    0.003  precedence.py:57(precedence)
                                                                                 10018/9914    0.005    0.051  str.py:23(parenthesize)
mul.py:649(_eval_derivative)                                                    ->     785    0.000    0.000  basic.py:647(args)
                                                                                      1573    0.003    0.011  cache.py:74(wrapper)
                                                                                 1762/1756    0.002    0.049  expr.py:1831(diff)
                                                                                       785    0.000    0.000  {len}
                                                                                       788    0.000    0.000  {method 'append' of 'list' objects}
__init__.py:15(loadlatest)                                                      ->       1    0.000    0.064  __init__.py:18(_loadversion)
__init__.py:18(_loadversion)                                                    ->       1    0.000    0.064  {__import__}
                                                                                         1    0.000    0.000  {getattr}
                                                                                         1    0.000    0.000  {globals}
                                                                                         1    0.000    0.000  {locals}
__init__.py:22(<module>)                                                        ->       1    0.000    0.001  __init__.py:2(<module>)
                                                                                         1    0.002    0.033  __init__.py:23(<module>)
                                                                                         1    0.000    0.007  metaclass.py:1(<module>)
                                                                                         1    0.000    0.001  openravepy_ext.py:14(<module>)
polytools.py:5327(poly)                                                         ->     166    0.000    0.003  polyoptions.py:689(build_options)
                                                                                       166    0.000    0.000  polyoptions.py:699(allowed_flags)
                                                                                       166    0.001    0.060  polytools.py:5342(_poly)
                                                                                       166    0.000    0.000  sympify.py:23(sympify)
evalf.py:315(evalf_add)                                                         ->    4398    0.001    0.001  basic.py:647(args)
                                                                                       512    0.000    0.000  evalf.py:94(complex_accuracy)
                                                                                      1024    0.002    0.003  evalf.py:261(add_terms)
                                                                                 5282/4516    0.006    0.050  evalf.py:953(evalf)
                                                                                         3    0.000    0.000  {max}
                                                                                      4913    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                      4401    0.001    0.001  {min}
__init__.py:10(<module>)                                                        ->       5    0.001    0.020  __init__.py:1(<module>)
                                                                                         5    0.002    0.041  __init__.py:2(<module>)
                                                                                         1    0.000    0.001  __init__.py:11(<module>)
                                                                                         1    0.000    0.000  __init__.py:14(__sympy_debug)
                                                                                         1    0.000    0.001  __init__.py:18(<module>)
                                                                                         1    0.000    0.000  _inspect.py:7(<module>)
                                                                                         1    0.000    0.001  common.py:10(<module>)
                                                                                         1    0.000    0.000  evalf.py:911(_create_evalf_table)
                                                                                         1    0.000    0.000  py3k.py:4(<module>)
                                                                                        11    0.000    0.000  six.py:184(find_module)
                                                                                         2    0.000    0.000  {method 'extend' of 'list' objects}
euclidtools.py:1476(dup_inner_gcd)                                              ->    4714    0.008    0.057  euclidtools.py:1149(dup_zz_heu_gcd)
                                                                                      4714    0.001    0.002  polyconfig.py:29(query)
exprtools.py:264(mul)                                                           ->     455    0.000    0.002  decorators.py:72(__sympifyit_wrapper)
                                                                                      4036    0.013    0.020  exprtools.py:76(normal)
                                                                                      8072    0.009    0.017  exprtools.py:101(mul)
                                                                                      4036    0.001    0.001  exprtools.py:220(__init__)
                                                                                      2675    0.003    0.006  numbers.py:1056(__mul__)
                                                                                       906    0.001    0.006  numbers.py:1063(__rmul__)
evalf.py:1063(_to_mpmath)                                                       ->      33    0.000    0.031  add.py:395(as_real_imag)
                                                                                         4    0.000    0.000  ctx_mp_python.py:595(make_mpf)
                                                                                       201    0.000    0.002  evalf.py:953(evalf)
                                                                                        80    0.000    0.000  evalf.py:1060(_eval_evalf)
                                                                                        84    0.000    0.008  expr.py:935(as_real_imag)
                                                                                        84    0.000    0.009  mul.py:474(_eval_evalf)
                                                                                        33    0.000    0.012  operations.py:261(_eval_evalf)
ccompiler.py:510(compile)                                                       ->       1    0.000    0.000  ccompiler.py:323(_setup_compile)
                                                                                         1    0.000    0.000  ccompiler.py:367(_get_cc_args)
                                                                                         1    0.000    0.061  unixccompiler.py:115(_compile)
unixccompiler.py:115(_compile)                                                  ->       1    0.000    0.061  ccompiler.py:875(spawn)
densetools.py:489(dmp_ground_trunc)                                             ->    8272    0.004    0.008  densebasic.py:264(dmp_strip)
                                                                                     10566    0.042    0.044  densetools.py:440(dup_trunc)
                                                                                 16084/3535    0.006    0.026  densetools.py:489(dmp_ground_trunc)
polytools.py:1701(TC)                                                           ->     749    0.001    0.001  polyclasses.py:504(TC)
                                                                                       688    0.001    0.058  polynomialring.py:50(to_sympy)
                                                                                        61    0.000    0.000  pythonintegerring.py:23(to_sympy)
                                                                                       749    0.000    0.000  {hasattr}
exprtools.py:273(inv)                                                           ->    4036    0.003    0.054  decorators.py:72(__sympifyit_wrapper)
                                                                                      4036    0.001    0.001  exprtools.py:220(__init__)
add.py:315(_eval_is_negative)                                                   -> 21185/21137    0.005    0.043  assumptions.py:365(getit)
                                                                                      3529    0.005    0.010  cache.py:74(wrapper)
polytools.py:5342(_poly)                                                        ->     830    0.000    0.000  operations.py:264(make_args)
                                                                                       166    0.000    0.019  polytools.py:205(_from_expr)
                                                                                       332    0.002    0.028  polytools.py:544(reorder)
                                                                                       166    0.000    0.011  polytools.py:1327(pow)
                                                                                       166    0.001    0.034  polytools.py:5342(_poly)
                                                                                       332    0.000    0.000  power.py:91(base)
                                                                                       332    0.000    0.000  power.py:95(exp)
                                                                                       996    0.000    0.000  {method 'append' of 'list' objects}
mul.py:399(_eval_power)                                                         ->       9    0.000    0.004  assumptions.py:365(getit)
                                                                                       596    0.000    0.000  basic.py:647(args)
                                                                                       945    0.003    0.039  cache.py:74(wrapper)
                                                                                      1475    0.001    0.014  decorators.py:72(__sympifyit_wrapper)
                                                                                         3    0.000    0.000  expr.py:70(__neg__)
                                                                                         3    0.000    0.000  numbers.py:1056(__mul__)
                                                                                         4    0.000    0.000  numbers.py:1084(__eq__)
                                                                                         6    0.000    0.000  {len}
                                                                                         6    0.000    0.000  {method 'append' of 'list' objects}
mul.py:505(as_coeff_mul)                                                        ->   14554    0.002    0.002  basic.py:647(args)
                                                                                      2909    0.001    0.001  expr.py:977(as_coeff_mul)
                                                                                      4368    0.003    0.046  numbers.py:201(as_coeff_mul)
add.py:424(_eval_conjugate)                                                     ->     111    0.000    0.000  basic.py:647(args)
                                                                                       111    0.000    0.009  cache.py:74(wrapper)
                                                                                       542    0.002    0.049  expr.py:240(conjugate)
polyoptions.py:177(clone)                                                       ->   34208    0.007    0.007  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                     68416    0.006    0.006  {method 'iteritems' of 'dict' objects}
{_functools.reduce}                                                             ->    6378    0.002    0.050  matrices.py:2584(<lambda>)
                                                                                         3    0.000    0.000  numbers.py:57(ilcm)
libmpf.py:1179(to_str)                                                          ->    4848    0.017    0.038  libmpf.py:1127(to_digits_exp)
                                                                                      6262    0.000    0.000  {len}
                                                                                      4848    0.002    0.002  {method 'rstrip' of 'str' objects}
                                                                                      4848    0.001    0.001  {min}
densearith.py:149(dup_mul_term)                                                 ->
ctx_mp_python.py:80(mpf_convert_arg)                                            ->       2    0.000    0.000  libmpf.py:330(from_int)
                                                                                      9564    0.012    0.046  libmpf.py:410(from_float)
                                                                                       592    0.000    0.000  {isinstance}
mul.py:1048(<genexpr>)                                                          ->    8390    0.001    0.001  basic.py:179(__hash__)
                                                                                     11234    0.009    0.031  cache.py:74(wrapper)
                                                                                      1422    0.002    0.005  numbers.py:396(__eq__)
                                                                                      2844    0.001    0.002  numbers.py:448(__hash__)
                                                                                      5617    0.003    0.006  numbers.py:1091(__ne__)
numbers.py:907(as_numer_denom)                                                  ->   91200    0.024    0.024  numbers.py:989(__new__)
numbers.py:739(_as_mpf_val)                                                     ->    9439    0.006    0.050  libmpf.py:465(from_rational)
{math.isnan}                                                                    ->     250    0.000    0.007  expr.py:124(__float__)
                                                                                     17669    0.008    0.040  numbers.py:162(__float__)
matrices.py:2092(berkowitz_det)                                                 ->      24    0.000    0.007  decorators.py:72(__sympifyit_wrapper)
                                                                                        32    0.001    0.046  matrices.py:2008(berkowitz)
                                                                                         8    0.000    0.000  numbers.py:1063(__rmul__)
                                                                                        32    0.000    0.000  {len}
polynomialring.py:54(from_sympy)                                                ->     792    0.001    0.011  polynomialring.py:38(__call__)
                                                                                       792    0.001    0.039  polyutils.py:278(dict_from_expr)
                                                                                       736    0.000    0.000  pythonintegerring.py:27(from_sympy)
                                                                                        56    0.000    0.000  pythonrationalfield.py:26(from_sympy)
                                                                                       792    0.000    0.000  {method 'iteritems' of 'dict' objects}
numbers.py:1063(__rmul__)                                                       ->    8646    0.004    0.038  decorators.py:72(__sympifyit_wrapper)
                                                                                      4287    0.001    0.001  numbers.py:989(__new__)
                                                                                     21579    0.004    0.004  {isinstance}
libmpf.py:858(python_mpf_mul)                                                   ->   25026    0.008    0.008  libmpf.py:208(_normalize1)
densearith.py:339(dmp_quo_ground)                                               ->   23604    0.037    0.037  densearith.py:310(dup_quo_ground)
                                                                                 42074/5918    0.013    0.022  densearith.py:339(dmp_quo_ground)
expr.py:79(__radd__)                                                            ->    7499    0.011    0.047  cache.py:74(wrapper)
libmpf.py:511(mpf_eq)                                                           ->
__init__.py:15(<module>)                                                        ->       2    0.000    0.000  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  __init__.py:5(<module>)
                                                                                         6    0.000    0.000  __init__.py:22(find_module)
                                                                                         3    0.000    0.001  __init__.py:34(load_module)
                                                                                         1    0.000    0.000  __init__.py:93(PEP440Warning)
                                                                                         1    0.000    0.000  __init__.py:100(_SetuptoolsVersionMixin)
                                                                                         1    0.000    0.000  __init__.py:199(SetuptoolsVersion)
                                                                                         1    0.000    0.000  __init__.py:203(SetuptoolsLegacyVersion)
                                                                                         3    0.000    0.000  __init__.py:217(_declare_state)
                                                                                         1    0.000    0.000  __init__.py:319(ResolutionError)
                                                                                         1    0.000    0.000  __init__.py:325(VersionConflict)
                                                                                         1    0.000    0.000  __init__.py:357(ContextualVersionConflict)
                                                                                         1    0.000    0.000  __init__.py:370(DistributionNotFound)
                                                                                         1    0.000    0.000  __init__.py:397(UnknownExtra)
                                                                                         2    0.000    0.000  __init__.py:408(register_loader_type)
                                                                                         1    0.000    0.000  __init__.py:558(IMetadataProvider)
                                                                                         1    0.000    0.000  __init__.py:582(IResourceProvider)
                                                                                         1    0.000    0.000  __init__.py:610(WorkingSet)
                                                                                         1    0.000    0.000  __init__.py:974(Environment)
                                                                                         1    0.000    0.000  __init__.py:1114(ExtractionError)
                                                                                         1    0.000    0.000  __init__.py:1130(ResourceManager)
                                                                                         1    0.000    0.000  __init__.py:1387(MarkerEvaluation)
                                                                                         1    0.000    0.000  __init__.py:1584(NullProvider)
                                                                                         1    0.000    0.000  __init__.py:1688(EggProvider)
                                                                                         1    0.000    0.000  __init__.py:1709(DefaultProvider)
                                                                                         1    0.000    0.000  __init__.py:1728(_register)
                                                                                         1    0.000    0.000  __init__.py:1737(EmptyProvider)
                                                                                         1    0.000    0.000  __init__.py:1745(__init__)
                                                                                         1    0.000    0.000  __init__.py:1751(ZipManifests)
                                                                                         1    0.000    0.000  __init__.py:1778(MemoizedZipManifests)
                                                                                         1    0.000    0.000  __init__.py:1798(ContextualZipFile)
                                                                                         1    0.000    0.000  __init__.py:1818(ZipProvider)
                                                                                         1    0.000    0.000  __init__.py:1986(FileMetadata)
                                                                                         1    0.000    0.000  __init__.py:2015(PathMetadata)
                                                                                         1    0.000    0.000  __init__.py:2040(EggMetadata)
                                                                                         3    0.000    0.000  __init__.py:2056(register_finder)
                                                                                         3    0.000    0.000  __init__.py:2147(register_namespace_handler)
                                                                                         1    0.000    0.000  __init__.py:2343(EntryPoint)
                                                                                         1    0.000    0.000  __init__.py:2490(Distribution)
                                                                                         1    0.000    0.000  __init__.py:2823(EggInfoDistribution)
                                                                                         1    0.000    0.000  __init__.py:2843(DistInfoDistribution)
                                                                                         1    0.000    0.000  __init__.py:2926(RequirementParseError)
                                                                                         1    0.000    0.000  __init__.py:2995(Requirement)
                                                                                         2    0.000    0.028  __init__.py:3125(_call_aside)
                                                                                         1    0.000    0.000  chebyshev.py:87(<module>)
                                                                                         1    0.000    0.000  copy_reg.py:14(pickle)
                                                                                         1    0.000    0.000  hermite.py:59(<module>)
                                                                                         1    0.000    0.000  hermite_e.py:59(<module>)
                                                                                         1    0.000    0.000  laguerre.py:59(<module>)
                                                                                         1    0.000    0.000  legendre.py:83(<module>)
                                                                                         2    0.000    0.000  nosetester.py:511(_numpy_tester)
                                                                                         1    0.000    0.007  parser.py:5(<module>)
                                                                                         1    0.000    0.001  plistlib.py:51(<module>)
                                                                                         1    0.000    0.000  polynomial.py:55(<module>)
                                                                                        11    0.000    0.002  re.py:192(compile)
                                                                                         3    0.000    0.000  six.py:91(__get__)
                                                                                        16    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  symbol.py:3(<module>)
                                                                                         1    0.000    0.000  warnings.py:67(filterwarnings)
                                                                                         1    0.000    0.001  zipfile.py:3(<module>)
                                                                                         2    0.000    0.009  {__import__}
                                                                                         1    0.000    0.000  {globals}
                                                                                         2    0.000    0.000  {hasattr}
numbers.py:158(_as_mpf_op)                                                      ->     459    0.000    0.004  numbers.py:739(_as_mpf_val)
                                                                                     27105    0.013    0.022  numbers.py:982(_as_mpf_val)
                                                                                     27564    0.007    0.007  {max}
libmpf.py:676(mpf_add)                                                          ->   24559    0.005    0.011  libintmath.py:83(python_bitcount)
                                                                                      3563    0.002    0.002  libmpf.py:153(_normalize)
                                                                                     27442    0.014    0.014  libmpf.py:208(_normalize1)
                                                                                       743    0.000    0.000  libmpf.py:637(mpf_neg)
{iter}                                                                          ->
libintmath.py:83(python_bitcount)                                               ->   32272    0.008    0.008  {_bisect.bisect}
                                                                                       240    0.000    0.000  {math.log}
matrices.py:2584(<lambda>)                                                      ->    2152    0.001    0.034  decorators.py:72(__sympifyit_wrapper)
                                                                                      4187    0.002    0.014  numbers.py:1028(__add__)
                                                                                        39    0.000    0.000  numbers.py:1035(__radd__)
ikfast_IKFastSolver.py:8090(<genexpr>)                                          ->     110    0.000    0.050  basic.py:475(__str__)
__init__.py:2(<module>)                                                         ->       1    0.000    0.000  BaseManipulation.py:11(<module>)
                                                                                         1    0.000    0.000  Grasper.py:11(<module>)
                                                                                         1    0.000    0.000  TaskManipulation.py:11(<module>)
                                                                                         1    0.000    0.000  basic.py:1(<module>)
                                                                                         1    0.000    0.000  bsr.py:8(<module>)
                                                                                         1    0.000    0.000  cache.py:1(<module>)
                                                                                         1    0.000    0.000  coo.py:8(<module>)
                                                                                         1    0.000    0.000  csc.py:8(<module>)
                                                                                         1    0.000    0.000  csgraph.py:8(<module>)
                                                                                         1    0.000    0.000  csr.py:8(<module>)
                                                                                         1    0.000    0.001  cythonutils.py:1(<module>)
                                                                                         1    0.000    0.000  decorator.py:1(<module>)
                                                                                         1    0.000    0.000  dia.py:8(<module>)
                                                                                         1    0.000    0.027  expr.py:1(<module>)
                                                                                         1    0.000    0.000  exprtools.py:1(<module>)
                                                                                         1    0.000    0.000  iterables.py:1(<module>)
                                                                                         1    0.000    0.000  lambdify.py:4(<module>)
                                                                                         1    0.000    0.000  limits.py:1(<module>)
                                                                                         1    0.000    0.000  misc.py:1(<module>)
                                                                                         1    0.000    0.000  multidimensional.py:5(<module>)
                                                                                         1    0.000    0.000  order.py:1(<module>)
                                                                                         1    0.000    0.000  relational.py:1(<module>)
                                                                                         1    0.000    0.000  residues.py:4(<module>)
                                                                                         1    0.001    0.005  runtests.py:13(<module>)
                                                                                         1    0.000    0.000  series.py:1(<module>)
                                                                                         1    0.000    0.000  sets.py:1(<module>)
                                                                                         1    0.000    0.000  singleton.py:1(<module>)
                                                                                         7    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  source.py:3(<module>)
                                                                                         1    0.000    0.009  sympify.py:1(<module>)
                                                                                         1    0.000    0.000  test_attribute_create.py:12(<module>)
                                                                                         1    0.000    0.000  test_attrs.py:16(<module>)
                                                                                         1    0.000    0.000  test_attrs_data.py:14(<module>)
                                                                                         1    0.000    0.000  test_base.py:14(<module>)
                                                                                         1    0.000    0.000  test_dataset.py:17(<module>)
                                                                                         1    0.000    0.000  test_dataset_getitem.py:41(<module>)
                                                                                         1    0.000    0.000  test_dataset_swmr.py:1(<module>)
                                                                                         1    0.000    0.000  test_datatype.py:3(<module>)
                                                                                         1    0.000    0.000  test_datatype.py:14(<module>)
                                                                                         1    0.000    0.000  test_dimension_scales.py:10(<module>)
                                                                                         1    0.000    0.000  test_dims_dimensionproxy.py:12(<module>)
                                                                                         1    0.000    0.000  test_file.py:12(<module>)
                                                                                         1    0.000    0.000  test_file.py:14(<module>)
                                                                                         1    0.000    0.000  test_group.py:17(<module>)
                                                                                         1    0.000    0.000  test_h5.py:10(<module>)
                                                                                         1    0.000    0.000  test_h5f.py:10(<module>)
                                                                                         1    0.000    0.000  test_h5p.py:10(<module>)
                                                                                         1    0.000    0.000  test_h5t.py:10(<module>)
                                                                                         1    0.000    0.000  test_objects.py:10(<module>)
                                                                                         1    0.000    0.000  test_selections.py:12(<module>)
                                                                                         1    0.000    0.000  test_slicing.py:17(<module>)
                                                                                         1    0.000    0.000  test_threads.py:12(<module>)
                                                                                         1    0.000    0.000  textplot.py:1(<module>)
                                                                                         1    0.000    0.000  timeutils.py:1(<module>)
                                                                                         1    0.000    0.000  visualfeedback.py:11(<module>)
ikfast_IKFastSolver.py:437(forwardKinematicsChain)                              ->       7    0.000    0.001  __init__.py:1145(debug)
                                                                                         3    0.000    0.000  __init__.py:1157(info)
                                                                                        23    0.000    0.004  cache.py:74(wrapper)
                                                                                        31    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                         7    0.000    0.000  evalf.py:983(evalf)
                                                                                        14    0.000    0.004  ikfast_IKFastSolver.py:302(GetMatrixFromNumpy)
                                                                                         8    0.000    0.016  ikfast_IKFastSolver.py:305(RoundMatrix)
                                                                                         7    0.000    0.002  ikfast_IKFastSolver.py:354(numpyVectorToSympy)
                                                                                         7    0.000    0.009  ikfast_IKFastSolver.py:383(rodrigues2)
                                                                                         3    0.000    0.001  ikfast_IKFastSolver.py:388(affineInverse)
                                                                                         5    0.000    0.000  matrices.py:171(transpose)
                                                                                        29    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        17    0.000    0.000  matrices.py:276(__setitem__)
                                                                                         7    0.000    0.000  matrices.py:386(__rmul__)
                                                                                        25    0.000    0.010  matrices.py:407(__mul__)
                                                                                        11    0.000    0.000  matrices.py:2626(eye)
                                                                                         7    0.000    0.000  miscellaneous.py:30(sqrt)
                                                                                         6    0.000    0.000  numbers.py:189(__gt__)
                                                                                         8    0.000    0.000  numbers.py:1056(__mul__)
                                                                                         1    0.000    0.000  numbers.py:1098(__gt__)
                                                                                         7    0.000    0.000  symbol.py:35(__new__)
                                                                                        26    0.000    0.000  {len}
                                                                                        36    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        14    0.000    0.000  {numpy.core.multiarray.array}
                                                                                        10    0.000    0.000  {range}
libmpf.py:208(_normalize1)                                                      ->
polytools.py:1214(add)                                                          ->      54    0.000    0.002  polyclasses.py:417(add)
                                                                                        54    0.000    0.047  polytools.py:355(_unify)
                                                                                        54    0.000    0.000  polytools.py:393(per)
                                                                                        54    0.000    0.000  sympify.py:23(sympify)
                                                                                        54    0.000    0.000  {hasattr}
polytools.py:867(as_dict)                                                       ->     271    0.001    0.049  polyclasses.py:234(to_sympy_dict)
{method 'extend' of 'list' objects}                                             ->
trigonometric.py:284(_eval_expand_trig)                                         ->     943    0.000    0.000  basic.py:647(args)
                                                                                      1199    0.001    0.002  cache.py:74(wrapper)
                                                                                       192    0.000    0.002  decorators.py:72(__sympifyit_wrapper)
                                                                                       879    0.000    0.000  expr.py:977(as_coeff_mul)
                                                                                  1007/751    0.008    0.042  expr.py:1869(expand)
libmpf.py:410(from_float)                                                       ->    9842    0.010    0.031  libmpf.py:291(from_man_exp)
                                                                                       568    0.000    0.000  {math.frexp}
polyclasses.py:216(one)                                                         ->   14208    0.013    0.040  polyclasses.py:146(__init__)
{method 'pop' of 'list' objects}                                                ->
polytools.py:276(args)                                                          ->     215    0.000    0.046  polytools.py:892(as_expr)
matrices.py:2008(berkowitz)                                                     ->      32    0.000    0.001  add.py:517(__neg__)
                                                                                        24    0.000    0.000  expr.py:70(__neg__)
                                                                                        32    0.000    0.000  matrices.py:77(__init__)
                                                                                       384    0.000    0.002  matrices.py:227(__getitem__)
                                                                                       160    0.000    0.005  matrices.py:276(__setitem__)
                                                                                       192    0.000    0.028  matrices.py:407(__mul__)
                                                                                        64    0.000    0.007  matrices.py:460(__neg__)
                                                                                        32    0.000    0.000  matrices.py:1572(is_square)
                                                                                        64    0.000    0.001  matrices.py:2616(zeros)
                                                                                        12    0.000    0.000  numbers.py:1349(__neg__)
                                                                                        14    0.000    0.000  numbers.py:1393(__neg__)
                                                                                        14    0.000    0.000  numbers.py:1419(__neg__)
                                                                                        32    0.000    0.000  {map}
                                                                                        96    0.000    0.000  {method 'append' of 'list' objects}
trigonometric.py:506(_eval_expand_trig)                                         ->     952    0.000    0.000  basic.py:647(args)
                                                                                      1208    0.001    0.002  cache.py:74(wrapper)
                                                                                       192    0.000    0.002  decorators.py:72(__sympifyit_wrapper)
                                                                                       888    0.000    0.000  expr.py:977(as_coeff_mul)
                                                                                  1016/760    0.007    0.040  expr.py:1869(expand)
add.py:276(<lambda>)                                                            ->    3522    0.002    0.043  operations.py:252(_eval_template_is_attr)
ikfast_IKFastSolver.py:9451(<genexpr>)                                          ->    2369    0.001    0.043  decorators.py:72(__sympifyit_wrapper)
densetools.py:440(dup_trunc)                                                    ->   10566    0.002    0.002  densebasic.py:238(dup_strip)
                                                                                     18199    0.001    0.001  {method 'append' of 'list' objects}
polynomials.py:156(<lambda>)                                                    ->    1000    0.004    0.044  polynomials.py:9(polyval)
numbers.py:361(__add__)                                                         ->     427    0.000    0.010  decorators.py:72(__sympifyit_wrapper)
                                                                                      5096    0.005    0.007  libmpf.py:676(mpf_add)
                                                                                      5033    0.004    0.011  numbers.py:158(_as_mpf_op)
                                                                                        63    0.000    0.000  numbers.py:291(_as_mpf_op)
                                                                                      5096    0.003    0.008  numbers.py:319(_new)
                                                                                      5523    0.001    0.001  {isinstance}
exprtools.py:220(__init__)                                                      ->     188    0.000    0.002  add.py:527(primitive)
                                                                                      7215    0.001    0.001  basic.py:179(__hash__)
                                                                                      3355    0.005    0.009  cache.py:74(wrapper)
                                                                                       188    0.000    0.002  decorators.py:72(__sympifyit_wrapper)
                                                                                       524    0.000    0.000  expr.py:977(as_coeff_mul)
                                                                                      7215    0.004    0.007  exprtools.py:13(decompose_power)
                                                                                      8072    0.007    0.009  exprtools.py:60(__init__)
                                                                                       157    0.000    0.000  numbers.py:201(as_coeff_mul)
                                                                                       180    0.000    0.000  numbers.py:1056(__mul__)
                                                                                         8    0.000    0.000  numbers.py:1063(__rmul__)
polynomials.py:9(polyval)                                                       ->    3784    0.004    0.013  <string>:2(__add__)
                                                                                      3784    0.004    0.026  ctx_mp_python.py:491(__mul__)
                                                                                      1000    0.001    0.001  ctx_mp_python.py:621(convert)
basic.py:1223(__contains__)                                                     ->   13123    0.006    0.016  basic.py:374(__eq__)
                                                                                       214    0.000    0.001  numbers.py:751(__eq__)
                                                                                      5150    0.004    0.019  numbers.py:1084(__eq__)
numbers.py:982(_as_mpf_val)                                                     ->   57079    0.017    0.018  libmpf.py:330(from_int)
mul.py:869(_eval_is_irrational)                                                 -> 11689/11686    0.002    0.029  assumptions.py:365(getit)
                                                                                     11693    0.001    0.001  basic.py:647(args)
domain.py:191(unify)                                                            ->     846    0.000    0.000  basic.py:179(__hash__)
                                                                                        29    0.000    0.000  basic.py:374(__eq__)
                                                                                      2187    0.001    0.001  domain.py:312(__eq__)
                                                                                        43    0.000    0.000  polynomialring.py:20(__init__)
                                                                                        30    0.000    0.000  polynomialring.py:42(__eq__)
                                                                                        29    0.000    0.037  {sorted}
power.py:128(_eval_is_positive)                                                 -> 1718/1634    0.001    0.039  assumptions.py:365(getit)
                                                                                      1721    0.000    0.000  power.py:91(base)
                                                                                         2    0.000    0.000  power.py:95(exp)
ikfast_IKFastSolver.py:618(has)                                                 ->    2235    0.004    0.037  cache.py:74(wrapper)
                                                                                      1092    0.001    0.001  matrices.py:227(__getitem__)
                                                                                       694    0.000    0.000  {any}
                                                                                       694    0.000    0.000  {len}
ctx_mp_python.py:510(__div__)                                                   ->    2784    0.006    0.038  libmpc.py:194(mpc_div)
                                                                                      2784    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                      2784    0.000    0.000  {hasattr}
densearith.py:310(dup_quo_ground)                                               ->
expr.py:136(__lt__)                                                             ->     660    0.000    0.030  assumptions.py:365(getit)
                                                                                       318    0.000    0.008  decorators.py:72(__sympifyit_wrapper)
                                                                                       294    0.000    0.002  relational.py:119(__new__)
compatibility.py:116(__init__)                                                  ->
ikfast_IKFastSolver.py:250(convertRealToRational)                               ->     404    0.001    0.004  basic.py:475(__str__)
                                                                                       878    0.001    0.005  cache.py:74(wrapper)
                                                                                       202    0.000    0.004  decorators.py:72(__sympifyit_wrapper)
                                                                                       382    0.000    0.001  numbers.py:162(__float__)
                                                                                       404    0.001    0.005  numbers.py:294(__new__)
                                                                                       135    0.000    0.001  numbers.py:396(__eq__)
                                                                                       146    0.000    0.004  numbers.py:424(__lt__)
                                                                                        20    0.000    0.000  numbers.py:751(__eq__)
                                                                                        20    0.000    0.001  numbers.py:789(__lt__)
                                                                                        36    0.000    0.000  numbers.py:1084(__eq__)
                                                                                       308    0.000    0.010  numbers.py:1105(__lt__)
                                                                                       404    0.000    0.000  {len}
                                                                                       404    0.001    0.001  {round}
ikfast_AST.py:183(generate)                                                     ->       3    0.000    0.039  ikfast_generator_cpp.py:1327(generatePolynomialRoots)
ikfast_generator_cpp.py:1327(generatePolynomialRoots)                           ->       3    0.000    0.000  ikfast_generator_cpp.py:224(copyequations)
                                                                                         3    0.000    0.000  ikfast_generator_cpp.py:1771(WriteDictEquations)
                                                                                         7    0.000    0.039  ikfast_generator_cpp.py:1838(writeEquations)
                                                                                         3    0.000    0.000  ikfast_generator_cpp.py:2282(using_polyroots)
                                                                                         3    0.000    0.000  polytools.py:867(as_dict)
                                                                                         3    0.000    0.000  polytools.py:1620(degree)
                                                                                        37    0.000    0.000  {len}
                                                                                         9    0.000    0.000  {max}
                                                                                        11    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                         3    0.000    0.000  {method 'getvalue' of 'cStringIO.StringO' objects}
                                                                                         3    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         4    0.000    0.000  {range}
polyutils.py:278(dict_from_expr)                                                ->     792    0.000    0.000  polyoptions.py:60(getter)
                                                                                       792    0.001    0.017  polyoptions.py:689(build_options)
                                                                                       792    0.002    0.022  polyutils.py:283(_dict_from_expr)
numbers.py:1035(__radd__)                                                       ->    4803    0.003    0.025  decorators.py:72(__sympifyit_wrapper)
                                                                                      6062    0.002    0.002  numbers.py:989(__new__)
                                                                                     15668    0.003    0.003  {isinstance}
mul.py:740(_combine_inverse)                                                    ->    2304    0.001    0.004  basic.py:374(__eq__)
                                                                                       344    0.000    0.000  basic.py:647(args)
                                                                                       344    0.000    0.001  cache.py:74(wrapper)
                                                                                      1721    0.001    0.029  decorators.py:72(__sympifyit_wrapper)
                                                                                      3442    0.001    0.001  mul.py:748(check)
                                                                                        98    0.000    0.000  numbers.py:1084(__eq__)
                                                                                       172    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       172    0.000    0.001  {method 'remove' of 'list' objects}
libmpf.py:429(to_float)                                                         ->     148    0.000    0.000  {math.ldexp}
polyoptions.py:37(postprocess)                                                  ->
libmpc.py:194(mpc_div)                                                          ->    5568    0.004    0.009  libmpf.py:676(mpf_add)
                                                                                      2784    0.001    0.005  libmpf.py:771(mpf_sub)
                                                                                     16704    0.006    0.006  libmpf.py:858(python_mpf_mul)
                                                                                      5568    0.005    0.012  libmpf.py:924(mpf_div)
densebasic.py:758(dmp_ground)                                                   ->   14255    0.014    0.014  densebasic.py:677(dmp_zero)
                                                                                     12112    0.002    0.002  pythonrationaltype.py:177(__nonzero__)
polytools.py:477(_eval_subs)                                                    ->      95    0.000    0.000  basic.py:374(__eq__)
                                                                                        43    0.000    0.007  basic.py:719(subs)
                                                                                        43    0.000    0.031  polytools.py:892(as_expr)
exprtools.py:261(as_expr)                                                       ->    1482    0.001    0.019  decorators.py:72(__sympifyit_wrapper)
                                                                                      2776    0.002    0.010  exprtools.py:73(as_expr)
                                                                                      1048    0.001    0.005  numbers.py:1056(__mul__)
                                                                                       246    0.000    0.001  numbers.py:1063(__rmul__)
libmpf.py:1127(to_digits_exp)                                                   ->    4848    0.007    0.007  libintmath.py:123(bin_to_radix)
                                                                                      4848    0.003    0.005  libintmath.py:141(numeral_python)
                                                                                      4848    0.002    0.002  libmpf.py:483(to_fixed)
                                                                                      2877    0.001    0.001  libmpf.py:637(mpf_neg)
                                                                                      4848    0.000    0.000  {abs}
                                                                                      4848    0.000    0.000  {len}
                                                                                      9696    0.003    0.003  {math.log}
                                                                                      4848    0.001    0.001  {max}
numbers.py:848(gcd)                                                             ->    1240    0.001    0.002  cache.py:74(wrapper)
                                                                                      9862    0.002    0.004  core.py:220(__cmp__)
                                                                                      4931    0.007    0.007  numbers.py:36(igcd)
                                                                                      1021    0.001    0.001  numbers.py:57(ilcm)
                                                                                      3691    0.001    0.001  numbers.py:989(__new__)
                                                                                      4931    0.002    0.008  sympify.py:161(_sympify)
{method 'match' of '_sre.SRE_Pattern' objects}                                  ->
densetools.py:637(dup_primitive)                                                ->      29    0.000    0.000  densearith.py:310(dup_quo_ground)
                                                                                       389    0.001    0.037  densetools.py:571(dup_content)
                                                                                       389    0.000    0.000  domain.py:379(is_one)
function.py:226(<genexpr>)                                                      ->   72965    0.009    0.009  {getattr}
exprtools.py:287(gcd)                                                           ->    5296    0.005    0.010  exprtools.py:156(gcd)
                                                                                      2648    0.001    0.001  exprtools.py:220(__init__)
                                                                                      2648    0.008    0.021  numbers.py:848(gcd)
densearith.py:1780(dmp_max_norm)                                                ->   24796    0.005    0.018  densearith.py:1760(dup_max_norm)
                                                                                 43824/6085    0.015    0.035  densearith.py:1780(dmp_max_norm)
                                                                                     20930    0.002    0.002  {max}
pythonintegerring.py:101(sqrt)                                                  ->    1355    0.001    0.035  groundtypes.py:77(python_sqrt)
add.py:497(_eval_expand_trig)                                                   ->     250    0.000    0.000  basic.py:622(func)
                                                                                       250    0.000    0.000  basic.py:647(args)
                                                                                       250    0.000    0.004  cache.py:74(wrapper)
                                                                                       120    0.000    0.000  expr.py:1863(_eval_expand_trig)
                                                                                       597    0.003    0.030  mul.py:629(_eval_expand_trig)
                                                                                         3    0.000    0.000  trigonometric.py:284(_eval_expand_trig)
                                                                                         2    0.000    0.000  trigonometric.py:506(_eval_expand_trig)
                                                                                       722    0.000    0.000  {hasattr}
                                                                                       722    0.000    0.000  {method 'append' of 'list' objects}
libintmath.py:271(sqrtrem_python)                                               ->    2194    0.005    0.005  libintmath.py:197(isqrt_small_python)
                                                                                       168    0.024    0.025  libintmath.py:223(isqrt_fast_python)
power.py:248(_eval_conjugate)                                                   -> 329/324    0.001    0.027  cache.py:74(wrapper)
                                                                                       329    0.000    0.007  decorators.py:72(__sympifyit_wrapper)
                                                                                       329    0.000    0.000  power.py:91(base)
                                                                                       329    0.000    0.000  power.py:95(exp)
groundtypes.py:77(python_sqrt)                                                  ->    1355    0.001    0.034  libintmath.py:291(isqrt_python)
symbol.py:96(is_number)                                                         ->
expr.py:271(key)                                                                ->   11396    0.015    0.023  expr.py:260(neg)
                                                                                     11396    0.001    0.001  monomialtools.py:87(monomial_lex_key)
exprtools.py:60(__init__)                                                       ->   29093    0.003    0.003  basic.py:179(__hash__)
                                                                                     44268    0.004    0.004  {method 'keys' of 'dict' objects}
libintmath.py:291(isqrt_python)                                                 ->    1421    0.006    0.033  libintmath.py:271(sqrtrem_python)
ccompiler.py:682(link_shared_object)                                            ->       1    0.000    0.034  unixccompiler.py:152(link)
unixccompiler.py:152(link)                                                      ->       1    0.000    0.000  ccompiler.py:408(_fix_object_args)
                                                                                         1    0.000    0.000  ccompiler.py:426(_fix_lib_args)
                                                                                         1    0.000    0.000  ccompiler.py:461(_need_link)
                                                                                         1    0.000    0.034  ccompiler.py:875(spawn)
                                                                                         1    0.000    0.000  ccompiler.py:881(mkpath)
                                                                                         1    0.000    0.000  ccompiler.py:1057(gen_lib_options)
                                                                                         1    0.000    0.000  posixpath.py:120(dirname)
constructor.py:14(<lambda>)                                                     ->     509    0.002    0.031  ask.py:46(ask)
                                                                                       509    0.000    0.001  assume.py:123(__call__)
constructor.py:111(<genexpr>)                                                   ->    3021    0.004    0.010  expr.py:176(is_number)
                                                                                     39936    0.004    0.004  symbol.py:96(is_number)
ikfast_IKFastSolver.py:261(ConvertRealToRationalEquation)                       ->     110    0.000    0.000  basic.py:647(args)
                                                                                         4    0.000    0.000  cache.py:74(wrapper)
                                                                                        32    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                        26    0.000    0.000  expr.py:176(is_number)
                                                                                         4    0.000    0.000  function.py:131(func)
                                                                                       389    0.002    0.031  ikfast_IKFastSolver.py:250(convertRealToRational)
                                                                                    134/90    0.000    0.008  ikfast_IKFastSolver.py:261(ConvertRealToRationalEquation)
                                                                                       389    0.000    0.000  numbers.py:197(is_number)
                                                                                        30    0.000    0.000  numbers.py:1028(__add__)
                                                                                        24    0.000    0.000  numbers.py:1056(__mul__)
                                                                                        24    0.000    0.000  symbol.py:96(is_number)
compatibility.py:11(iterable)                                                   ->   30985    0.007    0.007  {isinstance}
                                                                                     34901    0.005    0.005  {iter}
mul.py:846(_eval_is_imaginary)                                                  ->   23380    0.004    0.018  assumptions.py:365(getit)
                                                                                     11690    0.001    0.001  basic.py:647(args)
__init__.py:23(<module>)                                                        ->       1    0.003    0.011  __init__.py:13(<module>)
                                                                                         1    0.000    0.000  __init__.py:46(DatabaseGenerator)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.001    0.001  convexdecomposition.py:63(<module>)
                                                                                         1    0.000    0.000  grasping.py:150(<module>)
                                                                                         1    0.000    0.001  inversekinematics.py:140(<module>)
                                                                                         1    0.000    0.017  inversereachability.py:46(<module>)
                                                                                         1    0.000    0.000  kinematicreachability.py:49(<module>)
                                                                                         1    0.000    0.000  linkstatistics.py:57(<module>)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
                                                                                         1    0.000    0.000  misc.py:15(<module>)
                                                                                         7    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  visibilitymodel.py:66(<module>)
__init__.py:106(<module>)                                                       ->       1    0.000    0.000  __config__.py:3(<module>)
                                                                                         1    0.000    0.000  __init__.py:1(<module>)
                                                                                         1    0.001    0.002  __init__.py:15(<module>)
                                                                                         1    0.001    0.003  __init__.py:41(<module>)
                                                                                         1    0.001    0.002  __init__.py:88(<module>)
                                                                                         1    0.000    0.000  _globals.py:17(<module>)
                                                                                         1    0.000    0.000  _import_tools.py:1(<module>)
                                                                                         1    0.000    0.025  add_newdocs.py:10(<module>)
                                                                                         1    0.000    0.000  ctypeslib.py:51(<module>)
                                                                                         2    0.000    0.000  nosetester.py:511(_numpy_tester)
                                                                                         1    0.000    0.000  version.py:5(<module>)
                                                                                         3    0.000    0.000  warnings.py:67(filterwarnings)
                                                                                         5    0.000    0.000  {method 'extend' of 'list' objects}
simplify.py:116(separate)                                                       ->    8929    0.014    0.019  expr.py:1869(expand)
                                                                                      8929    0.007    0.007  sympify.py:23(sympify)
ikfast_IKFastSolver.py:7392(<genexpr>)                                          ->     197    0.001    0.032  basic.py:475(__str__)
ikfast_IKFastSolver.py:846(<genexpr>)                                           -> 16347/16335    0.007    0.027  ikfast_IKFastSolver.py:839(codeComplexity)
ikfast_AST.py:43(__init__)                                                      ->     397    0.002    0.031  ikfast_AST.py:93(checkValidSolution)
re.py:230(_compile)                                                             ->     100    0.000    0.000  sre_compile.py:546(isstring)
                                                                                       100    0.000    0.031  sre_compile.py:567(compile)
                                                                                       100    0.000    0.000  {isinstance}
                                                                                       100    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {method 'clear' of 'dict' objects}
__init__.py:1254(makeRecord)                                                    ->    1311    0.015    0.029  __init__.py:237(__init__)
ask.py:46(ask)                                                                  ->    1059    0.000    0.000  assume.py:52(arg)
                                                                                      1059    0.000    0.000  assume.py:71(func)
                                                                                  1059/509    0.001    0.024  assume.py:83(_eval_ask)
                                                                                      1059    0.000    0.002  assume.py:123(__call__)
                                                                                      2118    0.002    0.007  operations.py:322(__new__)
                                                                                      1059    0.001    0.001  sympify.py:23(sympify)
                                                                                      1059    0.000    0.000  {isinstance}
re.py:192(compile)                                                              ->     101    0.001    0.031  re.py:230(_compile)
basic.py:580(free_symbols)                                                      -> 12005/6970    0.011    0.019  basic.py:580(free_symbols)
                                                                                     18515    0.002    0.002  basic.py:647(args)
                                                                                      7498    0.004    0.005  symbol.py:100(free_symbols)
                                                                                     18515    0.006    0.006  {_functools.reduce}
ikfast_IKFastSolver.py:6442(<genexpr>)                                          ->     195    0.001    0.031  basic.py:475(__str__)
sre_compile.py:567(compile)                                                     ->     100    0.000    0.000  sre_compile.py:546(isstring)
                                                                                       100    0.000    0.011  sre_compile.py:552(_code)
                                                                                       100    0.000    0.019  sre_parse.py:706(parse)
                                                                                       100    0.000    0.000  {_sre.compile}
                                                                                       100    0.000    0.000  {method 'items' of 'dict' objects}
{method 'difference' of 'set' objects}                                          ->       2    0.000    0.000  basic.py:374(__eq__)
                                                                                      5377    0.008    0.018  numbers.py:396(__eq__)
mul.py:629(_eval_expand_trig)                                                   ->     597    0.000    0.000  basic.py:622(func)
                                                                                       597    0.000    0.000  basic.py:647(args)
                                                                                       597    0.001    0.013  cache.py:74(wrapper)
                                                                                       639    0.000    0.000  expr.py:1863(_eval_expand_trig)
                                                                                        60    0.000    0.001  power.py:560(_eval_expand_trig)
                                                                                       509    0.001    0.006  trigonometric.py:284(_eval_expand_trig)
                                                                                       508    0.001    0.006  trigonometric.py:506(_eval_expand_trig)
                                                                                      1716    0.000    0.000  {hasattr}
                                                                                      1716    0.000    0.000  {method 'append' of 'list' objects}
polyclasses.py:905(__nonzero__)                                                 ->   43698    0.012    0.015  densebasic.py:653(dmp_zero_p)
polyclasses.py:939(_parse)                                                      ->     104    0.000    0.000  densebasic.py:653(dmp_zero_p)
                                                                                        98    0.000    0.000  densebasic.py:713(dmp_one)
                                                                                        92    0.000    0.000  densebasic.py:758(dmp_ground)
                                                                                        52    0.000    0.000  densebasic.py:829(dmp_negative_p)
                                                                                       104    0.001    0.029  densebasic.py:921(dmp_from_dict)
                                                                                        92    0.000    0.000  domain.py:69(convert)
cse_opts.py:9(assumed)                                                          ->   63227    0.012    0.016  {getattr}
{_bisect.bisect}                                                                ->
__init__.py:237(__init__)                                                       ->    1311    0.002    0.002  __init__.py:148(getLevelName)
                                                                                      1311    0.001    0.003  posixpath.py:97(splitext)
                                                                                      1311    0.001    0.002  posixpath.py:112(basename)
                                                                                      1311    0.001    0.001  threading.py:958(name)
                                                                                      1311    0.001    0.001  threading.py:1143(currentThread)
                                                                                      1311    0.000    0.000  {hasattr}
                                                                                       257    0.000    0.002  {isinstance}
                                                                                      1259    0.000    0.000  {len}
                                                                                      1311    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                      1311    0.001    0.001  {posix.getpid}
                                                                                      1311    0.000    0.000  {thread.get_ident}
                                                                                      1311    0.000    0.000  {time.time}
libmpf.py:153(_normalize)                                                       ->
str.py:232(<lambda>)                                                            ->    4183    0.002    0.014  precedence.py:57(precedence)
                                                                                      4183    0.002    0.013  str.py:23(parenthesize)
multinomial.py:22(multinomial_coefficients)                                     ->      99    0.000    0.000  multinomial.py:1(binomial_coefficients)
                                                                                      9256    0.001    0.001  multinomial.py:54(<genexpr>)
                                                                                      2536    0.000    0.000  multinomial.py:55(<genexpr>)
                                                                                     13000    0.001    0.001  {method 'get' of 'dict' objects}
                                                                                       579    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                      3500    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                      3500    0.002    0.002  {method 'update' of 'dict' objects}
                                                                                      3500    0.000    0.000  {min}
                                                                                       579    0.000    0.000  {range}
                                                                                     14957    0.003    0.003  {zip}
solvers.py:910(<lambda>)                                                        ->     877    0.000    0.019  decorators.py:72(__sympifyit_wrapper)
                                                                                       629    0.001    0.009  numbers.py:1056(__mul__)
densearith.py:511(dmp_neg)                                                      ->   31202    0.004    0.004  densearith.py:494(dup_neg)
                                                                                 52518/27520    0.014    0.018  densearith.py:511(dmp_neg)
mul.py:818(<lambda>)                                                            -> 11688/11683    0.009    0.023  operations.py:252(_eval_template_is_attr)
polytools.py:544(reorder)                                                       ->     332    0.000    0.004  polyclasses.py:146(__init__)
                                                                                       332    0.000    0.003  polyclasses.py:230(to_dict)
                                                                                       332    0.003    0.004  polyoptions.py:120(__init__)
                                                                                       332    0.000    0.001  polytools.py:404(per)
                                                                                       332    0.001    0.010  polyutils.py:26(_sort_gens)
                                                                                       332    0.001    0.003  polyutils.py:316(_dict_reorder)
                                                                                       332    0.000    0.000  {len}
                                                                                       332    0.000    0.000  {zip}
function.py:1540(<genexpr>)                                                     ->   29975    0.003    0.003  basic.py:647(args)
                                                                                     11761    0.002    0.002  numbers.py:1012(__int__)
__init__.py:3125(_call_aside)                                                   ->       1    0.000    0.000  __init__.py:3130(_initialize)
                                                                                         1    0.000    0.028  __init__.py:3140(_initialize_master_working_set)
__init__.py:3140(_initialize_master_working_set)                                ->       1    0.000    0.000  __init__.py:217(_declare_state)
                                                                                         1    0.000    0.012  __init__.py:626(_build_master)
                                                                                        31    0.000    0.011  __init__.py:668(add_entry)
                                                                                         1    0.000    0.005  __init__.py:948(subscribe)
                                                                                         1    0.000    0.000  {globals}
                                                                                         1    0.000    0.000  {locals}
                                                                                         1    0.000    0.000  {method 'update' of 'dict' objects}
densetools.py:665(dmp_ground_primitive)                                         ->      59    0.000    0.000  densearith.py:339(dmp_quo_ground)
                                                                                       954    0.000    0.000  densebasic.py:653(dmp_zero_p)
                                                                                       954    0.001    0.026  densetools.py:602(dmp_ground_content)
                                                                                         2    0.000    0.000  densetools.py:637(dup_primitive)
                                                                                       954    0.000    0.000  domain.py:379(is_one)
simplify.py:390(parse_expression)                                               ->    5148    0.002    0.013  basic.py:1085(match)
                                                                                       105    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                      4557    0.001    0.002  operations.py:264(make_args)
                                                                                      4557    0.003    0.004  simplify.py:345(parse_term)
                                                                                       105    0.000    0.000  {filter}
                                                                                     13671    0.001    0.001  {len}
                                                                                       105    0.000    0.000  {method 'append' of 'list' objects}
                                                                                      4557    0.001    0.001  {range}
densearith.py:534(dup_add)                                                      ->   16666    0.003    0.003  densebasic.py:131(dup_degree)
                                                                                      5359    0.001    0.001  densebasic.py:238(dup_strip)
                                                                                        46    0.000    0.001  polyclasses.py:813(__add__)
                                                                                        16    0.000    0.000  pythonrationaltype.py:75(__add__)
                                                                                      2974    0.000    0.000  {abs}
                                                                                      8333    0.002    0.002  {zip}
numbers.py:647(__neg__)                                                         ->   12409    0.008    0.020  cache.py:74(wrapper)
expr.py:1(<module>)                                                             ->       2    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.011  evalf.py:4(<module>)
                                                                                         1    0.000    0.000  expr.py:9(Expr)
                                                                                         1    0.000    0.000  expr.py:1991(AtomicExpr)
                                                                                         1    0.000    0.016  mul.py:1(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
pythonintegerring.py:23(to_sympy)                                               ->   31258    0.012    0.012  numbers.py:989(__new__)
ikfast_AST.py:534(generate)                                                     ->      80    0.004    0.027  ikfast_generator_cpp.py:1714(generateStoreSolution)
ikfast_generator_cpp.py:1714(generateStoreSolution)                             ->      80    0.000    0.009  __init__.py:1157(info)
                                                                                      2228    0.003    0.013  basic.py:475(__str__)
                                                                                        80    0.000    0.000  {cStringIO.StringIO}
                                                                                       726    0.000    0.000  {len}
                                                                                        80    0.000    0.000  {method 'getvalue' of 'cStringIO.StringO' objects}
                                                                                      3202    0.001    0.001  {method 'write' of 'cStringIO.StringO' objects}
                                                                                         6    0.000    0.000  {range}
matrices.py:227(__getitem__)                                                    ->     908    0.004    0.016  matrices.py:929(submatrix)
                                                                                      2837    0.001    0.001  matrices.py:3202(a2idx)
ctx_mp_python.py:491(__mul__)                                                   ->    1000    0.000    0.001  ctx_mp_python.py:432(mpc_convert_lhs)
                                                                                      2784    0.003    0.018  libmpc.py:145(mpc_mul)
                                                                                      1000    0.001    0.002  libmpc.py:173(mpc_mul_mpf)
                                                                                      3784    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                      4784    0.001    0.001  {hasattr}
                                                                                      1000    0.000    0.000  {isinstance}
libmpf.py:771(mpf_sub)                                                          ->   13223    0.009    0.023  libmpf.py:676(mpf_add)
ikfast_IKFastSolver.py:9467(det_bareis)                                         ->      16    0.000    0.000  basic.py:374(__eq__)
                                                                                        68    0.000    0.000  basic.py:399(__ne__)
                                                                                       898    0.000    0.010  decorators.py:72(__sympifyit_wrapper)
                                                                                         6    0.000    0.001  expr.py:1869(expand)
                                                                                      3810    0.002    0.004  matrices.py:227(__getitem__)
                                                                                       793    0.001    0.001  matrices.py:276(__setitem__)
                                                                                        65    0.000    0.001  matrices.py:789(row_swap)
                                                                                        68    0.000    0.000  matrices.py:1572(is_square)
                                                                                        10    0.000    0.000  numbers.py:197(is_number)
                                                                                       662    0.000    0.001  numbers.py:1042(__sub__)
                                                                                      1010    0.001    0.004  numbers.py:1056(__mul__)
                                                                                         5    0.000    0.000  numbers.py:1063(__rmul__)
                                                                                       165    0.000    0.000  numbers.py:1084(__eq__)
                                                                                       305    0.000    0.000  numbers.py:1091(__ne__)
                                                                                       290    0.000    0.000  {len}
                                                                                       613    0.000    0.000  {range}
ikfast_AST.py:161(subs)                                                         ->       8    0.000    0.010  basic.py:719(subs)
                                                                                         2    0.000    0.002  ikfast_AST.py:189(checkValidSolution)
                                                                                         3    0.000    0.013  polytools.py:80(__new__)
__init__.py:838(flush)                                                          ->    2622    0.002    0.005  __init__.py:703(acquire)
                                                                                      2622    0.001    0.005  __init__.py:710(release)
                                                                                      2622    0.001    0.001  {hasattr}
                                                                                      2622    0.012    0.012  {method 'flush' of 'file' objects}
add_newdocs.py:10(<module>)                                                     ->       1    0.001    0.024  __init__.py:1(<module>)
                                                                                       273    0.000    0.001  function_base.py:3944(add_newdoc)
                                                                                         2    0.000    0.000  {method 'format' of 'str' objects}
libintmath.py:223(isqrt_fast_python)                                            ->     149    0.000    0.000  libintmath.py:15(giant_steps)
                                                                                       149    0.000    0.001  libintmath.py:83(python_bitcount)
                                                                                       149    0.000    0.000  {min}
add.py:280(<lambda>)                                                            -> 3980/3973    0.005    0.023  operations.py:252(_eval_template_is_attr)
exprtools.py:101(mul)                                                           ->    2550    0.000    0.000  basic.py:179(__hash__)
                                                                                     12108    0.009    0.011  exprtools.py:60(__init__)
                                                                                     12108    0.001    0.001  {method 'iteritems' of 'dict' objects}
mul.py:926(_eval_is_odd)                                                        ->   11688    0.009    0.015  assumptions.py:365(getit)
add.py:527(primitive)                                                           ->    1576    0.000    0.000  basic.py:647(args)
                                                                                      1529    0.002    0.004  cache.py:74(wrapper)
                                                                                       459    0.000    0.000  expr.py:977(as_coeff_mul)
                                                                                       295    0.000    0.000  numbers.py:201(as_coeff_mul)
                                                                                      2283    0.006    0.016  numbers.py:848(gcd)
                                                                                       707    0.000    0.000  {method 'append' of 'list' objects}
mul.py:659(_matches_simple)                                                     ->    2670    0.003    0.005  cache.py:74(wrapper)
                                                                                       318    0.001    0.005  mul.py:740(_combine_inverse)
                                                                                       220    0.001    0.011  power.py:648(matches)
                                                                                        98    0.000    0.000  symbol.py:179(matches)
                                                                                      2670    0.000    0.000  {len}
assume.py:83(_eval_ask)                                                         ->    1059    0.000    0.000  assume.py:52(arg)
                                                                                      1059    0.000    0.000  assume.py:71(func)
                                                                                  1059/509    0.006    0.023  assume.py:132(eval)
expr.py:97(__rmul__)                                                            ->     707    0.001    0.023  cache.py:74(wrapper)
polyclasses.py:272(convert)                                                     ->     181    0.000    0.020  densebasic.py:508(dmp_convert)
                                                                                      4490    0.001    0.001  domain.py:312(__eq__)
                                                                                       181    0.000    0.000  polyclasses.py:146(__init__)
                                                                                        74    0.000    0.000  polynomialring.py:42(__eq__)
numbers.py:288(_as_mpf_val)                                                     ->
numbers.py:1049(__rsub__)                                                       ->    2650    0.001    0.020  decorators.py:72(__sympifyit_wrapper)
                                                                                        18    0.000    0.000  numbers.py:989(__new__)
                                                                                      5318    0.001    0.001  {isinstance}
expr.py:260(neg)                                                                ->   47581    0.005    0.005  {isinstance}
                                                                                     47581    0.003    0.003  {method 'append' of 'list' objects}
assume.py:132(eval)                                                             ->    1059    0.000    0.001  inspect.py:339(getmro)
                                                                                       289    0.000    0.016  sets.py:417(Mul)
                                                                                       261    0.000    0.000  sets.py:429(Rational)
                                                                                      1059    0.002    0.006  source.py:15(get_class)
                                                                                      5782    0.002    0.002  {getattr}
__init__.py:668(add_entry)                                                      ->     232    0.001    0.001  __init__.py:743(add)
                                                                                        62    0.000    0.001  __init__.py:2066(find_distributions)
                                                                                       284    0.002    0.020  __init__.py:2098(find_on_path)
                                                                                        62    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        62    0.000    0.000  {method 'setdefault' of 'dict' objects}
ikfast_IKFastSolver.py:7130(<genexpr>)                                          ->      60    0.000    0.023  basic.py:475(__str__)
add.py:227(_combine_inverse)                                                    ->     716    0.000    0.001  basic.py:374(__eq__)
                                                                                       716    0.000    0.012  decorators.py:72(__sympifyit_wrapper)
                                                                                       358    0.001    0.008  function.py:1271(expand_mul)
ikfast_IKFastSolver.py:7433(<genexpr>)                                          ->     136    0.000    0.022  basic.py:475(__str__)
{method 'copy' of 'dict' objects}                                               ->
ikfast_IKFastSolver.py:2438(RoundEquationTerms)                                 ->     452    0.000    0.000  basic.py:647(args)
                                                                                       197    0.000    0.000  cache.py:74(wrapper)
                                                                                       295    0.000    0.014  decorators.py:72(__sympifyit_wrapper)
                                                                                       113    0.000    0.002  evalf.py:983(evalf)
                                                                                        10    0.000    0.000  expr.py:176(is_number)
                                                                                       197    0.000    0.000  function.py:131(func)
                                                                                   642/123    0.001    0.016  ikfast_IKFastSolver.py:2438(RoundEquationTerms)
                                                                                       113    0.000    0.000  numbers.py:197(is_number)
                                                                                       109    0.000    0.003  numbers.py:436(__le__)
                                                                                        25    0.000    0.001  numbers.py:1028(__add__)
                                                                                        10    0.000    0.000  numbers.py:1056(__mul__)
                                                                                         4    0.000    0.000  numbers.py:1119(__le__)
                                                                                       215    0.000    0.000  symbol.py:96(is_number)
                                                                                       113    0.000    0.000  {abs}
densearith.py:898(dmp_sqr)                                                      ->    2075    0.001    0.001  densearith.py:287(dmp_mul_ground)
                                                                                      2088    0.001    0.001  densearith.py:571(dmp_add)
                                                                                       225    0.000    0.001  densearith.py:812(dmp_mul)
                                                                                      1390    0.003    0.004  densearith.py:857(dup_sqr)
                                                                                 1863/1389    0.002    0.007  densearith.py:898(dmp_sqr)
                                                                                      6536    0.001    0.004  densebasic.py:148(dmp_degree)
                                                                                      1651    0.001    0.002  densebasic.py:264(dmp_strip)
                                                                                      2075    0.001    0.001  densebasic.py:677(dmp_zero)
                                                                                      2075    0.001    0.001  domain.py:62(__call__)
                                                                                      2075    0.000    0.000  {max}
                                                                                      2075    0.000    0.000  {method 'append' of 'list' objects}
                                                                                      2075    0.000    0.000  {min}
expr.py:88(__rsub__)                                                            ->    3084    0.003    0.015  cache.py:74(wrapper)
                                                                                       384    0.000    0.003  expr.py:70(__neg__)
                                                                                        50    0.000    0.000  numbers.py:337(__neg__)
                                                                                      2496    0.001    0.002  numbers.py:1015(__neg__)
                                                                                        34    0.000    0.000  numbers.py:1349(__neg__)
                                                                                        60    0.000    0.000  numbers.py:1393(__neg__)
                                                                                        60    0.000    0.000  numbers.py:1419(__neg__)
basic.py:882(_match)                                                            ->   40803    0.007    0.007  {isinstance}
densebasic.py:1381(dmp_inflate)                                                 ->    2199    0.002    0.008  densebasic.py:1359(_rec_inflate)
                                                                                     20493    0.002    0.002  {all}
matrices.py:276(__setitem__)                                                    ->     160    0.000    0.000  compatibility.py:54(is_sequence)
                                                                                       105    0.001    0.002  matrices.py:361(copyin_matrix)
                                                                                       160    0.000    0.004  matrices.py:372(copyin_list)
                                                                                       284    0.000    0.000  matrices.py:3202(a2idx)
                                                                                      7741    0.008    0.008  sympify.py:23(sympify)
                                                                                       265    0.000    0.000  {isinstance}
add.py:191(as_coeff_add)                                                        ->   24038    0.002    0.002  basic.py:647(args)
                                                                                      9469    0.002    0.002  expr.py:1012(as_coeff_add)
                                                                                      2550    0.001    0.001  numbers.py:209(as_coeff_add)
expr.py:1012(as_coeff_add)                                                      ->
densearith.py:17(dup_add_term)                                                  ->   24166    0.001    0.001  {len}
ikfast_IKFastSolver.py:6794(_AddToGlobalSymbols)                                ->   15374    0.007    0.016  basic.py:374(__eq__)
                                                                                      1246    0.000    0.000  {method 'append' of 'list' objects}
numbers.py:523(__new__)                                                         ->    2970    0.002    0.003  basic.py:82(__new__)
                                                                                       105    0.000    0.001  cache.py:74(wrapper)
                                                                                        32    0.000    0.000  decimal.py:514(__new__)
                                                                                        32    0.000    0.000  decimal.py:986(as_tuple)
                                                                                      3435    0.007    0.007  numbers.py:36(igcd)
                                                                                       460    0.000    0.000  numbers.py:989(__new__)
                                                                                        41    0.000    0.000  sympify.py:23(sympify)
                                                                                      3435    0.000    0.000  {abs}
                                                                                      7102    0.001    0.001  {isinstance}
                                                                                        32    0.000    0.000  {method 'join' of 'str' objects}
evalf.py:918(<lambda>)                                                          ->    6696    0.003    0.017  libmpf.py:330(from_int)
densearith.py:857(dup_sqr)                                                      ->   14423    0.003    0.003  densebasic.py:131(dup_degree)
                                                                                     14423    0.001    0.001  densebasic.py:238(dup_strip)
                                                                                      4601    0.001    0.001  {max}
                                                                                      4601    0.000    0.000  {method 'append' of 'list' objects}
                                                                                      4601    0.001    0.001  {min}
__init__.py:2098(find_on_path)                                                  ->      60    0.000    0.000  __init__.py:1998(__init__)
                                                                                       172    0.000    0.000  __init__.py:2035(__init__)
                                                                                        52    0.000    0.001  __init__.py:2280(_normalize_cached)
                                                                                        52    0.000    0.000  __init__.py:2287(_is_unpacked_egg)
                                                                                       232    0.001    0.015  __init__.py:2506(from_location)
                                                                                       284    0.000    0.001  genericpath.py:46(isdir)
                                                                                       232    0.000    0.000  posixpath.py:61(join)
                                                                                      4958    0.000    0.000  {method 'endswith' of 'str' objects}
                                                                                      2538    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                        52    0.000    0.000  {posix.access}
                                                                                        52    0.001    0.001  {posix.listdir}
numbers.py:197(is_number)                                                       ->
numbers.py:410(__ne__)                                                          ->    4877    0.001    0.001  libmpf.py:511(mpf_eq)
                                                                                      4602    0.001    0.001  numbers.py:288(_as_mpf_val)
                                                                                       275    0.000    0.000  numbers.py:982(_as_mpf_val)
                                                                                      4933    0.002    0.008  sympify.py:161(_sympify)
                                                                                     14631    0.002    0.002  {isinstance}
type_check.py:3(<module>)                                                       ->       1    0.004    0.020  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  ufunclike.py:5(<module>)
densebasic.py:508(dmp_convert)                                                  ->    3053    0.002    0.003  densebasic.py:264(dmp_strip)
                                                                                      1635    0.002    0.013  densebasic.py:486(dup_convert)
                                                                                  4507/186    0.003    0.017  densebasic.py:508(dmp_convert)
                                                                                      2919    0.000    0.000  domain.py:312(__eq__)
                                                                                       134    0.000    0.000  polynomialring.py:42(__eq__)
evalf.py:141(evalf_abs)                                                         ->    1604    0.000    0.000  basic.py:647(args)
                                                                                      1604    0.001    0.018  evalf.py:120(get_abs)
{method 'iterkeys' of 'dict' objects}                                           ->
polyoptions.py:443(postprocess)                                                 ->    3472    0.000    0.000  basic.py:179(__hash__)
exprtools.py:76(normal)                                                         ->    9026    0.001    0.001  basic.py:179(__hash__)
                                                                                      8072    0.005    0.006  exprtools.py:60(__init__)
                                                                                      4036    0.000    0.000  {method 'iteritems' of 'dict' objects}
densearith.py:1760(dup_max_norm)                                                ->   11261    0.007    0.012  densearith.py:454(dup_abs)
                                                                                     11261    0.001    0.001  {max}
function.py:146(__contains__)                                                   ->    2916    0.001    0.004  basic.py:374(__eq__)
                                                                                      2916    0.002    0.011  basic.py:835(__contains__)
                                                                                      2916    0.000    0.000  function.py:131(func)
ctx_mp_python.py:477(__sub__)                                                   ->    3784    0.002    0.016  libmpc.py:96(mpc_sub)
                                                                                      3784    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                      3784    0.000    0.000  {hasattr}
sre_parse.py:706(parse)                                                         ->     100    0.000    0.000  sre_parse.py:67(__init__)
                                                                                       100    0.000    0.000  sre_parse.py:189(__init__)
                                                                                       100    0.000    0.000  sre_parse.py:212(get)
                                                                                       100    0.000    0.019  sre_parse.py:317(_parse_sub)
matrices.py:386(__rmul__)                                                       ->     191    0.000    0.002  matrices.py:77(__init__)
                                                                                       191    0.000    0.000  {hasattr}
                                                                                       191    0.000    0.016  {map}
fractionfield.py:50(to_sympy)                                                   ->      58    0.000    0.002  decorators.py:72(__sympifyit_wrapper)
                                                                                       116    0.000    0.004  polyclasses.py:234(to_sympy_dict)
                                                                                        58    0.000    0.000  polyclasses.py:1091(numer)
                                                                                        58    0.000    0.000  polyclasses.py:1095(denom)
                                                                                       116    0.002    0.012  polyutils.py:298(expr_from_dict)
sre_parse.py:317(_parse_sub)                                                    ->      73    0.000    0.000  sre_parse.py:92(__init__)
                                                                                       154    0.000    0.000  sre_parse.py:137(__len__)
                                                                                         2    0.000    0.000  sre_parse.py:139(__delitem__)
                                                                                       193    0.000    0.000  sre_parse.py:141(__getitem__)
                                                                                        74    0.000    0.000  sre_parse.py:149(append)
                                                                                       873    0.000    0.000  sre_parse.py:206(match)
                                                                                   567/106    0.007    0.018  sre_parse.py:395(_parse)
                                                                                       500    0.000    0.000  {len}
                                                                                       567    0.000    0.000  {method 'append' of 'list' objects}
{method 'insert' of 'list' objects}                                             ->
ring.py:15(exquo)                                                               ->
sre_parse.py:395(_parse)                                                        ->     219    0.000    0.000  sre_parse.py:74(opengroup)
                                                                                       219    0.000    0.000  sre_parse.py:85(closegroup)
                                                                                       567    0.000    0.000  sre_parse.py:92(__init__)
                                                                                      1449    0.000    0.000  sre_parse.py:137(__len__)
                                                                                      1449    0.001    0.001  sre_parse.py:141(__getitem__)
                                                                                       483    0.000    0.000  sre_parse.py:145(__setitem__)
                                                                                      1674    0.000    0.000  sre_parse.py:149(append)
                                                                                      2278    0.000    0.001  sre_parse.py:206(match)
                                                                                      9913    0.002    0.007  sre_parse.py:212(get)
                                                                                         2    0.000    0.000  sre_parse.py:216(tell)
                                                                                         1    0.000    0.000  sre_parse.py:218(seek)
                                                                                        71    0.000    0.000  sre_parse.py:227(isname)
                                                                                       151    0.000    0.000  sre_parse.py:236(_class_escape)
                                                                                       293    0.000    0.000  sre_parse.py:268(_escape)
                                                                                   306/140    0.001    0.013  sre_parse.py:317(_parse_sub)
                                                                                       955    0.000    0.000  {len}
                                                                                       646    0.000    0.000  {method 'append' of 'list' objects}
                                                                                      1288    0.000    0.000  {ord}
ikfast_IKFastSolver.py:881(sortComplexity)                                      ->      92    0.000    0.000  {len}
                                                                                        77    0.000    0.018  {method 'sort' of 'list' objects}
ikfast_AST.py:200(getPresetCheckForZeros)                                       ->       7    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                         2    0.000    0.000  numbers.py:1028(__add__)
                                                                                         3    0.000    0.001  polytools.py:758(terms)
                                                                                         9    0.000    0.018  {abs}
                                                                                         9    0.000    0.000  {len}
libmpc.py:145(mpc_mul)                                                          ->    2784    0.002    0.005  libmpf.py:676(mpf_add)
                                                                                      2784    0.001    0.006  libmpf.py:771(mpf_sub)
                                                                                     11136    0.004    0.004  libmpf.py:858(python_mpf_mul)
trigonometric.py:584(eval)                                                      ->     220    0.000    0.000  basic.py:622(func)
                                                                                        55    0.000    0.004  expr.py:761(as_coefficient)
                                                                                        55    0.000    0.014  expr.py:1247(could_extract_minus_sign)
                                                                                        55    0.000    0.000  trigonometric.py:45(_pi_coeff)
evalf.py:120(get_abs)                                                           ->    1604    0.002    0.017  evalf.py:953(evalf)
polyoptions.py:267(<genexpr>)                                                   ->     461    0.000    0.001  function.py:224(is_commutative)
ikfast_IKFastSolver.py:884(<lambda>)                                            ->    1626    0.001    0.018  ikfast_IKFastSolver.py:839(codeComplexity)
iterables.py:435(numbered_symbols)                                              ->    2381    0.002    0.013  symbol.py:35(__new__)
matrices.py:104(<lambda>)                                                       ->   15103    0.012    0.014  sympify.py:23(sympify)
inversereachability.py:46(<module>)                                             ->       1    0.000    0.000  __init__.py:74(<module>)
                                                                                         1    0.001    0.017  __init__.py:126(<module>)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  bisect.py:1(<module>)
                                                                                         1    0.000    0.000  inversereachability.py:77(InverseReachabilityModel)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
                                                                                         5    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {method 'split' of 'str' objects}
numbers.py:334(_eval_is_negative)                                               ->    1402    0.001    0.007  ctx_mp_python.py:177(__lt__)
                                                                                      1402    0.002    0.008  numbers.py:284(num)
numbers.py:176(sort_key)                                                        ->   38647    0.004    0.004  numbers.py:172(class_key)
numbers.py:337(__neg__)                                                         ->    6611    0.002    0.002  libmpf.py:637(mpf_neg)
                                                                                      6611    0.004    0.009  numbers.py:319(_new)
densebasic.py:781(dmp_zeros)                                                    ->   21172    0.005    0.005  densebasic.py:677(dmp_zero)
__init__.py:126(<module>)                                                       ->       1    0.000    0.000  anneal.py:5(<module>)
                                                                                         1    0.000    0.000  cobyla.py:9(<module>)
                                                                                         1    0.000    0.000  lbfgsb.py:27(<module>)
                                                                                         1    0.000    0.000  minpack.py:1(<module>)
                                                                                         1    0.000    0.000  nnls.py:1(<module>)
                                                                                         1    0.000    0.009  nonlin.py:110(<module>)
                                                                                         2    0.000    0.000  nosetester.py:170(__init__)
                                                                                         1    0.000    0.006  optimize.py:18(<module>)
                                                                                        10    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  slsqp.py:6(<module>)
                                                                                         1    0.000    0.000  tnc.py:33(<module>)
                                                                                         1    0.000    0.000  zeros.py:2(<module>)
                                                                                         1    0.000    0.000  {dir}
                                                                                         1    0.000    0.000  {filter}
{method 'write' of 'cStringIO.StringO' objects}                                 ->
{method 'pop' of 'dict' objects}                                                ->     104    0.000    0.000  numbers.py:1126(__hash__)
ctx_mp_python.py:167(_cmp)                                                      ->    2638    0.002    0.003  ctx_mp_python.py:98(mpf_convert_rhs)
                                                                                      3184    0.002    0.004  libmpf.py:600(mpf_lt)
                                                                                      2097    0.001    0.003  libmpf.py:610(mpf_gt)
                                                                                      2638    0.001    0.001  {hasattr}
operations.py:139(<genexpr>)                                                    ->    8942    0.005    0.011  function.py:224(is_commutative)
expr.py:124(__float__)                                                          ->     500    0.001    0.015  evalf.py:983(evalf)
                                                                                       500    0.000    0.001  numbers.py:162(__float__)
libmpc.py:96(mpc_sub)                                                           ->    7568    0.002    0.014  libmpf.py:771(mpf_sub)
ikfast_IKFastSolver.py:305(RoundMatrix)                                         ->       6    0.000    0.001  __init__.py:1145(debug)
                                                                                       132    0.000    0.005  decorators.py:72(__sympifyit_wrapper)
                                                                                         6    0.000    0.000  evalf.py:983(evalf)
                                                                                        42    0.000    0.005  ikfast_IKFastSolver.py:250(convertRealToRational)
                                                                                         6    0.000    0.002  ikfast_IKFastSolver.py:361(GetMatrixFromQuat)
                                                                                         6    0.000    0.000  matrices.py:77(__init__)
                                                                                       114    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        24    0.000    0.000  matrices.py:276(__setitem__)
                                                                                         6    0.000    0.000  matrices.py:446(__div__)
                                                                                         8    0.000    0.001  matrices.py:1034(evalf)
                                                                                         6    0.000    0.000  matrices.py:1443(norm)
                                                                                         2    0.000    0.000  matrices.py:2626(eye)
                                                                                        32    0.000    0.000  miscellaneous.py:30(sqrt)
                                                                                       144    0.000    0.000  numbers.py:162(__float__)
                                                                                         6    0.000    0.000  numbers.py:424(__lt__)
                                                                                         2    0.000    0.000  numbers.py:1105(__lt__)
                                                                                        32    0.000    0.002  {abs}
                                                                                         8    0.000    0.000  {range}
matrices.py:389(<lambda>)                                                       ->     353    0.000    0.015  decorators.py:72(__sympifyit_wrapper)
                                                                                        21    0.000    0.000  numbers.py:1056(__mul__)
                                                                                      1001    0.000    0.001  numbers.py:1063(__rmul__)
numbers.py:424(__lt__)                                                          ->     626    0.001    0.004  evalf.py:983(evalf)
                                                                                       626    0.000    0.001  libmpf.py:600(mpf_lt)
                                                                                       540    0.000    0.000  numbers.py:288(_as_mpf_val)
                                                                                        86    0.000    0.000  numbers.py:982(_as_mpf_val)
                                                                                       626    0.000    0.008  sympify.py:161(_sympify)
                                                                                      1252    0.000    0.000  {isinstance}
numbers.py:331(_eval_is_positive)                                               ->    1236    0.001    0.007  ctx_mp_python.py:178(__gt__)
                                                                                      1236    0.002    0.008  numbers.py:284(num)
matrices.py:929(submatrix)                                                      ->     908    0.002    0.010  matrices.py:77(__init__)
                                                                                      1816    0.001    0.001  matrices.py:990(slice2bounds)
                                                                                       972    0.000    0.000  {isinstance}
sets.py:417(Mul)                                                                ->     289    0.001    0.015  sets.py:443(test_closed_group)
str.py:434(_print_Symbol)                                                       ->
mul.py:1(<module>)                                                              ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  mul.py:10(NC_Marker)
                                                                                         1    0.000    0.000  mul.py:19(Mul)
                                                                                         1    0.001    0.015  numbers.py:1(<module>)
                                                                                         1    0.000    0.000  operations.py:1(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
mul.py:824(_eval_is_real)                                                       ->   23380    0.002    0.003  assumptions.py:365(getit)
                                                                                     11690    0.001    0.001  basic.py:647(args)
numbers.py:284(num)                                                             ->    2638    0.008    0.012  ctx_mp_python.py:47(__new__)
sets.py:443(test_closed_group)                                                  ->     550    0.002    0.014  ask.py:46(ask)
                                                                                       550    0.000    0.001  assume.py:123(__call__)
                                                                                       289    0.000    0.000  basic.py:647(args)
__init__.py:2506(from_location)                                                 ->     232    0.000    0.006  __init__.py:2494(__init__)
                                                                                       114    0.000    0.000  __init__.py:2523(_reload_version)
                                                                                       118    0.000    0.008  __init__.py:2825(_reload_version)
                                                                                       232    0.000    0.000  posixpath.py:97(splitext)
                                                                                       232    0.000    0.000  {method 'group' of '_sre.SRE_Match' objects}
                                                                                       464    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                       232    0.000    0.000  {method 'match' of '_sre.SRE_Pattern' objects}
polytools.py:1678(LC)                                                           ->     348    0.000    0.001  polyclasses.py:500(LC)
                                                                                       210    0.000    0.014  polynomialring.py:50(to_sympy)
                                                                                       138    0.000    0.000  pythonintegerring.py:23(to_sympy)
                                                                                       348    0.000    0.000  {hasattr}
numbers.py:1(<module>)                                                          ->       6    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.002  decimal.py:116(<module>)
                                                                                         1    0.000    0.000  decorators.py:23(deprecated)
                                                                                         1    0.000    0.001  fractions.py:4(<module>)
                                                                                         1    0.000    0.008  function.py:31(<module>)
                                                                                         1    0.000    0.000  numbers.py:106(Number)
                                                                                         1    0.000    0.000  numbers.py:234(Float)
                                                                                         1    0.000    0.000  numbers.py:469(Rational)
                                                                                         1    0.000    0.000  numbers.py:973(Integer)
                                                                                         1    0.000    0.000  numbers.py:1312(RationalConstant)
                                                                                         1    0.000    0.000  numbers.py:1324(IntegerConstant)
                                                                                         1    0.000    0.000  numbers.py:1331(Zero)
                                                                                         1    0.000    0.000  numbers.py:1376(One)
                                                                                         1    0.000    0.000  numbers.py:1404(NegativeOne)
                                                                                         1    0.000    0.000  numbers.py:1444(Half)
                                                                                         1    0.000    0.000  numbers.py:1457(Infinity)
                                                                                         1    0.000    0.000  numbers.py:1530(NegativeInfinity)
                                                                                         1    0.000    0.000  numbers.py:1600(NaN)
                                                                                         1    0.000    0.000  numbers.py:1633(ComplexInfinity)
                                                                                         1    0.000    0.000  numbers.py:1668(NumberSymbol)
                                                                                         1    0.000    0.000  numbers.py:1764(Exp1)
                                                                                         1    0.000    0.000  numbers.py:1795(Pi)
                                                                                         1    0.000    0.000  numbers.py:1824(GoldenRatio)
                                                                                         1    0.000    0.000  numbers.py:1850(EulerGamma)
                                                                                         1    0.000    0.000  numbers.py:1874(Catalan)
                                                                                         1    0.000    0.000  numbers.py:1897(ImaginaryUnit)
                                                                                         1    0.000    0.001  power.py:1(<module>)
                                                                                        15    0.000    0.001  singleton.py:51(__init__)
                                                                                         2    0.000    0.000  singleton.py:65(__new__)
                                                                                         8    0.000    0.000  six.py:184(find_module)
expr.py:455(args_cnc)                                                           ->    8241    0.001    0.001  basic.py:179(__hash__)
                                                                                      4364    0.000    0.000  basic.py:647(args)
                                                                                      1805    0.001    0.003  function.py:224(is_commutative)
                                                                                      3239    0.001    0.003  numbers.py:448(__hash__)
polytools.py:3700(_keep_coeff)                                                  ->     296    0.001    0.003  cache.py:74(wrapper)
                                                                                       120    0.000    0.003  decorators.py:72(__sympifyit_wrapper)
                                                                                         1    0.000    0.000  expr.py:70(__neg__)
                                                                                       680    0.001    0.003  numbers.py:751(__eq__)
                                                                                        66    0.000    0.003  numbers.py:1056(__mul__)
                                                                                      1193    0.000    0.001  numbers.py:1084(__eq__)
{round}                                                                         ->     404    0.000    0.001  numbers.py:162(__float__)
add.py:277(<lambda>)                                                            ->    1816    0.001    0.014  operations.py:252(_eval_template_is_attr)
ikfast_IKFastSolver.py:2188(_ExtractTranslationsOutsideOfMatrixMultiplication)  ->      42    0.000    0.000  cache.py:74(wrapper)
                                                                                       168    0.000    0.002  matrices.py:227(__getitem__)
                                                                                        56    0.000    0.001  matrices.py:276(__setitem__)
                                                                                        49    0.000    0.007  matrices.py:404(__sub__)
                                                                                        28    0.000    0.003  matrices.py:407(__mul__)
                                                                                         7    0.000    0.000  matrices.py:460(__neg__)
                                                                                         7    0.000    0.000  matrices.py:2616(zeros)
                                                                                        14    0.000    0.000  matrices.py:2626(eye)
                                                                                        14    0.000    0.000  {any}
                                                                                        28    0.000    0.000  {id}
                                                                                        14    0.000    0.000  {range}
densebasic.py:15(poly_LC)                                                       ->
solvers.py:418(<genexpr>)                                                       ->    2488    0.002    0.013  solvers.py:409(sympified_list)
{method 'intersection' of 'set' objects}                                        ->     979    0.000    0.000  basic.py:179(__hash__)
                                                                                         4    0.000    0.000  basic.py:374(__eq__)
                                                                                      2279    0.003    0.009  numbers.py:396(__eq__)
numbers.py:1105(__lt__)                                                         ->     404    0.001    0.012  numbers.py:789(__lt__)
                                                                                      3065    0.000    0.000  {isinstance}
solvers.py:57(checksol)                                                         ->     958    0.002    0.011  cache.py:74(wrapper)
                                                                                       958    0.001    0.001  {hasattr}
                                                                                      2874    0.000    0.000  {isinstance}
                                                                                       958    0.000    0.000  {method 'keys' of 'dict' objects}
polyutils.py:268(<genexpr>)                                                     ->     225    0.000    0.000  function.py:224(is_commutative)
__init__.py:703(acquire)                                                        ->    5244    0.008    0.010  threading.py:147(acquire)
expr.py:245(_parse_order)                                                       ->    2936    0.001    0.001  monomialtools.py:105(monomial_key)
expr.py:2008(as_numer_denom)                                                    ->
matrices.py:460(__neg__)                                                        ->     152    0.000    0.013  matrices.py:386(__rmul__)
solvers.py:448(<lambda>)                                                        ->     493    0.004    0.013  expr.py:12(sort_key)
pythonrationaltype.py:177(__nonzero__)                                          ->
matrices.py:1898(adjugate)                                                      ->       1    0.000    0.000  matrices.py:171(transpose)
                                                                                         1    0.000    0.013  matrices.py:1220(cofactorMatrix)
matrices.py:1220(cofactorMatrix)                                                ->       1    0.000    0.013  matrices.py:77(__init__)
matrices.py:1221(<lambda>)                                                      ->      16    0.000    0.013  matrices.py:1237(cofactor)
matrices.py:1237(cofactor)                                                      ->       4    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                        16    0.000    0.013  matrices.py:1225(minorEntry)
                                                                                         4    0.000    0.000  numbers.py:1063(__rmul__)
solvers.py:409(sympified_list)                                                  ->    2488    0.001    0.002  compatibility.py:11(iterable)
                                                                                      2488    0.002    0.009  {map}
containers.py:30(__new__)                                                       ->    4899    0.004    0.005  basic.py:82(__new__)
                                                                                      4899    0.004    0.004  sympify.py:23(sympify)
numbers.py:789(__lt__)                                                          ->     424    0.001    0.003  evalf.py:983(evalf)
                                                                                       424    0.000    0.001  libmpf.py:600(mpf_lt)
                                                                                        20    0.000    0.000  numbers.py:739(_as_mpf_val)
                                                                                       404    0.000    0.000  numbers.py:982(_as_mpf_val)
                                                                                       493    0.000    0.008  sympify.py:161(_sympify)
                                                                                      1972    0.000    0.000  {isinstance}
{math.ldexp}                                                                    ->
densebasic.py:486(dup_convert)                                                  ->    1635    0.000    0.000  densebasic.py:238(dup_strip)
                                                                                      1922    0.001    0.010  domain.py:69(convert)
                                                                                      1586    0.000    0.000  domain.py:312(__eq__)
                                                                                        49    0.000    0.000  polynomialring.py:42(__eq__)
polytools.py:1451(div)                                                          ->      64    0.000    0.006  polyclasses.py:260(to_ring)
                                                                                        64    0.000    0.006  polyclasses.py:264(to_field)
                                                                                        32    0.000    0.000  polyclasses.py:464(div)
                                                                                        32    0.000    0.000  polytools.py:355(_unify)
                                                                                        64    0.000    0.000  polytools.py:393(per)
                                                                                        32    0.000    0.000  {hasattr}
miscellaneous.py:30(sqrt)                                                       ->     640    0.002    0.012  cache.py:74(wrapper)
matrices.py:1225(minorEntry)                                                    ->      16    0.000    0.001  matrices.py:1231(minorMatrix)
                                                                                        16    0.000    0.012  matrices.py:1830(det)
<string>:2(__add__)                                                             ->    3784    0.001    0.007  libmpc.py:92(mpc_add_mpf)
                                                                                      3784    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                      7568    0.001    0.001  {hasattr}
trigonometric.py:151(eval)                                                      ->     164    0.000    0.000  basic.py:622(func)
                                                                                         3    0.000    0.000  cache.py:74(wrapper)
                                                                                         6    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                         5    0.000    0.000  expr.py:70(__neg__)
                                                                                        43    0.000    0.002  expr.py:761(as_coefficient)
                                                                                        46    0.000    0.009  expr.py:1247(could_extract_minus_sign)
                                                                                         6    0.000    0.000  miscellaneous.py:30(sqrt)
                                                                                         1    0.000    0.000  numbers.py:1393(__neg__)
                                                                                         4    0.000    0.000  trigonometric.py:15(_peeloff_pi)
                                                                                        43    0.000    0.000  trigonometric.py:45(_pi_coeff)
polyoptions.py:29(default)                                                      ->
trigonometric.py:368(eval)                                                      ->     164    0.000    0.000  basic.py:622(func)
                                                                                         3    0.000    0.000  cache.py:74(wrapper)
                                                                                        12    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                         3    0.000    0.000  expr.py:70(__neg__)
                                                                                        43    0.000    0.002  expr.py:761(as_coefficient)
                                                                                        46    0.000    0.009  expr.py:1247(could_extract_minus_sign)
                                                                                         8    0.000    0.000  miscellaneous.py:30(sqrt)
                                                                                         1    0.000    0.000  numbers.py:1349(__neg__)
                                                                                         1    0.000    0.000  numbers.py:1393(__neg__)
                                                                                         4    0.000    0.000  trigonometric.py:15(_peeloff_pi)
                                                                                        43    0.000    0.000  trigonometric.py:45(_pi_coeff)
power.py:141(_eval_is_negative)                                                 -> 2834/2829    0.001    0.010  assumptions.py:365(getit)
                                                                                      2861    0.000    0.000  power.py:91(base)
                                                                                        25    0.000    0.000  power.py:95(exp)
matrices.py:1830(det)                                                           ->      16    0.000    0.012  matrices.py:2092(berkowitz_det)
densearith.py:454(dup_abs)                                                      ->   30955    0.004    0.005  domain.py:399(abs)
__init__.py:626(_build_master)                                                  ->       1    0.000    0.012  __init__.py:613(__init__)
__init__.py:613(__init__)                                                       ->      31    0.000    0.012  __init__.py:668(add_entry)
piecewise.py:270(piecewise_fold)                                                ->    1509    0.002    0.010  cache.py:74(wrapper)
                                                                                      1509    0.000    0.000  {isinstance}
{method 'flush' of 'file' objects}                                              ->
polytools.py:393(per)                                                           ->    4377    0.004    0.009  polytools.py:100(new)
matrices.py:2616(zeros)                                                         ->     565    0.001    0.001  matrices.py:27(_dims_to_nm)
                                                                                       565    0.001    0.009  matrices.py:77(__init__)
exprtools.py:138(quo)                                                           ->    4036    0.005    0.009  exprtools.py:116(div)
domain.py:62(__call__)                                                          ->   12112    0.004    0.004  pythonrationaltype.py:26(__init__)
ctx_fp.py:1(<module>)                                                           ->       2    0.001    0.011  ctx_base.py:1(<module>)
                                                                                         2    0.000    0.000  ctx_fp.py:12(FPContext)
                                                                                         2    0.000    0.000  function_docs.py:3(<module>)
                                                                                         2    0.000    0.000  math2.py:6(<module>)
                                                                                         5    0.000    0.000  six.py:184(find_module)
add.py:238(as_two_terms)                                                        ->    9549    0.001    0.001  basic.py:647(args)
                                                                                      3183    0.003    0.005  operations.py:57(_new_rawargs)
                                                                                      3183    0.000    0.000  {len}
ikfast_IKFastSolver.py:7823(solveVariablesLinearly)                             ->       2    0.000    0.000  __init__.py:1145(debug)
                                                                                         2    0.000    0.000  __init__.py:1169(warning)
                                                                                        16    0.000    0.000  basic.py:399(__ne__)
                                                                                         2    0.000    0.000  ikfast_IKFastSolver.py:118(__init__)
                                                                                         4    0.000    0.000  ikfast_IKFastSolver.py:157(__init__)
                                                                                        16    0.000    0.001  ikfast_IKFastSolver.py:839(codeComplexity)
                                                                                        37    0.000    0.000  polytools.py:743(monoms)
                                                                                        16    0.000    0.007  polytools.py:892(as_expr)
                                                                                        16    0.000    0.001  polytools.py:1701(TC)
                                                                                         3    0.000    0.000  {all}
                                                                                        30    0.000    0.000  {len}
                                                                                         2    0.000    0.000  {max}
                                                                                         2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         3    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                         5    0.000    0.000  {method 'sort' of 'list' objects}
                                                                                        21    0.000    0.000  {method 'union' of 'set' objects}
                                                                                         4    0.000    0.000  {min}
                                                                                         2    0.000    0.000  {range}
                                                                                         3    0.000    0.000  {sum}
domain.py:379(is_one)                                                           ->       8    0.000    0.000  polyclasses.py:867(__eq__)
ctx_mp_python.py:406(__abs__)                                                   ->    1000    0.000    0.010  libmpc.py:117(mpc_abs)
                                                                                      1000    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
sre_compile.py:552(_code)                                                       ->     100    0.001    0.008  sre_compile.py:64(_compile)
                                                                                       100    0.000    0.003  sre_compile.py:433(_compile_info)
                                                                                       100    0.000    0.000  {method 'append' of 'list' objects}
basic.py:884(<lambda>)                                                          ->   37563    0.005    0.005  {isinstance}
sympify.py:9(__init__)                                                          ->
polyutils.py:253(_dict_from_expr_no_gens)                                       ->     169    0.003    0.011  polyutils.py:173(_parallel_dict_from_expr_no_gens)
polytools.py:1327(pow)                                                          ->     166    0.000    0.000  numbers.py:1012(__int__)
                                                                                       166    0.000    0.010  polyclasses.py:436(pow)
                                                                                       166    0.000    0.000  polytools.py:404(per)
                                                                                       166    0.000    0.000  {hasattr}
ikfast_IKFastSolver.py:1(<module>)                                              ->       1    0.000    0.009  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  __init__.py:391(__init__)
                                                                                         1    0.000    0.000  __init__.py:764(setFormatter)
                                                                                         1    0.000    0.000  __init__.py:895(__init__)
                                                                                         1    0.000    0.000  __init__.py:1298(addHandler)
                                                                                         1    0.000    0.000  __init__.py:1507(basicConfig)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:99(IKFastSolver)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:20(<module>)
                                                                                        13    0.000    0.000  six.py:184(find_module)
evalf.py:4(<module>)                                                            ->       1    0.001    0.011  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  containers.py:7(<module>)
                                                                                         2    0.000    0.000  ctx_mp_python.py:143(__float__)
                                                                                         1    0.000    0.000  ctx_mp_python.py:161(__neg__)
                                                                                         1    0.000    0.000  evalf.py:37(PrecisionExhausted)
                                                                                         1    0.000    0.000  evalf.py:978(EvalfMixin)
                                                                                         3    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {math.log}
{method 'groups' of '_sre.SRE_Match' objects}                                   ->
densebasic.py:58(dmp_ground_LC)                                                 ->   32743    0.003    0.003  densebasic.py:15(poly_LC)
polytools.py:743(monoms)                                                        ->     809    0.001    0.010  polyclasses.py:287(monoms)
pythonintegerring.py:27(from_sympy)                                             ->
numbers.py:390(__abs__)                                                         ->    5245    0.001    0.001  libmpf.py:651(mpf_abs)
                                                                                      5245    0.002    0.005  numbers.py:319(_new)
ctx_base.py:1(<module>)                                                         ->       8    0.003    0.009  __init__.py:1(<module>)
                                                                                         2    0.000    0.000  calculus.py:1(<module>)
                                                                                         2    0.000    0.000  ctx_base.py:19(Context)
                                                                                         2    0.000    0.000  ctx_base.py:22(StandardBaseContext)
                                                                                         2    0.000    0.000  identification.py:4(<module>)
                                                                                         2    0.000    0.000  linalg.py:99(<module>)
                                                                                         2    0.000    0.000  matrices.py:1(<module>)
                                                                                         2    0.000    0.000  odes.py:1(<module>)
                                                                                         2    0.000    0.000  optimization.py:1(<module>)
                                                                                         2    0.000    0.000  quadrature.py:1(<module>)
                                                                                        13    0.000    0.000  six.py:184(find_module)
                                                                                         2    0.000    0.000  visualization.py:3(<module>)
polyutils.py:182(_is_coeff)                                                     ->
ctx_mp_python.py:177(__lt__)                                                    ->    3184    0.003    0.009  ctx_mp_python.py:167(_cmp)
threading.py:147(acquire)                                                       ->    5273    0.001    0.001  threading.py:64(_note)
                                                                                      2649    0.001    0.001  {method 'acquire' of 'thread.lock' objects}
                                                                                      5273    0.000    0.000  {thread.get_ident}
exprtools.py:156(gcd)                                                           ->    4347    0.000    0.000  basic.py:179(__hash__)
                                                                                      5296    0.003    0.004  exprtools.py:60(__init__)
                                                                                      5296    0.001    0.001  {method 'iteritems' of 'dict' objects}
                                                                                       818    0.000    0.000  {min}
polyclasses.py:287(monoms)                                                      ->     809    0.000    0.009  densebasic.py:1636(dmp_list_terms)
polyclasses.py:436(pow)                                                         ->     166    0.000    0.009  densearith.py:983(dmp_pow)
                                                                                       166    0.000    0.000  polyclasses.py:197(per)
                                                                                       166    0.000    0.000  {isinstance}
{method 'keys' of 'dict' objects}                                               ->
numbers.py:155(_eval_evalf)                                                     ->     788    0.000    0.000  numbers.py:288(_as_mpf_val)
                                                                                      1766    0.002    0.003  numbers.py:319(_new)
                                                                                       506    0.000    0.004  numbers.py:739(_as_mpf_val)
                                                                                       470    0.000    0.001  numbers.py:982(_as_mpf_val)
                                                                                         2    0.000    0.000  numbers.py:1501(_as_mpf_val)
libmpc.py:117(mpc_abs)                                                          ->    1000    0.001    0.010  libmpf.py:1366(mpf_hypot)
__init__.py:34(load_module)                                                     ->      10    0.000    0.000  __init__.py:14(search_path)
                                                                                         5    0.000    0.010  {__import__}
                                                                                         5    0.000    0.000  {method 'partition' of 'str' objects}
__init__.py:710(release)                                                        ->    5244    0.006    0.007  threading.py:187(release)
__init__.py:7(<module>)                                                         ->       1    0.000    0.003  __init__.py:45(<module>)
                                                                                         1    0.000    0.006  decorators.py:15(<module>)
                                                                                         1    0.000    0.000  nosetester.py:511(_numpy_tester)
libmpf.py:1366(mpf_hypot)                                                       ->      72    0.000    0.000  libmpf.py:651(mpf_abs)
                                                                                       928    0.001    0.002  libmpf.py:676(mpf_add)
                                                                                      1856    0.001    0.001  libmpf.py:858(python_mpf_mul)
                                                                                       928    0.002    0.006  libmpf.py:1338(mpf_sqrt)
evalf.py:922(<lambda>)                                                          ->    1505    0.003    0.008  libelefun.py:114(f)
densearith.py:983(dmp_pow)                                                      ->     166    0.001    0.003  densearith.py:812(dmp_mul)
                                                                                       166    0.002    0.005  densearith.py:898(dmp_sqr)
                                                                                       166    0.000    0.000  densebasic.py:653(dmp_zero_p)
                                                                                       166    0.000    0.000  densebasic.py:697(dmp_one_p)
                                                                                       166    0.000    0.000  densebasic.py:713(dmp_one)
symbol.py:85(as_real_imag)                                                      ->     764    0.001    0.009  cache.py:74(wrapper)
ikfast_IKFastSolver.py:388(affineInverse)                                       ->      29    0.000    0.000  matrices.py:171(transpose)
                                                                                        58    0.000    0.001  matrices.py:227(__getitem__)
                                                                                        58    0.000    0.002  matrices.py:276(__setitem__)
                                                                                        29    0.000    0.004  matrices.py:407(__mul__)
                                                                                        29    0.000    0.002  matrices.py:460(__neg__)
                                                                                        29    0.000    0.001  matrices.py:2626(eye)
numbers.py:328(_hashable_content)                                               ->
exprtools.py:116(div)                                                           ->     657    0.000    0.000  basic.py:179(__hash__)
                                                                                      8072    0.003    0.004  exprtools.py:60(__init__)
                                                                                      4036    0.000    0.000  {method 'iteritems' of 'dict' objects}
densearith.py:494(dup_neg)                                                      ->
polyoptions.py:597(postprocess)                                                 ->
numbers.py:1137(_eval_power)                                                    ->      10    0.000    0.000  assumptions.py:365(getit)
                                                                                       186    0.000    0.002  cache.py:74(wrapper)
                                                                                   242/240    0.000    0.004  decorators.py:72(__sympifyit_wrapper)
                                                                                        10    0.000    0.000  factor_.py:201(perfect_power)
                                                                                         6    0.000    0.000  generate.py:211(primerange)
                                                                                        19    0.000    0.000  numbers.py:36(igcd)
                                                                                         4    0.000    0.000  numbers.py:647(__neg__)
                                                                                        15    0.000    0.000  numbers.py:789(__lt__)
                                                                                         9    0.000    0.000  numbers.py:822(factors)
                                                                                        58    0.000    0.000  numbers.py:989(__new__)
                                                                                        59    0.000    0.000  numbers.py:1012(__int__)
                                                                                        35    0.000    0.000  numbers.py:1015(__neg__)
                                                                                        58    0.000    0.000  numbers.py:1056(__mul__)
                                                                                        10    0.000    0.000  numbers.py:1084(__eq__)
                                                                                       468    0.000    0.000  numbers.py:1105(__lt__)
                                                                                       178    0.000    0.000  numbers.py:1419(__neg__)
                                                                                        59    0.000    0.000  power.py:12(integer_nthroot)
                                                                                       108    0.000    0.000  {abs}
                                                                                        17    0.000    0.000  {divmod}
                                                                                       482    0.000    0.000  {isinstance}
                                                                                        10    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                        20    0.000    0.000  {method 'iteritems' of 'dict' objects}
evalf.py:416(evalf_pow)                                                         ->     967    0.000    0.000  basic.py:647(args)
                                                                                        48    0.000    0.000  evalf.py:66(fastlog)
                                                                                  1015/863    0.003    0.006  evalf.py:953(evalf)
                                                                                        62    0.000    0.000  libmpf.py:600(mpf_lt)
                                                                                        12    0.000    0.000  libmpf.py:1016(mpf_pow_int)
                                                                                        62    0.000    0.000  libmpf.py:1338(mpf_sqrt)
                                                                                       825    0.000    0.000  {abs}
                                                                                       825    0.001    0.001  {math.log}
sympify.py:1(<module>)                                                          ->       1    0.000    0.009  core.py:1(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  sympify.py:8(SympifyError)
nonlin.py:110(<module>)                                                         ->       1    0.000    0.002  __init__.py:1(<module>)
                                                                                         1    0.000    0.004  __init__.py:111(<module>)
                                                                                         1    0.001    0.002  __init__.py:169(<module>)
                                                                                         1    0.000    0.000  nonlin.py:132(NoConvergence)
                                                                                         1    0.000    0.000  nonlin.py:211(_set_doc)
                                                                                         1    0.000    0.000  nonlin.py:381(TerminationCondition)
                                                                                         1    0.000    0.000  nonlin.py:442(Jacobian)
                                                                                         1    0.000    0.000  nonlin.py:509(InverseJacobian)
                                                                                         1    0.000    0.000  nonlin.py:619(GenericBroyden)
                                                                                         1    0.000    0.000  nonlin.py:639(LowRankMatrix)
                                                                                         1    0.000    0.000  nonlin.py:855(BroydenFirst)
                                                                                         1    0.000    0.000  nonlin.py:948(BroydenSecond)
                                                                                         1    0.000    0.000  nonlin.py:992(Anderson)
                                                                                         1    0.000    0.000  nonlin.py:1127(DiagBroyden)
                                                                                         1    0.000    0.000  nonlin.py:1173(LinearMixing)
                                                                                         1    0.000    0.000  nonlin.py:1212(ExcitingMixing)
                                                                                         1    0.000    0.000  nonlin.py:1270(KrylovJacobian)
                                                                                         7    0.000    0.001  nonlin.py:1429(_nonlin_wrapper)
                                                                                         5    0.000    0.000  six.py:184(find_module)
                                                                                         3    0.000    0.000  {method 'strip' of 'str' objects}
core.py:1(<module>)                                                             ->       1    0.000    0.009  assumptions.py:1(<module>)
                                                                                         1    0.000    0.000  core.py:64(BasicType)
                                                                                         1    0.000    0.000  core.py:68(Registry)
                                                                                         1    0.000    0.000  core.py:89(ClassRegistry)
                                                                                         1    0.000    0.000  core.py:101(__setattr__)
                                                                                         1    0.000    0.000  core.py:116(BasicMeta)
                                                                                         1    0.000    0.000  six.py:184(find_module)
operations.py:322(__new__)                                                      ->      37    0.000    0.000  basic.py:82(__new__)
                                                                                       114    0.000    0.000  basic.py:179(__hash__)
                                                                                      2269    0.002    0.007  operations.py:337(_new_args_filter)
                                                                                        37    0.000    0.000  {len}
assumptions.py:1(<module>)                                                      ->       1    0.000    0.000  assumptions.py:5(CycleDetected)
                                                                                         1    0.000    0.008  assumptions.py:12(AssumeMeths)
                                                                                         1    0.000    0.000  facts.py:49(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
ikfast_IKFastSolver.py:383(rodrigues2)                                          ->      14    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                         7    0.000    0.000  matrices.py:77(__init__)
                                                                                        42    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        14    0.000    0.003  matrices.py:386(__rmul__)
                                                                                         7    0.000    0.002  matrices.py:407(__mul__)
                                                                                        14    0.000    0.002  matrices.py:440(__add__)
                                                                                         7    0.000    0.000  matrices.py:2626(eye)
                                                                                         7    0.000    0.001  numbers.py:1042(__sub__)
                                                                                        14    0.000    0.000  numbers.py:1349(__neg__)
                                                                                         7    0.000    0.000  numbers.py:1393(__neg__)
add.py:279(<lambda>)                                                            -> 3505/3501    0.002    0.007  operations.py:252(_eval_template_is_attr)
operations.py:149(flatten)                                                      ->    8776    0.001    0.001  {method 'append' of 'list' objects}
                                                                                      8776    0.002    0.002  {method 'pop' of 'list' objects}
{method 'write' of 'file' objects}                                              ->
domain.py:109(of_type)                                                          ->
densebasic.py:1359(_rec_inflate)                                                ->    1246    0.000    0.000  densebasic.py:677(dmp_zero)
                                                                                      4149    0.001    0.002  densebasic.py:1330(dup_inflate)
                                                                                 7620/3089    0.004    0.006  densebasic.py:1359(_rec_inflate)
                                                                                      3196    0.000    0.000  {method 'append' of 'list' objects}
assumptions.py:12(AssumeMeths)                                                  ->       1    0.000    0.008  facts.py:681(__init__)
                                                                                         1    0.000    0.000  {method 'add' of 'set' objects}
                                                                                         1    0.000    0.000  {method 'copy' of 'set' objects}
polytools.py:1642(degree_list)                                                  ->    1934    0.001    0.006  polyclasses.py:492(degree_list)
                                                                                      1934    0.000    0.000  {hasattr}
facts.py:681(__init__)                                                          ->     264    0.000    0.000  facts.py:55(list_populate)
                                                                                         1    0.000    0.000  facts.py:69(deduce_alpha_implications)
                                                                                         1    0.002    0.005  facts.py:134(apply_beta_to_alpha_route)
                                                                                         4    0.000    0.000  facts.py:267(rules_2prereq)
                                                                                         1    0.000    0.000  facts.py:301(split_rules_tt_tf_ft_ff)
                                                                                         1    0.000    0.000  facts.py:419(__init__)
                                                                                         1    0.000    0.001  facts.py:456(rules_alpha)
                                                                                         2    0.000    0.000  facts.py:460(rules_beta)
                                                                                        33    0.000    0.001  facts.py:467(process_rule)
                                                                                        37    0.000    0.000  facts.py:753(<genexpr>)
                                                                                        15    0.000    0.000  logic.py:57(name_not)
                                                                                        46    0.000    0.000  logic.py:134(fromstring)
                                                                                         1    0.000    0.000  {isinstance}
                                                                                        36    0.000    0.000  {method 'add' of 'set' objects}
                                                                                       132    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                         6    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                         5    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                        61    0.000    0.000  {method 'setdefault' of 'dict' objects}
                                                                                        23    0.000    0.000  {method 'split' of 'str' objects}
                                                                                         3    0.000    0.000  {method 'update' of 'set' objects}
sre_compile.py:64(_compile)                                                     -> 1023/224    0.003    0.007  sre_compile.py:64(_compile)
                                                                                       376    0.001    0.002  sre_compile.py:228(_compile_charset)
                                                                                       483    0.000    0.001  sre_compile.py:428(_simple)
                                                                                      2699    0.001    0.001  sre_parse.py:141(__getitem__)
                                                                                         4    0.000    0.000  sre_parse.py:151(getwidth)
                                                                                       366    0.000    0.000  {_sre.getlower}
                                                                                      2688    0.000    0.000  {len}
                                                                                      7129    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         9    0.000    0.000  {method 'get' of 'dict' objects}
ctx_mp_python.py:178(__gt__)                                                    ->    2097    0.002    0.007  ctx_mp_python.py:167(_cmp)
libelefun.py:114(f)                                                             ->    1505    0.001    0.001  libelefun.py:94(g)
                                                                                      1505    0.001    0.002  libintmath.py:83(python_bitcount)
                                                                                      1505    0.003    0.003  libmpf.py:153(_normalize)
__init__.py:2825(_reload_version)                                               ->     118    0.000    0.008  __init__.py:2478(_version_from_file)
                                                                                       118    0.000    0.000  __init__.py:2651(_get_metadata)
function.py:31(<module>)                                                        ->       1    0.002    0.007  __init__.py:2(<module>)
                                                                                         1    0.000    0.000  add.py:1(<module>)
                                                                                         9    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  function.py:49(PoleError)
                                                                                         1    0.000    0.000  function.py:52(ArgumentIndexError)
                                                                                         1    0.000    0.000  function.py:57(FunctionClass)
                                                                                         1    0.000    0.000  function.py:74(Application)
                                                                                         1    0.000    0.000  function.py:152(Function)
                                                                                         1    0.000    0.000  function.py:558(AppliedUndef)
                                                                                         1    0.000    0.000  function.py:568(UndefinedFunction)
                                                                                         1    0.000    0.000  function.py:576(WildFunction)
                                                                                         1    0.000    0.000  function.py:606(Derivative)
                                                                                         1    0.000    0.000  function.py:797(Lambda)
                                                                                         1    0.000    0.000  function.py:900(Subs)
                                                                                         2    0.000    0.000  six.py:184(find_module)
symbol.py:179(matches)                                                          ->    9560    0.001    0.001  basic.py:179(__hash__)
                                                                                       141    0.000    0.001  basic.py:835(__contains__)
                                                                                       227    0.000    0.001  basic.py:1223(__contains__)
                                                                                         2    0.000    0.000  function.py:146(__contains__)
                                                                                      4759    0.000    0.000  {method 'copy' of 'dict' objects}
polyconfig.py:29(query)                                                         ->   18058    0.002    0.002  {method 'get' of 'dict' objects}
polynomialring.py:103(from_PolynomialRing)                                      ->      78    0.000    0.000  basic.py:374(__eq__)
                                                                                        78    0.000    0.000  domain.py:316(__ne__)
                                                                                        78    0.000    0.002  polyclasses.py:230(to_dict)
                                                                                        78    0.000    0.003  polynomialring.py:38(__call__)
                                                                                        78    0.001    0.003  polyutils.py:316(_dict_reorder)
                                                                                        78    0.000    0.000  {zip}
__init__.py:1233(findCaller)                                                    ->    1311    0.001    0.002  __init__.py:70(<lambda>)
                                                                                      1311    0.000    0.000  posixpath.py:44(normcase)
                                                                                      1311    0.000    0.000  {hasattr}
__init__.py:2478(_version_from_file)                                            ->     118    0.000    0.002  __init__.py:1358(safe_version)
                                                                                       118    0.000    0.000  {iter}
                                                                                        58    0.000    0.000  {method 'partition' of 'str' objects}
                                                                                        60    0.000    0.000  {method 'partition' of 'unicode' objects}
                                                                                        58    0.000    0.000  {method 'strip' of 'str' objects}
                                                                                        60    0.000    0.000  {method 'strip' of 'unicode' objects}
                                                                                       118    0.000    0.005  {next}
getlimits.py:94(__new__)                                                        ->       2    0.000    0.008  getlimits.py:127(_init)
                                                                                         2    0.000    0.000  numerictypes.py:603(obj2sctype)
                                                                                         2    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                         4    0.000    0.000  {issubclass}
                                                                                         2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        13    0.000    0.000  {method 'get' of 'dict' objects}
mul.py:816(<lambda>)                                                            ->    3227    0.003    0.006  operations.py:252(_eval_template_is_attr)
getlimits.py:127(_init)                                                         ->       2    0.000    0.008  machar.py:98(__init__)
                                                                                        18    0.000    0.000  {getattr}
                                                                                        10    0.000    0.000  {method 'strip' of 'str' objects}
                                                                                        18    0.000    0.000  {setattr}
polyoptions.py:474(postprocess)                                                 ->
machar.py:98(__init__)                                                          ->       2    0.003    0.008  machar.py:116(_do_init)
                                                                                         2    0.000    0.000  numeric.py:2963(__init__)
                                                                                         2    0.000    0.000  numeric.py:2967(__enter__)
                                                                                         2    0.000    0.000  numeric.py:2972(__exit__)
polyoptions.py:459(postprocess)                                                 ->
machar.py:116(_do_init)                                                         ->    2024    0.001    0.004  fromnumeric.py:1900(any)
                                                                                         4    0.000    0.000  getlimits.py:148(<lambda>)
                                                                                         2    0.000    0.000  getlimits.py:149(<lambda>)
                                                                                        12    0.000    0.000  getlimits.py:150(<lambda>)
                                                                                        10    0.000    0.000  getlimits.py:151(<lambda>)
                                                                                       589    0.000    0.000  {abs}
                                                                                         2    0.000    0.000  {math.log10}
                                                                                        20    0.000    0.000  {range}
matrices.py:404(__sub__)                                                        ->      51    0.000    0.003  matrices.py:440(__add__)
                                                                                        51    0.000    0.004  matrices.py:460(__neg__)
libintmath.py:123(bin_to_radix)                                                 ->
libmpf.py:548(mpf_cmp)                                                          ->    3474    0.001    0.001  libmpf.py:666(mpf_sign)
                                                                                        83    0.000    0.000  libmpf.py:771(mpf_sub)
threading.py:187(release)                                                       ->    5273    0.001    0.001  threading.py:64(_note)
                                                                                      2649    0.001    0.001  {method 'release' of 'thread.lock' objects}
                                                                                      5273    0.000    0.000  {thread.get_ident}
polytools.py:219(__hash__)                                                      ->     437    0.000    0.007  basic.py:179(__hash__)
{range}                                                                         ->
metaclass.py:1(<module>)                                                        ->       1    0.000    0.007  inspect.py:25(<module>)
                                                                                         1    0.000    0.000  metaclass.py:3(MetaInstanceTracker)
                                                                                         1    0.000    0.000  metaclass.py:4(__init__)
                                                                                         1    0.000    0.000  metaclass.py:18(InstanceTracker)
                                                                                         1    0.000    0.000  metaclass.py:30(MetaAutoReloader)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
                                                                                         1    0.000    0.000  metaclass.py:51(AutoReloader)
                                                                                         2    0.000    0.000  six.py:184(find_module)
symbol.py:137(_hashable_content)                                                ->    8762    0.002    0.002  symbol.py:69(_hashable_content)
polytools.py:1(<module>)                                                        ->       1    0.001    0.002  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  constructor.py:1(<module>)
                                                                                         2    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.001    0.004  polyclasses.py:1(<module>)
                                                                                         1    0.000    0.000  polycontext.py:1(<module>)
                                                                                         1    0.000    0.000  polytools.py:73(Poly)
                                                                                         1    0.000    0.000  polytools.py:3461(PurePoly)
                                                                                         1    0.000    0.000  rationaltools.py:1(<module>)
                                                                                         6    0.000    0.000  six.py:184(find_module)
function.py:301(as_base_exp)                                                    ->
inspect.py:25(<module>)                                                         ->       6    0.001    0.001  collections.py:305(namedtuple)
                                                                                         1    0.000    0.000  dis.py:1(<module>)
                                                                                         1    0.000    0.000  inspect.py:629(EndOfBlock)
                                                                                         1    0.000    0.000  inspect.py:631(BlockFinder)
                                                                                         1    0.000    0.005  tokenize.py:23(<module>)
                                                                                         3    0.000    0.000  {hasattr}
polyoptions.py:531(postprocess)                                                 ->
polyoptions.py:507(postprocess)                                                 ->
numbers.py:1015(__neg__)                                                        ->   10802    0.003    0.003  numbers.py:989(__new__)
__init__.py:1358(safe_version)                                                  ->     344    0.002    0.005  version.py:208(__init__)
                                                                                       344    0.001    0.001  version.py:246(__str__)
solvers.py:732(<genexpr>)                                                       ->     530    0.000    0.006  polytools.py:3149(is_linear)
libmpc.py:92(mpc_add_mpf)                                                       ->    3784    0.003    0.006  libmpf.py:676(mpf_add)
{method 'update' of 'set' objects}                                              ->    3064    0.001    0.003  numbers.py:1126(__hash__)
sre_parse.py:212(get)                                                           ->   10079    0.004    0.005  sre_parse.py:193(__next)
parser.py:5(<module>)                                                           ->       1    0.000    0.007  feedparser.py:20(<module>)
                                                                                         1    0.000    0.000  parser.py:17(Parser)
                                                                                         1    0.000    0.000  parser.py:86(HeaderParser)
                                                                                         3    0.000    0.000  six.py:184(find_module)
libmpf.py:1338(mpf_sqrt)                                                        ->     929    0.001    0.002  libintmath.py:271(sqrtrem_python)
                                                                                        66    0.000    0.000  libintmath.py:291(isqrt_python)
                                                                                       995    0.001    0.002  libmpf.py:291(from_man_exp)
                                                                                       928    0.000    0.000  {max}
feedparser.py:20(<module>)                                                      ->       1    0.000    0.000  errors.py:5(<module>)
                                                                                         1    0.000    0.000  feedparser.py:43(BufferedSubFile)
                                                                                         1    0.000    0.000  feedparser.py:158(FeedParser)
                                                                                         1    0.000    0.006  message.py:5(<module>)
                                                                                         5    0.000    0.000  re.py:192(compile)
                                                                                         3    0.000    0.000  six.py:184(find_module)
operations.py:337(_new_args_filter)                                             ->     226    0.000    0.001  basic.py:374(__eq__)
                                                                                        38    0.000    0.000  basic.py:622(func)
                                                                                         1    0.000    0.000  basic.py:675(iter_basic_args)
                                                                                       113    0.000    0.001  core.py:220(__cmp__)
                                                                                        75    0.000    0.000  function.py:131(func)
                                                                                      4386    0.001    0.004  operations.py:323(<genexpr>)
polyclasses.py:162(__hash__)                                                    ->     635    0.000    0.005  polyclasses.py:243(to_tuple)
                                                                                   635/163    0.001    0.005  {hash}
polyclasses.py:492(degree_list)                                                 ->    1934    0.002    0.005  densebasic.py:218(dmp_degree_list)
specifiers.py:14(<module>)                                                      ->       1    0.000    0.000  __init__.py:22(find_module)
                                                                                         1    0.000    0.000  _compat.py:14(<module>)
                                                                                         1    0.000    0.000  _compat.py:30(with_metaclass)
                                                                                         1    0.000    0.000  _compat.py:38(__new__)
                                                                                         4    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  re.py:192(compile)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  specifiers.py:25(InvalidSpecifier)
                                                                                         1    0.000    0.000  specifiers.py:31(BaseSpecifier)
                                                                                         1    0.000    0.000  specifiers.py:88(_IndividualSpecifier)
                                                                                         1    0.000    0.001  specifiers.py:224(LegacySpecifier)
                                                                                         1    0.000    0.006  specifiers.py:285(Specifier)
                                                                                         1    0.000    0.000  specifiers.py:599(SpecifierSet)
polyclasses.py:264(to_field)                                                    ->      64    0.000    0.000  integerring.py:20(get_field)
                                                                                        66    0.000    0.006  polyclasses.py:272(convert)
                                                                                         2    0.000    0.000  polynomialring.py:142(get_field)
mul.py:1046(<genexpr>)                                                          ->
optimize.py:18(<module>)                                                        ->       1    0.000    0.006  getlimits.py:94(__new__)
                                                                                         1    0.000    0.000  linesearch.py:1(<module>)
                                                                                         1    0.000    0.000  optimize.py:1132(Brent)
                                                                                         3    0.000    0.000  six.py:184(find_module)
polyutils.py:316(_dict_reorder)                                                 ->     410    0.000    0.000  {len}
                                                                                       410    0.000    0.000  {map}
                                                                                      2480    0.000    0.000  {method 'append' of 'list' objects}
                                                                                      1098    0.001    0.003  {method 'index' of 'list' objects}
                                                                                       410    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                       410    0.000    0.000  {method 'values' of 'dict' objects}
                                                                                      1003    0.000    0.000  {zip}
polytools.py:3149(is_linear)                                                    ->     530    0.001    0.006  polyclasses.py:779(is_linear)
decorators.py:15(<module>)                                                      ->       1    0.001    0.006  utils.py:4(<module>)
libmpf.py:59(prec_to_dps)                                                       ->     111    0.000    0.000  {max}
                                                                                      4861    0.001    0.001  {round}
symbol.py:100(free_symbols)                                                     ->    9786    0.001    0.001  basic.py:179(__hash__)
libmpf.py:627(mpf_pos)                                                          ->    9845    0.002    0.002  libmpf.py:208(_normalize1)
message.py:5(<module>)                                                          ->       1    0.000    0.006  charset.py:6(<module>)
                                                                                         1    0.000    0.000  message.py:92(Message)
                                                                                         1    0.000    0.000  re.py:192(compile)
                                                                                         4    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  uu.py:31(<module>)
polyclasses.py:197(per)                                                         ->    4606    0.002    0.002  polyclasses.py:146(__init__)
utils.py:4(<module>)                                                            ->       1    0.000    0.000  contextlib.py:1(<module>)
                                                                                         4    0.000    0.000  contextlib.py:54(contextmanager)
                                                                                         1    0.000    0.000  nosetester.py:6(<module>)
                                                                                         1    0.001    0.001  shutil.py:5(<module>)
                                                                                         1    0.000    0.004  tempfile.py:18(<module>)
                                                                                         1    0.000    0.000  utils.py:1(<module>)
                                                                                         1    0.000    0.000  utils.py:37(KnownFailureException)
                                                                                         1    0.000    0.000  utils.py:73(__call__)
                                                                                         1    0.000    0.000  utils.py:117(deprecate)
                                                                                         1    0.000    0.000  utils.py:1580(WarningMessage)
                                                                                         1    0.000    0.000  utils.py:1612(WarningManager)
                                                                                         1    0.000    0.000  utils.py:1841(IgnoreException)
                                                                                         1    0.000    0.000  utils.py:1881(clear_and_catch_warnings)
                                                                                         2    0.000    0.000  {posix.getpid}
polyclasses.py:779(is_linear)                                                   ->     530    0.001    0.004  densebasic.py:1014(dmp_to_dict)
                                                                                       530    0.000    0.000  {all}
                                                                                       530    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                      1199    0.000    0.000  {sum}
matrices.py:171(transpose)                                                      ->     419    0.001    0.005  matrices.py:77(__init__)
                                                                                       419    0.000    0.000  {len}
libmpf.py:605(mpf_le)                                                           ->    5307    0.003    0.003  libmpf.py:548(mpf_cmp)
numbers.py:1760(__hash__)                                                       ->    9659    0.001    0.001  basic.py:179(__hash__)
charset.py:6(<module>)                                                          ->       1    0.000    0.005  base64mime.py:25(<module>)
                                                                                         1    0.000    0.000  charset.py:156(Charset)
                                                                                         1    0.000    0.000  quoprimime.py:27(<module>)
                                                                                         3    0.000    0.000  six.py:184(find_module)
libmpf.py:600(mpf_lt)                                                           ->    4296    0.002    0.003  libmpf.py:548(mpf_cmp)
{issubclass}                                                                    ->   74/30    0.000    0.001  abc.py:148(__subclasscheck__)
polytools.py:1620(degree)                                                       ->    1151    0.001    0.003  polyclasses.py:485(degree)
                                                                                      1151    0.001    0.001  polytools.py:1602(_gen_to_level)
                                                                                      1151    0.000    0.000  {hasattr}
__init__.py:2494(__init__)                                                      ->     232    0.000    0.001  __init__.py:1350(safe_name)
                                                                                       226    0.000    0.004  __init__.py:1358(safe_version)
specifiers.py:285(Specifier)                                                    ->       1    0.000    0.006  re.py:192(compile)
                                                                                         7    0.000    0.000  specifiers.py:276(_require_version_compare)
                                                                                         1    0.000    0.000  {method 'setter' of 'property' objects}
source.py:15(get_class)                                                         ->    1059    0.001    0.001  source.py:31(get_mod_func)
                                                                                      1059    0.002    0.002  {__import__}
                                                                                      1059    0.000    0.000  {callable}
                                                                                      1059    0.000    0.000  {getattr}
                                                                                      1059    0.000    0.000  {isinstance}
polyclasses.py:260(to_ring)                                                     ->      64    0.000    0.005  polyclasses.py:272(convert)
                                                                                        64    0.000    0.000  rationalfield.py:18(get_ring)
__init__.py:2651(_get_metadata)                                                 ->     134    0.000    0.001  __init__.py:1607(has_metadata)
                                                                                        61    0.000    0.001  __init__.py:1621(get_metadata_lines)
                                                                                        90    0.000    0.000  __init__.py:2001(has_metadata)
                                                                                        60    0.000    0.002  __init__.py:2011(get_metadata_lines)
                                                                                       477    0.000    0.001  __init__.py:2303(yield_lines)
                                                                                       345    0.000    0.000  __init__.py:2692(__getattr__)
{divmod}                                                                        ->
compatibility.py:54(is_sequence)                                                ->    3060    0.001    0.003  compatibility.py:11(iterable)
                                                                                      3745    0.001    0.001  {hasattr}
                                                                                       493    0.000    0.000  {isinstance}
densebasic.py:218(dmp_degree_list)                                              ->    1934    0.001    0.003  densebasic.py:207(_rec_degree_list)
base64mime.py:25(<module>)                                                      ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.001    0.005  utils.py:5(<module>)
libintmath.py:141(numeral_python)                                               ->    4848    0.003    0.003  libintmath.py:130(small_numeral)
domain.py:399(abs)                                                              ->   30955    0.001    0.001  {abs}
utils.py:5(<module>)                                                            ->       1    0.000    0.000  _parseaddr.py:7(<module>)
                                                                                         1    0.000    0.000  base64.py:3(<module>)
                                                                                         1    0.000    0.000  encoders.py:5(<module>)
                                                                                         1    0.000    0.000  quopri.py:3(<module>)
                                                                                         4    0.000    0.001  re.py:192(compile)
                                                                                        13    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.001    0.001  socket.py:45(<module>)
                                                                                         1    0.000    0.002  urllib.py:23(<module>)
sre_parse.py:193(__next)                                                        ->   22024    0.001    0.001  {len}
ikfast_AST.py:464(generate)                                                     ->       2    0.000    0.005  ikfast_generator_cpp.py:1651(generateFreeParameter)
ikfast_generator_cpp.py:1651(generateFreeParameter)                             ->       2    0.000    0.005  ikfast_generator_cpp.py:1763(generateTree)
                                                                                         4    0.000    0.000  {method 'append' of 'list' objects}
numbers.py:1255(as_numer_denom)                                                 ->
matrices.py:440(__add__)                                                        ->      65    0.000    0.005  matrices.py:2605(matrix_add)
facts.py:134(apply_beta_to_alpha_route)                                         ->      66    0.000    0.000  facts.py:55(list_populate)
                                                                                      8365    0.002    0.003  logic.py:347(__new__)
                                                                                        33    0.000    0.000  {isinstance}
                                                                                        95    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         9    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                        33    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                         1    0.000    0.000  {method 'keys' of 'dict' objects}
str.py:344(_print_Integer)                                                      ->
matrices.py:2605(matrix_add)                                                    ->      65    0.001    0.001  matrices.py:77(__init__)
                                                                                       130    0.000    0.000  matrices.py:342(tolist)
                                                                                       260    0.000    0.000  matrices.py:382(shape)
                                                                                       223    0.000    0.003  {map}
power.py:206(_eval_is_odd)                                                      ->     573    0.000    0.005  assumptions.py:365(getit)
                                                                                       573    0.000    0.000  power.py:91(base)
                                                                                         1    0.000    0.000  power.py:95(exp)
basic.py:1013(find)                                                             ->     326    0.000    0.005  basic.py:1024(rec_find)
                                                                                       326    0.000    0.000  {isinstance}
version.py:208(__init__)                                                        ->    1302    0.000    0.000  version.py:217(<genexpr>)
                                                                                      1032    0.000    0.000  version.py:308(_parse_letter_version)
                                                                                       344    0.000    0.000  version.py:342(_parse_local_version)
                                                                                       344    0.001    0.001  version.py:353(_cmpkey)
                                                                                      3440    0.000    0.000  {method 'group' of '_sre.SRE_Match' objects}
                                                                                       344    0.001    0.001  {method 'search' of '_sre.SRE_Pattern' objects}
                                                                                       284    0.000    0.000  {method 'split' of 'str' objects}
                                                                                        60    0.000    0.000  {method 'split' of 'unicode' objects}
pythonrationaltype.py:211(numer)                                                ->
{next}                                                                          ->     354    0.000    0.000  __init__.py:2483(<lambda>)
                                                                                       354    0.000    0.005  __init__.py:2651(_get_metadata)
tokenize.py:23(<module>)                                                        ->       2    0.000    0.000  re.py:192(compile)
                                                                                         1    0.000    0.000  token.py:1(<module>)
                                                                                        16    0.000    0.000  tokenize.py:45(group)
                                                                                         1    0.000    0.000  tokenize.py:46(any)
                                                                                         2    0.000    0.000  tokenize.py:47(maybe)
                                                                                         1    0.000    0.000  tokenize.py:146(TokenError)
                                                                                         1    0.000    0.000  tokenize.py:148(StopTokenizing)
                                                                                         1    0.000    0.000  tokenize.py:179(Untokenizer)
                                                                                         1    0.000    0.000  {dir}
                                                                                         1    0.000    0.005  {map}
                                                                                        65    0.000    0.000  {method 'startswith' of 'str' objects}
ikfast_IKFastSolver.py:7312(<genexpr>)                                          ->      84    0.000    0.005  basic.py:471(__repr__)
rootoftools.py:1(<module>)                                                      ->       2    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.005  polyroots.py:1(<module>)
                                                                                         1    0.000    0.000  rootoftools.py:83(RootOf)
                                                                                         1    0.000    0.000  rootoftools.py:480(RootSum)
                                                                                         1    0.000    0.000  six.py:184(find_module)
__init__.py:948(subscribe)                                                      ->     107    0.000    0.000  __init__.py:726(__iter__)
                                                                                       106    0.000    0.005  __init__.py:3165(<lambda>)
                                                                                         1    0.000    0.000  {method 'append' of 'list' objects}
basic.py:1226(class_key)                                                        ->
{method 'upper' of 'str' objects}                                               ->
__init__.py:3165(<lambda>)                                                      ->     106    0.000    0.005  __init__.py:2656(activate)
__init__.py:2656(activate)                                                      ->       1    0.000    0.001  __init__.py:2208(declare_namespace)
                                                                                       106    0.000    0.002  __init__.py:2240(fixup_namespace_packages)
                                                                                       108    0.000    0.001  __init__.py:2651(_get_metadata)
                                                                                       106    0.001    0.001  __init__.py:2737(insert_on)
ikfast_AST.py:189(checkValidSolution)                                           ->      10    0.000    0.003  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                         6    0.000    0.002  polytools.py:892(as_expr)
                                                                                         4    0.000    0.000  {all}
polyroots.py:1(<module>)                                                        ->       2    0.001    0.005  __init__.py:6(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
ikfast_IKFastSolver.py:418(IsHinge)                                             ->       4    0.000    0.000  __init__.py:1157(info)
polyclasses.py:243(to_tuple)                                                    ->     635    0.001    0.004  densebasic.py:426(dmp_to_tuple)
polyoptions.py:238(default)                                                     ->
__init__.py:6(<module>)                                                         ->       3    0.001    0.003  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  bessel.py:1(<module>)
                                                                                         1    0.000    0.000  bsplines.py:1(<module>)
                                                                                         1    0.000    0.000  epathtools.py:1(<module>)
                                                                                         1    0.000    0.000  hyper.py:1(<module>)
                                                                                         1    0.000    0.000  hyperexpand.py:15(<module>)
                                                                                         1    0.000    0.000  simplify.py:1(<module>)
                                                                                         8    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  spherical_harmonics.py:1(<module>)
                                                                                         1    0.000    0.000  sqrtdenest.py:1(<module>)
                                                                                         1    0.000    0.000  traversaltools.py:1(<module>)
polyclasses.py:230(to_dict)                                                     ->     418    0.001    0.004  densebasic.py:1014(dmp_to_dict)
{posix.system}                                                                  ->
collections.py:305(namedtuple)                                                  ->      83    0.000    0.000  {all}
                                                                                        17    0.000    0.000  {isinstance}
                                                                                        17    0.000    0.000  {len}
                                                                                        17    0.000    0.000  {map}
                                                                                        83    0.000    0.000  {method '__contains__' of 'frozenset' objects}
                                                                                        66    0.000    0.000  {method 'add' of 'set' objects}
                                                                                        17    0.000    0.000  {method 'format' of 'str' objects}
                                                                                        17    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                        83    0.000    0.000  {method 'isdigit' of 'str' objects}
                                                                                        34    0.000    0.000  {method 'join' of 'str' objects}
                                                                                        33    0.000    0.000  {method 'replace' of 'str' objects}
                                                                                        16    0.000    0.000  {method 'split' of 'str' objects}
                                                                                        66    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                        17    0.000    0.000  {repr}
                                                                                        17    0.000    0.000  {sys._getframe}
libintmath.py:197(isqrt_small_python)                                           ->
matrices.py:361(copyin_matrix)                                                  ->     979    0.001    0.001  matrices.py:227(__getitem__)
                                                                                       979    0.001    0.001  matrices.py:276(__setitem__)
                                                                                       530    0.000    0.000  matrices.py:990(slice2bounds)
                                                                                       979    0.001    0.001  sympify.py:23(sympify)
                                                                                      1028    0.000    0.000  {range}
ctx_mp.py:4(<module>)                                                           ->       1    0.000    0.000  ctx_mp.py:52(MPContext)
                                                                                         1    0.000    0.000  ctx_mp.py:57(MPContext)
                                                                                         1    0.000    0.000  ctx_mp.py:1223(PrecisionManager)
                                                                                         1    0.000    0.000  ctx_mp.py:1228(PrecisionManager)
                                                                                         2    0.000    0.003  ctx_mp_python.py:3(<module>)
                                                                                         2    0.000    0.000  rational.py:1(<module>)
                                                                                         1    0.000    0.001  re.py:192(compile)
                                                                                         3    0.000    0.000  six.py:184(find_module)
basic.py:1024(rec_find)                                                         ->    4162    0.000    0.000  basic.py:647(args)
                                                                                      4162    0.001    0.001  basic.py:1016(<lambda>)
                                                                                  3836/607    0.002    0.004  basic.py:1024(rec_find)
platform.py:10(<module>)                                                        ->       1    0.000    0.000  platform.py:390(_popen)
                                                                                        13    0.000    0.004  re.py:192(compile)
                                                                                         1    0.000    0.000  {hasattr}
runtests.py:13(<module>)                                                        ->       1    0.000    0.000  collections.py:305(namedtuple)
                                                                                         1    0.000    0.002  doctest.py:46(<module>)
                                                                                         1    0.001    0.001  pdb.py:3(<module>)
                                                                                         1    0.000    0.000  runtests.py:70(get_sympy_dir)
                                                                                         1    0.000    0.000  runtests.py:472(SymPyTests)
                                                                                         1    0.000    0.000  runtests.py:603(SymPyDocTests)
                                                                                         1    0.000    0.000  runtests.py:714(SymPyDocTestFinder)
                                                                                         1    0.000    0.000  runtests.py:865(SymPyDocTestRunner)
                                                                                         1    0.000    0.000  runtests.py:939(Reporter)
                                                                                         1    0.000    0.000  runtests.py:945(PyTestReporter)
                                                                                        13    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  timeit.py:53(<module>)
                                                                                         1    0.000    0.000  {getattr}
{posix.fork}                                                                    ->
pythonrationaltype.py:215(denom)                                                ->
densebasic.py:426(dmp_to_tuple)                                                 -> 7294/1502    0.002    0.004  densebasic.py:448(<genexpr>)
polyclasses.py:1(<module>)                                                      ->       1    0.000    0.000  densearith.py:1(<module>)
                                                                                         1    0.000    0.001  densebasic.py:1(<module>)
                                                                                         1    0.000    0.000  densetools.py:1(<module>)
                                                                                         1    0.001    0.003  euclidtools.py:1(<module>)
                                                                                         1    0.000    0.000  factortools.py:1(<module>)
                                                                                         1    0.000    0.000  polyclasses.py:5(GenericPoly)
                                                                                         1    0.000    0.000  polyclasses.py:141(DMP)
                                                                                         1    0.000    0.000  polyclasses.py:912(DMF)
                                                                                         1    0.000    0.000  polyclasses.py:1300(ANP)
                                                                                         1    0.000    0.000  rootisolation.py:1(<module>)
                                                                                         7    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  sqfreetools.py:1(<module>)
densebasic.py:697(dmp_one_p)                                                    ->    3958    0.002    0.003  densebasic.py:729(dmp_ground_p)
inspect.py:339(getmro)                                                          ->    7860    0.001    0.001  {hasattr}
ikfast_AST.py:613(leftmultiply)                                                 ->       2    0.000    0.004  matrices.py:407(__mul__)
matrices.py:372(copyin_list)                                                    ->     160    0.000    0.000  compatibility.py:54(is_sequence)
                                                                                       160    0.000    0.002  matrices.py:77(__init__)
                                                                                       160    0.001    0.002  matrices.py:361(copyin_matrix)
{math.log}                                                                      ->
__init__.py:111(<module>)                                                       ->       1    0.000    0.000  basic.py:6(<module>)
                                                                                         1    0.000    0.000  decomp.py:15(<module>)
                                                                                         1    0.000    0.000  decomp_cholesky.py:1(<module>)
                                                                                         1    0.000    0.000  decomp_lu.py:1(<module>)
                                                                                         1    0.000    0.001  decomp_qr.py:1(<module>)
                                                                                         1    0.000    0.002  decomp_schur.py:1(<module>)
                                                                                         1    0.000    0.000  dual.py:12(<module>)
                                                                                        12    0.000    0.000  dual.py:52(register_func)
                                                                                         1    0.000    0.000  linalg_version.py:1(<module>)
                                                                                         1    0.000    0.000  matfuncs.py:5(<module>)
                                                                                         1    0.000    0.000  misc.py:1(<module>)
                                                                                         2    0.000    0.000  nosetester.py:170(__init__)
                                                                                        10    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {dir}
                                                                                        11    0.000    0.000  {eval}
                                                                                         1    0.000    0.000  {filter}
_internal.py:6(<module>)                                                        ->       1    0.001    0.001  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  __init__.py:10(<module>)
                                                                                         1    0.000    0.000  _internal.py:219(_missing_ctypes)
                                                                                         1    0.000    0.000  _internal.py:226(_ctypes)
                                                                                         1    0.000    0.000  _internal.py:631(TooHardError)
                                                                                         1    0.000    0.001  numerictypes.py:82(<module>)
                                                                                         3    0.000    0.001  re.py:192(compile)
                                                                                         2    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         2    0.000    0.000  {method 'keys' of 'dict' objects}
difflib.py:152(__init__)                                                        ->     760    0.001    0.003  difflib.py:221(set_seqs)
ctx_mp_python.py:98(mpf_convert_rhs)                                            ->    2638    0.001    0.001  libmpf.py:330(from_int)
                                                                                       197    0.000    0.001  libmpf.py:410(from_float)
                                                                                      2638    0.000    0.000  {isinstance}
posixpath.py:97(splitext)                                                       ->    1546    0.002    0.002  genericpath.py:93(_splitext)
fromnumeric.py:1900(any)                                                        ->    2024    0.001    0.001  numeric.py:484(asanyarray)
                                                                                      2024    0.000    0.002  {method 'any' of 'numpy.ndarray' objects}
containers.py:47(__iter__)                                                      ->    4898    0.001    0.001  basic.py:647(args)
                                                                                      4898    0.001    0.001  {iter}
assume.py:123(__call__)                                                         ->    2118    0.001    0.003  assume.py:47(__new__)
tempfile.py:18(<module>)                                                        ->       1    0.000    0.000  io.py:34(<module>)
                                                                                         1    0.000    0.003  random.py:40(<module>)
                                                                                         1    0.000    0.000  tempfile.py:108(_RandomNameSequence)
                                                                                         1    0.000    0.000  tempfile.py:383(_TemporaryFileWrapper)
                                                                                         1    0.000    0.000  tempfile.py:519(SpooledTemporaryFile)
                                                                                         5    0.000    0.000  {hasattr}
                                                                                         1    0.000    0.000  {thread.allocate_lock}
densebasic.py:448(<genexpr>)                                                    -> 4037/898    0.002    0.003  densebasic.py:426(dmp_to_tuple)
simplify.py:345(parse_term)                                                     ->    4709    0.001    0.001  basic.py:622(func)
                                                                                        14    0.000    0.000  function.py:131(func)
                                                                                      4723    0.001    0.001  {isinstance}
operations.py:323(<genexpr>)                                                    ->    2231    0.003    0.003  sympify.py:23(sympify)
numbers.py:172(class_key)                                                       ->
__init__.py:45(<module>)                                                        ->       1    0.001    0.001  case.py:1(<module>)
                                                                                         1    0.000    0.000  info.py:34(<module>)
                                                                                         1    0.000    0.000  linalg.py:10(<module>)
                                                                                         1    0.000    0.000  loader.py:1(<module>)
                                                                                         1    0.000    0.000  main.py:1(<module>)
                                                                                         2    0.000    0.000  nosetester.py:511(_numpy_tester)
                                                                                         1    0.000    0.001  result.py:1(<module>)
                                                                                         1    0.000    0.000  suite.py:1(<module>)
                                                                                         1    0.000    0.000  {method 'extend' of 'list' objects}
ikfast_IKFastSolver.py:302(GetMatrixFromNumpy)                                  ->      14    0.000    0.003  matrices.py:77(__init__)
exprtools.py:166(lcm)                                                           ->     200    0.000    0.000  basic.py:179(__hash__)
                                                                                      2648    0.001    0.001  exprtools.py:60(__init__)
                                                                                      2648    0.000    0.000  {method 'iteritems' of 'dict' objects}
iterables.py:166(__init__)                                                      ->
core.py:118(__init__)                                                           ->      23    0.000    0.000  assumptions.py:346(make__get_assumption)
                                                                                       173    0.001    0.001  facts.py:821(deduce_all_facts)
                                                                                       133    0.000    0.000  {isinstance}
                                                                                       451    0.000    0.000  {method 'get' of 'dictproxy' objects}
                                                                                       714    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                       173    0.000    0.000  {method 'iteritems' of 'dictproxy' objects}
                                                                                      2178    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                       647    0.000    0.000  {setattr}
logic.py:347(__new__)                                                           ->    8617    0.001    0.001  logic.py:57(name_not)
                                                                                        21    0.000    0.000  logic.py:293(_eval_propagate_not)
                                                                                         4    0.000    0.000  logic.py:338(_eval_propagate_not)
                                                                                      8692    0.000    0.000  {isinstance}
densebasic.py:207(_rec_degree_list)                                             ->    2158    0.001    0.001  densebasic.py:148(dmp_degree)
                                                                                   224/176    0.000    0.000  densebasic.py:207(_rec_degree_list)
                                                                                      2158    0.000    0.000  {max}
difflib.py:221(set_seqs)                                                        ->     760    0.000    0.000  difflib.py:233(set_seq1)
                                                                                       760    0.001    0.002  difflib.py:259(set_seq2)
numbers.py:1012(__int__)                                                        ->
ikfast_IKFastSolver.py:6336(verifyAllEquations)                                 ->       8    0.000    0.001  cache.py:74(wrapper)
                                                                                         8    0.000    0.003  ikfast_IKFastSolver.py:9167(isValidSolution)
                                                                                         2    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {range}
libmpf.py:610(mpf_gt)                                                           ->    2097    0.001    0.002  libmpf.py:548(mpf_cmp)
ctx_mp_python.py:3(<module>)                                                    ->       2    0.000    0.000  ctx_mp_python.py:33(mpnumeric)
                                                                                         2    0.000    0.000  ctx_mp_python.py:39(_mpf)
                                                                                        14    0.000    0.003  ctx_mp_python.py:277(binary_op)
                                                                                         2    0.000    0.000  ctx_mp_python.py:328(_constant)
                                                                                         2    0.000    0.000  ctx_mp_python.py:357(_mpc)
                                                                                         2    0.000    0.000  ctx_mp_python.py:581(PythonMPContext)
matrices.py:2613(<lambda>)                                                      ->      50    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                       583    0.000    0.002  numbers.py:1028(__add__)
                                                                                        10    0.000    0.000  numbers.py:1035(__radd__)
evalf.py:261(add_terms)                                                         ->     512    0.000    0.000  libintmath.py:83(python_bitcount)
                                                                                       512    0.001    0.001  libmpf.py:153(_normalize)
                                                                                      1024    0.000    0.000  {len}
                                                                                      1024    0.000    0.000  {max}
{method 'startswith' of 'str' objects}                                          ->
ikfast_IKFastSolver.py:578(countVariables)                                      ->     141    0.000    0.000  basic.py:647(args)
                                                                                       335    0.001    0.003  cache.py:74(wrapper)
                                                                                       141    0.000    0.000  {sum}
expr.py:977(as_coeff_mul)                                                       ->
containers.py:41(__len__)                                                       ->    4898    0.000    0.000  basic.py:647(args)
                                                                                      4898    0.000    0.000  {len}
polyroots.py:440(roots)                                                         ->       2    0.000    0.002  polyroots.py:37(roots_quadratic)
                                                                                         2    0.000    0.001  polyroots.py:372(preprocess_roots)
                                                                                         4    0.000    0.000  polyroots.py:519(_update_dict)
                                                                                         2    0.000    0.000  polytools.py:80(__new__)
                                                                                         4    0.000    0.000  polytools.py:437(get_domain)
                                                                                         2    0.000    0.000  polytools.py:650(to_field)
                                                                                         2    0.000    0.000  polytools.py:1043(terms_gcd)
                                                                                         4    0.000    0.000  polytools.py:1620(degree)
                                                                                         2    0.000    0.000  polytools.py:3129(is_ground)
                                                                                         2    0.000    0.000  polytools.py:3261(is_multivariate)
                                                                                         2    0.000    0.000  {isinstance}
                                                                                        12    0.000    0.000  {method 'pop' of 'dict' objects}
                                                                                         2    0.000    0.000  {method 'update' of 'dict' objects}
polyoptions.py:699(allowed_flags)                                               ->    2606    0.000    0.000  {method 'iterkeys' of 'dict' objects}
libmpf.py:637(mpf_neg)                                                          ->
numbers.py:1119(__le__)                                                         ->     104    0.000    0.003  numbers.py:804(__le__)
                                                                                       208    0.000    0.000  {isinstance}
mul.py:477(as_two_terms)                                                        ->    1197    0.000    0.000  basic.py:647(args)
                                                                                       707    0.001    0.001  operations.py:57(_new_rawargs)
                                                                                      2394    0.000    0.000  {len}
power.py:580(_eval_derivative)                                                  ->      11    0.000    0.001  cache.py:74(wrapper)
                                                                                        25    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                     22/16    0.000    0.001  expr.py:1831(diff)
                                                                                        11    0.000    0.000  numbers.py:1028(__add__)
                                                                                        19    0.000    0.000  numbers.py:1056(__mul__)
                                                                                        33    0.000    0.000  power.py:91(base)
                                                                                        22    0.000    0.000  power.py:95(exp)
__init__.py:1360(isEnabledFor)                                                  ->    1311    0.001    0.001  __init__.py:1346(getEffectiveLevel)
ctx_mp_python.py:277(binary_op)                                                 ->      14    0.003    0.003  exec_py2.py:1(exec_)
                                                                                         7    0.000    0.000  {globals}
                                                                                        28    0.000    0.000  {method 'replace' of 'str' objects}
{math.frexp}                                                                    ->
random.py:40(<module>)                                                          ->       1    0.002    0.002  hashlib.py:56(<module>)
                                                                                         1    0.000    0.000  random.py:72(Random)
                                                                                         1    0.000    0.001  random.py:91(__init__)
                                                                                         1    0.000    0.000  random.py:655(WichmannHill)
                                                                                         1    0.000    0.000  random.py:805(SystemRandom)
                                                                                         1    0.000    0.000  {math.exp}
                                                                                         2    0.000    0.000  {math.log}
                                                                                         1    0.000    0.000  {math.sqrt}
function.py:202(class_key)                                                      ->
ikfast_IKFastSolver.py:625(gen_trigsubs)                                        ->       7    0.000    0.001  __init__.py:1157(info)
                                                                                        27    0.000    0.000  basic.py:374(__eq__)
                                                                                         7    0.000    0.000  basic.py:475(__str__)
                                                                                        14    0.000    0.000  cache.py:74(wrapper)
                                                                                        42    0.000    0.002  decorators.py:72(__sympifyit_wrapper)
                                                                                         7    0.000    0.000  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                        14    0.000    0.000  symbol.py:35(__new__)
                                                                                        21    0.000    0.000  {method 'append' of 'list' objects}
exec_py2.py:1(exec_)                                                            ->
numbers.py:804(__le__)                                                          ->     100    0.000    0.001  evalf.py:983(evalf)
                                                                                       100    0.000    0.000  libmpf.py:605(mpf_le)
                                                                                       100    0.000    0.000  numbers.py:982(_as_mpf_val)
                                                                                       104    0.000    0.002  sympify.py:161(_sympify)
                                                                                       416    0.000    0.000  {isinstance}
libmpf.py:3(<module>)                                                           ->       2    0.001    0.001  backend.py:1(<module>)
                                                                                         2    0.000    0.001  libintmath.py:7(<module>)
                                                                                         2    0.000    0.000  libmpf.py:43(ComplexResult)
                                                                                         2    0.000    0.000  libmpf.py:132(h_mask_big)
                                                                                       536    0.000    0.000  libmpf.py:322(<genexpr>)
                                                                                         5    0.000    0.000  six.py:184(find_module)
                                                                                         5    0.000    0.000  {intern}
                                                                                         2    0.000    0.000  {range}
{numpy.core.multiarray.array}                                                   ->       7    0.000    0.000  matrices.py:331(__array__)
                                                                                        14    0.000    0.000  matrices.py:2185(__getattr__)
                                                                                       395    0.000    0.001  numbers.py:162(__float__)
expr.py:2003(_eval_derivative)                                                  ->     969    0.001    0.002  basic.py:374(__eq__)
symbol.py:205(symbols)                                                          ->     332    0.000    0.001  symbol.py:127(__new__)
                                                                                       166    0.000    0.000  {isinstance}
                                                                                       166    0.000    0.000  {len}
                                                                                       332    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       166    0.000    0.000  {method 'endswith' of 'str' objects}
                                                                                       498    0.000    0.000  {method 'pop' of 'dict' objects}
                                                                                       166    0.000    0.000  {method 'split' of '_sre.SRE_Pattern' objects}
                                                                                       166    0.000    0.000  {method 'strip' of 'str' objects}
expr.py:236(_eval_conjugate)                                                    ->     737    0.000    0.002  assumptions.py:365(getit)
euclidtools.py:1(<module>)                                                      ->      28    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                        28    0.000    0.000  cythonutils.py:8(cythonized)
                                                                                         1    0.000    0.002  galoistools.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
evalf.py:916(<lambda>)                                                          ->
trigonometric.py:1173(eval)                                                     ->       2    0.000    0.000  add.py:517(__neg__)
                                                                                        14    0.000    0.000  basic.py:179(__hash__)
                                                                                         2    0.000    0.000  basic.py:374(__eq__)
                                                                                        18    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                         3    0.000    0.000  expr.py:70(__neg__)
                                                                                         5    0.000    0.000  expr.py:761(as_coefficient)
                                                                                         5    0.000    0.001  expr.py:1247(could_extract_minus_sign)
                                                                                        16    0.000    0.000  miscellaneous.py:30(sqrt)
                                                                                         1    0.000    0.000  numbers.py:197(is_number)
                                                                                         1    0.000    0.000  numbers.py:819(__hash__)
                                                                                         1    0.000    0.000  numbers.py:1015(__neg__)
                                                                                         4    0.000    0.000  symbol.py:96(is_number)
                                                                                         4    0.000    0.000  sympify.py:23(sympify)
precedence.py:45(precedence_Integer)                                            ->
assume.py:47(__new__)                                                           ->    2118    0.001    0.002  basic.py:82(__new__)
power.py:160(_eval_is_integer)                                                  -> 573/571    0.000    0.002  assumptions.py:365(getit)
                                                                                       571    0.000    0.000  power.py:91(base)
                                                                                       573    0.000    0.000  power.py:95(exp)
sre_compile.py:433(_compile_info)                                               ->      11    0.000    0.000  sre_compile.py:228(_compile_charset)
                                                                                        30    0.000    0.000  sre_parse.py:137(__len__)
                                                                                        46    0.000    0.000  sre_parse.py:141(__getitem__)
                                                                                       100    0.000    0.002  sre_parse.py:151(getwidth)
                                                                                       358    0.000    0.000  {len}
                                                                                       555    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        32    0.000    0.000  {method 'extend' of 'list' objects}
__init__.py:41(<module>)                                                        ->       1    0.000    0.002  core.py:21(<module>)
                                                                                         1    0.000    0.000  extras.py:10(<module>)
                                                                                         2    0.000    0.000  nosetester.py:511(_numpy_tester)
ask.py:1(<module>)                                                              ->       1    0.000    0.000  ask.py:8(Q)
                                                                                        19    0.000    0.000  ask.py:139(register_handler)
                                                                                        82    0.000    0.000  basic.py:179(__hash__)
                                                                                         8    0.000    0.000  boolalg.py:11(__and__)
                                                                                         3    0.000    0.000  boolalg.py:15(__or__)
                                                                                         7    0.000    0.000  boolalg.py:19(__invert__)
                                                                                        43    0.000    0.000  cache.py:74(wrapper)
                                                                                        26    0.000    0.002  operations.py:322(__new__)
                                                                                        20    0.000    0.000  {getattr}
                                                                                         1    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                        22    0.000    0.000  {method 'startswith' of 'str' objects}
densebasic.py:729(dmp_ground_p)                                                 ->    3450    0.000    0.000  {len}
__init__.py:2164(_handle_ns)                                                    ->      81    0.000    0.002  pkgutil.py:176(find_module)
                                                                                        86    0.000    0.000  pkgutil.py:366(get_importer)
                                                                                         5    0.000    0.000  {method 'find_module' of 'imp.NullImporter' objects}
posixpath.py:372(realpath)                                                      ->     111    0.000    0.001  posixpath.py:358(abspath)
                                                                                       111    0.000    0.002  posixpath.py:380(_joinrealpath)
str.py:267(_print_Poly)                                                         ->      46    0.000    0.000  domain.py:53(__str__)
                                                                                        32    0.000    0.000  polynomialring.py:32(__str__)
                                                                                        78    0.000    0.000  polytools.py:437(get_domain)
                                                                                        78    0.000    0.000  polytools.py:457(get_modulus)
                                                                                        78    0.000    0.001  polytools.py:758(terms)
                                                                                       110    0.000    0.000  printer.py:226(_print)
                                                                                        78    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        78    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                       234    0.000    0.000  {method 'join' of 'str' objects}
                                                                                        78    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                        32    0.000    0.000  {method 'startswith' of 'str' objects}
polyclasses.py:485(degree)                                                      ->    1151    0.000    0.001  densebasic.py:182(dmp_degree_in)
                                                                                      1151    0.000    0.000  {isinstance}
numbers.py:696(_eval_power)                                                     ->     130    0.000    0.000  assumptions.py:365(getit)
                                                                                       129    0.000    0.001  cache.py:74(wrapper)
                                                                                     15/12    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                         4    0.000    0.000  numbers.py:191(__ge__)
                                                                                         1    0.000    0.000  numbers.py:647(__neg__)
                                                                                        14    0.000    0.000  numbers.py:989(__new__)
                                                                                        85    0.000    0.000  numbers.py:1419(__neg__)
                                                                                       310    0.000    0.000  {isinstance}
libintmath.py:130(small_numeral)                                                ->
euclidtools.py:870(_dup_rr_trivial_gcd)                                         ->     228    0.000    0.000  densearith.py:494(dup_neg)
                                                                                      1032    0.000    0.000  densebasic.py:15(poly_LC)
                                                                                      1032    0.000    0.000  domain.py:395(is_nonnegative)
sre_compile.py:228(_compile_charset)                                            ->     387    0.001    0.002  sre_compile.py:256(_optimize_charset)
                                                                                      1522    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        49    0.000    0.000  {method 'extend' of 'list' objects}
matrices.py:2626(eye)                                                           ->     296    0.000    0.000  matrices.py:276(__setitem__)
                                                                                        76    0.000    0.002  matrices.py:2616(zeros)
                                                                                        76    0.000    0.000  {range}
genericpath.py:93(_splitext)                                                    ->    3092    0.001    0.001  {method 'rfind' of 'str' objects}
partfrac.py:1(<module>)                                                         ->       1    0.000    0.002  decorator.py:28(threaded)
decorator.py:4(threaded_factory)                                                ->       1    0.000    0.002  __init__.py:4(<module>)
                                                                                         3    0.000    0.000  functools.py:17(update_wrapper)
                                                                                         3    0.000    0.000  functools.py:39(wraps)
                                                                                         1    0.000    0.000  six.py:184(find_module)
decorator.py:28(threaded)                                                       ->       1    0.000    0.002  decorator.py:4(threaded_factory)
pkgutil.py:176(find_module)                                                     ->      81    0.000    0.002  posixpath.py:372(realpath)
                                                                                        81    0.000    0.000  {imp.find_module}
                                                                                        81    0.000    0.000  {method 'split' of 'str' objects}
urllib.py:23(<module>)                                                          ->       1    0.000    0.000  re.py:192(compile)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.001  ssl.py:89(<module>)
                                                                                         1    0.000    0.000  urllib.py:114(ContentTooShortError)
                                                                                         1    0.000    0.000  urllib.py:120(URLopener)
                                                                                         1    0.000    0.000  urllib.py:616(FancyURLopener)
                                                                                         1    0.000    0.000  urllib.py:862(ftpwrapper)
                                                                                         1    0.000    0.000  urllib.py:955(addbase)
                                                                                         1    0.000    0.000  urllib.py:984(addclosehook)
                                                                                         1    0.000    0.000  urllib.py:1004(addinfo)
                                                                                         1    0.000    0.000  urllib.py:1014(addinfourl)
                                                                                       485    0.000    0.000  urllib.py:1217(<genexpr>)
                                                                                         1    0.000    0.001  urlparse.py:29(<module>)
                                                                                       191    0.000    0.000  {method 'format' of 'str' objects}
                                                                                         1    0.000    0.000  {zip}
domain.py:312(__eq__)                                                           ->
__init__.py:446(usesTime)                                                       ->    2622    0.001    0.001  {method 'find' of 'str' objects}
__init__.py:4(<module>)                                                         ->       1    0.000    0.002  matrices.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
version.py:14(<module>)                                                         ->       1    0.000    0.000  __init__.py:22(find_module)
                                                                                         1    0.000    0.000  _structures.py:14(<module>)
                                                                                         1    0.000    0.000  collections.py:305(namedtuple)
                                                                                         2    0.000    0.000  re.py:192(compile)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  version.py:46(InvalidVersion)
                                                                                         1    0.000    0.000  version.py:52(_BaseVersion)
                                                                                         1    0.000    0.000  version.py:82(LegacyVersion)
                                                                                         1    0.000    0.002  version.py:201(Version)
ctx_mp_python.py:199(__rdiv__)                                                  ->     197    0.000    0.001  <string>:2(__div__)
                                                                                       197    0.000    0.001  ctx_mp_python.py:114(mpf_convert_lhs)
                                                                                       197    0.000    0.000  {isinstance}
difflib.py:259(set_seq2)                                                        ->     773    0.002    0.002  difflib.py:304(__chain_b)
decimal.py:116(<module>)                                                        ->       1    0.000    0.000  abc.py:105(register)
                                                                                         1    0.000    0.000  collections.py:305(namedtuple)
                                                                                         1    0.000    0.000  decimal.py:160(DecimalException)
                                                                                         1    0.000    0.000  decimal.py:183(Clamped)
                                                                                         1    0.000    0.000  decimal.py:195(InvalidOperation)
                                                                                         1    0.000    0.000  decimal.py:224(ConversionSyntax)
                                                                                         1    0.000    0.000  decimal.py:234(DivisionByZero)
                                                                                         1    0.000    0.000  decimal.py:250(DivisionImpossible)
                                                                                         1    0.000    0.000  decimal.py:261(DivisionUndefined)
                                                                                         1    0.000    0.000  decimal.py:272(Inexact)
                                                                                         1    0.000    0.000  decimal.py:284(InvalidContext)
                                                                                         1    0.000    0.000  decimal.py:298(Rounded)
                                                                                         1    0.000    0.000  decimal.py:310(Subnormal)
                                                                                         1    0.000    0.000  decimal.py:321(Overflow)
                                                                                         1    0.000    0.000  decimal.py:359(Underflow)
                                                                                         1    0.000    0.000  decimal.py:505(Decimal)
                                                                                         6    0.000    0.000  decimal.py:514(__new__)
                                                                                         1    0.000    0.000  decimal.py:3748(_ContextManager)
                                                                                         1    0.000    0.000  decimal.py:3763(Context)
                                                                                         3    0.000    0.000  decimal.py:3782(__init__)
                                                                                         1    0.000    0.000  decimal.py:5438(_WorkRep)
                                                                                         1    0.000    0.000  decimal.py:5692(_Log10Memoize)
                                                                                         1    0.000    0.000  decimal.py:5696(__init__)
                                                                                         4    0.000    0.002  re.py:192(compile)
                                                                                         1    0.000    0.000  {hasattr}
solvers.py:184(guess_solve_strategy)                                            ->      22    0.000    0.000  basic.py:647(args)
                                                                                        72    0.000    0.001  cache.py:74(wrapper)
                                                                                        14    0.000    0.001  mul.py:775(as_numer_denom)
                                                                                        11    0.000    0.000  numbers.py:1098(__gt__)
                                                                                        17    0.000    0.000  power.py:91(base)
                                                                                        74    0.000    0.000  power.py:95(exp)
                                                                                     70/22    0.000    0.002  solvers.py:184(guess_solve_strategy)
                                                                                        39    0.000    0.000  {max}
doctest.py:46(<module>)                                                         ->       1    0.000    0.000  collections.py:305(namedtuple)
                                                                                        10    0.000    0.000  doctest.py:128(register_optionflag)
                                                                                         1    0.000    0.000  doctest.py:249(_SpoofOut)
                                                                                         1    0.000    0.000  doctest.py:355(_OutputRedirectingPdb)
                                                                                         1    0.000    0.000  doctest.py:427(Example)
                                                                                         1    0.000    0.000  doctest.py:499(DocTest)
                                                                                         1    0.000    0.002  doctest.py:575(DocTestParser)
                                                                                         1    0.000    0.000  doctest.py:810(DocTestFinder)
                                                                                         1    0.000    0.000  doctest.py:1106(DocTestRunner)
                                                                                         1    0.000    0.000  doctest.py:1536(OutputChecker)
                                                                                         1    0.000    0.000  doctest.py:1669(DocTestFailure)
                                                                                         1    0.000    0.000  doctest.py:1688(UnexpectedException)
                                                                                         1    0.000    0.000  doctest.py:1707(DebugRunner)
                                                                                         1    0.000    0.000  doctest.py:2077(Tester)
                                                                                         1    0.000    0.000  doctest.py:2178(DocTestCase)
                                                                                         1    0.000    0.000  doctest.py:2341(SkipDocTestCase)
                                                                                         1    0.000    0.000  doctest.py:2431(DocFileCase)
                                                                                         1    0.000    0.000  doctest.py:2696(_TestClass)
                                                                                         1    0.000    0.000  {getattr}
{method 'any' of 'numpy.ndarray' objects}                                       ->    2024    0.000    0.002  _methods.py:37(_any)
libmpf.py:483(to_fixed)                                                         ->
galoistools.py:1(<module>)                                                      ->      29    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                         1    0.000    0.001  __init__.py:3(<module>)
                                                                                        29    0.000    0.000  cythonutils.py:8(cythonized)
                                                                                         1    0.000    0.000  polyconfig.py:1(<module>)
                                                                                         1    0.000    0.001  polyutils.py:1(<module>)
                                                                                         3    0.000    0.000  six.py:184(find_module)
numbers.py:1693(__eq__)                                                         ->    1429    0.000    0.001  sympify.py:161(_sympify)
                                                                                      1429    0.000    0.000  {isinstance}
expr.py:325(<genexpr>)                                                          ->
mul.py:795(as_base_exp)                                                         ->     276    0.000    0.000  basic.py:647(args)
                                                                                       236    0.000    0.001  cache.py:74(wrapper)
                                                                                       476    0.000    0.000  expr.py:963(as_base_exp)
                                                                                        76    0.000    0.000  function.py:224(is_commutative)
                                                                                        36    0.000    0.000  function.py:301(as_base_exp)
                                                                                       276    0.000    0.000  numbers.py:1091(__ne__)
                                                                                        40    0.000    0.000  power.py:243(as_base_exp)
                                                                                       512    0.000    0.000  {method 'append' of 'list' objects}
polyoptions.py:310(default)                                                     ->
sre_parse.py:141(__getitem__)                                                   ->     483    0.000    0.000  sre_parse.py:92(__init__)
                                                                                      4786    0.001    0.001  {isinstance}
matrices.py:1(<module>)                                                         ->       1    0.000    0.002  __init__.py:1(<module>)
                                                                                         2    0.000    0.000  matrices.py:8(_matrix)
                                                                                         1    0.000    0.000  matrices.py:17(MatrixError)
                                                                                         1    0.000    0.000  matrices.py:20(ShapeError)
                                                                                         1    0.000    0.000  matrices.py:24(NonSquareMatrixError)
                                                                                         1    0.000    0.000  matrices.py:56(DeferredVector)
                                                                                         1    0.000    0.000  matrices.py:71(Matrix)
                                                                                         2    0.000    0.000  matrices.py:733(MatrixMethods)
                                                                                         1    0.000    0.000  matrices.py:2842(SparseMatrix)
                                                                                         3    0.000    0.000  six.py:184(find_module)
expr.py:1823(as_coeff_Mul)                                                      ->
hashlib.py:56(<module>)                                                         ->       6    0.000    0.000  hashlib.py:100(__get_openssl_constructor)
                                                                                         6    0.000    0.000  {globals}
                                                                                         1    0.000    0.000  {method 'union' of 'set' objects}
polyclasses.py:417(add)                                                         ->  100/54    0.000    0.002  densearith.py:571(dmp_add)
                                                                                       100    0.000    0.000  polyclasses.py:171(unify)
                                                                                       100    0.000    0.000  polyclasses.py:197(per)
libmpf.py:651(mpf_abs)                                                          ->    1883    0.000    0.000  libmpf.py:208(_normalize1)
sre_parse.py:151(getwidth)                                                      -> 1004/227    0.001    0.002  sre_parse.py:151(getwidth)
                                                                                       230    0.000    0.000  {max}
                                                                                      2450    0.000    0.000  {min}
polyoptions.py:252(default)                                                     ->
abc.py:128(__instancecheck__)                                                   ->     513    0.001    0.001  _weakrefset.py:70(__contains__)
                                                                                         7    0.000    0.000  abc.py:148(__subclasscheck__)
                                                                                       257    0.000    0.000  {getattr}
polyutils.py:73(_unify_gens)                                                    ->
symbol.py:149(__new__)                                                          ->     774    0.001    0.002  cache.py:74(wrapper)
libmpc.py:173(mpc_mul_mpf)                                                      ->    2008    0.001    0.001  libmpf.py:858(python_mpf_mul)
ctx_mp_python.py:366(__new__)                                                   ->     296    0.000    0.002  ctx_mp_python.py:47(__new__)
                                                                                       148    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                       148    0.000    0.000  {isinstance}
__init__.py:169(<module>)                                                       ->       1    0.000    0.000  base.py:1(<module>)
                                                                                         1    0.000    0.000  bsr.py:1(<module>)
                                                                                         1    0.000    0.000  construct.py:2(<module>)
                                                                                         1    0.000    0.000  coo.py:1(<module>)
                                                                                         1    0.000    0.000  csc.py:1(<module>)
                                                                                         1    0.000    0.000  csgraph.py:1(<module>)
                                                                                         1    0.000    0.001  csr.py:1(<module>)
                                                                                         1    0.000    0.000  dia.py:1(<module>)
                                                                                         1    0.000    0.000  dok.py:1(<module>)
                                                                                         1    0.000    0.000  extract.py:2(<module>)
                                                                                         1    0.000    0.000  lil.py:2(<module>)
                                                                                         2    0.000    0.000  nosetester.py:170(__init__)
                                                                                        11    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {dir}
                                                                                         1    0.000    0.000  {filter}
posixpath.py:112(basename)                                                      ->    1311    0.001    0.001  {method 'rfind' of 'str' objects}
posixpath.py:380(_joinrealpath)                                                 ->     111    0.000    0.000  posixpath.py:52(isabs)
                                                                                       626    0.000    0.000  posixpath.py:61(join)
                                                                                       626    0.000    0.001  posixpath.py:132(islink)
                                                                                       626    0.000    0.000  {method 'partition' of 'str' objects}
constructor.py:16(<lambda>)                                                     ->
add.py:218(_matches_simple)                                                     ->     591    0.001    0.001  cache.py:74(wrapper)
                                                                                       591    0.000    0.000  {len}
__init__.py:2011(get_metadata_lines)                                            ->      60    0.000    0.002  __init__.py:2004(get_metadata)
__init__.py:148(getLevelName)                                                   ->    1311    0.000    0.000  {method 'get' of 'dict' objects}
function.py:680(<genexpr>)                                                      ->
matrices.py:1405(cross)                                                         ->       3    0.000    0.000  compatibility.py:54(is_sequence)
                                                                                        27    0.000    0.002  decorators.py:72(__sympifyit_wrapper)
                                                                                         3    0.000    0.000  matrices.py:77(__init__)
                                                                                        36    0.000    0.000  matrices.py:227(__getitem__)
ikfast_generator_cpp.py:224(copyequations)                                      ->    1048    0.001    0.001  copy.py:66(copy)
_methods.py:37(_any)                                                            ->    2024    0.002    0.002  {method 'reduce' of 'numpy.ufunc' objects}
__init__.py:2240(fixup_namespace_packages)                                      ->      55    0.000    0.002  __init__.py:2164(_handle_ns)
                                                                                       106    0.000    0.000  {imp.acquire_lock}
                                                                                       106    0.000    0.000  {imp.release_lock}
                                                                                       106    0.000    0.000  {method 'get' of 'dict' objects}
ctx_mp_python.py:149(__abs__)                                                   ->    1811    0.001    0.001  libmpf.py:651(mpf_abs)
                                                                                      1811    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
__init__.py:2004(get_metadata)                                                  ->      60    0.001    0.001  {_io.open}
                                                                                        60    0.001    0.001  {method 'read' of '_io.TextIOWrapper' objects}
{method 'rfind' of 'str' objects}                                               ->
evalf.py:925(<lambda>)                                                          ->
sre_compile.py:256(_optimize_charset)                                           ->      92    0.000    0.000  sre_compile.py:101(fixup)
                                                                                        49    0.000    0.000  sre_compile.py:411(_mk_bitmap)
                                                                                       971    0.000    0.000  {len}
                                                                                        39    0.000    0.000  {map}
                                                                                       951    0.000    0.000  {method 'append' of 'list' objects}
                                                                                      1177    0.000    0.000  {method 'find' of 'bytearray' objects}
                                                                                       100    0.000    0.000  {range}
difflib.py:304(__chain_b)                                                       ->     773    0.000    0.000  {len}
                                                                                        13    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        13    0.000    0.000  {method 'setdefault' of 'dict' objects}
version.py:201(Version)                                                         ->       1    0.000    0.002  re.py:192(compile)
polyoptions.py:367(default)                                                     ->
ctx_mp_python.py:621(convert)                                                   ->      61    0.000    0.000  ctx_mp_python.py:595(make_mpf)
                                                                                        61    0.000    0.000  libmpf.py:410(from_float)
                                                                                       122    0.000    0.000  {isinstance}
ikfast_IKFastSolver.py:361(GetMatrixFromQuat)                                   ->      84    0.000    0.001  decorators.py:72(__sympifyit_wrapper)
                                                                                        54    0.000    0.000  matrices.py:276(__setitem__)
                                                                                         6    0.000    0.000  matrices.py:2626(eye)
                                                                                        18    0.000    0.000  numbers.py:1028(__add__)
                                                                                        36    0.000    0.000  numbers.py:1042(__sub__)
                                                                                        18    0.000    0.000  numbers.py:1049(__rsub__)
                                                                                        24    0.000    0.000  numbers.py:1056(__mul__)
                                                                                        36    0.000    0.000  numbers.py:1063(__rmul__)
doctest.py:575(DocTestParser)                                                   ->       5    0.000    0.002  re.py:192(compile)
__init__.py:70(<lambda>)                                                        ->    1311    0.001    0.001  {sys._getframe}
relational.py:193(__nonzero__)                                                  ->     294    0.001    0.001  basic.py:210(compare)
                                                                                       294    0.000    0.000  relational.py:139(lhs)
                                                                                       294    0.000    0.000  relational.py:143(rhs)
logic.py:49(fuzzy_not)                                                          ->
power.py:121(_eval_is_even)                                                     ->     627    0.000    0.001  assumptions.py:365(getit)
                                                                                       108    0.000    0.000  power.py:91(base)
                                                                                      1091    0.000    0.000  power.py:95(exp)
ctx_base.py:38(__init__)                                                        ->       6    0.000    0.002  functions.py:18(__init__)
                                                                                         6    0.000    0.000  matrices.py:735(__init__)
                                                                                         6    0.000    0.000  quadrature.py:458(__init__)
                                                                                         6    0.000    0.000  rszeta.py:54(__init__)
{method 'reduce' of 'numpy.ufunc' objects}                                      ->
numeric.py:1(<module>)                                                          ->       1    0.000    0.000  arrayprint.py:5(<module>)
                                                                                         1    0.000    0.001  collections.py:11(<module>)
                                                                                         1    0.000    0.000  numeric.py:55(ComplexWarning)
                                                                                         3    0.000    0.000  numeric.py:365(extend_all)
                                                                                         2    0.000    0.000  numeric.py:1871(set_string_function)
                                                                                         1    0.000    0.000  numeric.py:2896(_unspecified)
                                                                                         1    0.000    0.000  numeric.py:2900(errstate)
                                                                                         1    0.000    0.000  numeric.py:2978(_setdef)
                                                                                         2    0.000    0.000  {issubclass}
                                                                                         1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'keys' of 'dict' objects}
printer.py:218(order)                                                           ->
libhyper.py:6(<module>)                                                         ->       2    0.000    0.001  gammazeta.py:14(<module>)
                                                                                         2    0.000    0.000  libhyper.py:43(NoConvergence)
                                                                                         2    0.000    0.000  six.py:184(find_module)
{method 'rstrip' of 'str' objects}                                              ->
core.py:21(<module>)                                                            ->       1    0.000    0.000  core.py:90(MaskedArrayFutureWarning)
                                                                                         2    0.000    0.000  core.py:94(doc_note)
                                                                                         1    0.000    0.000  core.py:130(MAError)
                                                                                         1    0.000    0.000  core.py:138(MaskError)
                                                                                         1    0.000    0.000  core.py:796(_DomainCheckInterval)
                                                                                         3    0.000    0.000  core.py:805(__init__)
                                                                                         1    0.000    0.000  core.py:818(_DomainTan)
                                                                                         1    0.000    0.000  core.py:826(__init__)
                                                                                         1    0.000    0.000  core.py:835(_DomainSafeDivide)
                                                                                         6    0.000    0.000  core.py:841(__init__)
                                                                                         1    0.000    0.000  core.py:855(_DomainGreater)
                                                                                         3    0.000    0.000  core.py:861(__init__)
                                                                                         1    0.000    0.000  core.py:870(_DomainGreaterEqual)
                                                                                         2    0.000    0.000  core.py:876(__init__)
                                                                                         1    0.000    0.000  core.py:885(_MaskedUnaryOperation)
                                                                                        27    0.000    0.000  core.py:903(__init__)
                                                                                         1    0.000    0.000  core.py:961(_MaskedBinaryOperation)
                                                                                        18    0.000    0.000  core.py:981(__init__)
                                                                                         1    0.000    0.000  core.py:1118(_DomainedBinaryOperation)
                                                                                         6    0.000    0.000  core.py:1139(__init__)
                                                                                         1    0.000    0.000  core.py:2352(_MaskedPrintOption)
                                                                                         1    0.000    0.000  core.py:2358(__init__)
                                                                                         1    0.000    0.000  core.py:2569(MaskedIterator)
                                                                                         1    0.001    0.001  core.py:2683(MaskedArray)
                                                                                         1    0.000    0.000  core.py:5902(mvoid)
                                                                                         1    0.000    0.000  core.py:6104(MaskedConstant)
                                                                                         1    0.000    0.000  core.py:6111(__new__)
                                                                                         1    0.000    0.000  core.py:6214(_extrema_operation)
                                                                                         1    0.000    0.000  core.py:6271(_minimum_operation)
                                                                                         1    0.000    0.000  core.py:6275(__init__)
                                                                                         1    0.000    0.000  core.py:6285(_maximum_operation)
                                                                                         1    0.000    0.000  core.py:6289(__init__)
                                                                                         1    0.000    0.000  core.py:6342(_frommethod)
                                                                                        26    0.000    0.000  core.py:6353(__init__)
                                                                                         1    0.000    0.000  core.py:7764(_convert2ma)
                                                                                         8    0.000    0.000  core.py:7777(__init__)
                                                                                         1    0.000    0.000  py3k.py:71(sixu)
                                                                                         4    0.000    0.000  {method 'update' of 'dict' objects}
matrices.py:508(__str__)                                                        ->       8    0.000    0.002  str.py:471(sstr)
files.py:12(<module>)                                                           ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         3    0.000    0.000  files.py:37(<genexpr>)
                                                                                         1    0.000    0.000  files.py:133(File)
                                                                                         1    0.000    0.001  group.py:12(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  six.py:598(iteritems)
                                                                                         1    0.000    0.001  version.py:12(<module>)
                                                                                         2    0.000    0.000  {h5py.h5.get_config}
evalf.py:892(evalf_symbol)                                                      ->
polyclasses.py:171(unify)                                                       ->
function.py:673(<genexpr>)                                                      ->
matrices.py:990(slice2bounds)                                                   ->    2917    0.000    0.000  {isinstance}
power.py:103(_eval_power)                                                       ->       4    0.000    0.000  assumptions.py:365(getit)
                                                                                        77    0.000    0.001  cache.py:74(wrapper)
                                                                                        10    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                        67    0.000    0.000  numbers.py:1056(__mul__)
                                                                                         2    0.000    0.000  numbers.py:1105(__lt__)
                                                                                        79    0.000    0.000  power.py:243(as_base_exp)
                                                                                         2    0.000    0.000  {abs}
functools.py:17(update_wrapper)                                                 ->    1941    0.000    0.000  {getattr}
                                                                                       456    0.000    0.000  {method 'update' of 'dict' objects}
                                                                                      1029    0.000    0.000  {setattr}
__init__.py:88(<module>)                                                        ->       2    0.000    0.000  getlimits.py:245(__init__)
                                                                                         2    0.000    0.000  getlimits.py:270(max)
                                                                                         1    0.000    0.000  info.py:86(<module>)
                                                                                         2    0.000    0.000  nosetester.py:511(_numpy_tester)
                                                                                         1    0.000    0.000  threading.py:1(<module>)
                                                                                         1    0.000    0.000  warnings.py:67(filterwarnings)
                                                                                         1    0.000    0.000  warnings.py:340(__init__)
                                                                                         1    0.000    0.000  warnings.py:361(__enter__)
                                                                                         1    0.000    0.000  warnings.py:377(__exit__)
                                                                                         1    0.000    0.000  {method 'extend' of 'list' objects}
ikfast_IKFastSolver.py:354(numpyVectorToSympy)                                  ->      21    0.000    0.001  ikfast_IKFastSolver.py:250(convertRealToRational)
                                                                                         7    0.000    0.000  matrices.py:77(__init__)
                                                                                         7    0.000    0.000  {len}
__init__.py:3(<module>)                                                         ->       1    0.000    0.000  defmatrix.py:1(<module>)
                                                                                         1    0.000    0.001  factor_.py:3(<module>)
                                                                                         1    0.000    0.000  generate.py:3(<module>)
                                                                                         1    0.000    0.000  index_methods.py:10(<module>)
                                                                                         1    0.000    0.000  indexed.py:88(<module>)
                                                                                         1    0.000    0.000  multinomial.py:1(<module>)
                                                                                         2    0.000    0.000  nosetester.py:511(_numpy_tester)
                                                                                         1    0.000    0.000  partitions_.py:1(<module>)
                                                                                         1    0.000    0.000  residue_ntheory.py:1(<module>)
                                                                                         5    0.000    0.000  six.py:184(find_module)
str.py:191(_print_Matrix)                                                       ->       8    0.000    0.002  matrices.py:486(_format_str)
matrices.py:486(_format_str)                                                    ->      50    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        50    0.000    0.001  str.py:192(<lambda>)
                                                                                        50    0.000    0.000  {len}
                                                                                        50    0.000    0.000  {max}
                                                                                        64    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        22    0.000    0.000  {method 'join' of 'str' objects}
                                                                                        50    0.000    0.000  {method 'rjust' of 'str' objects}
                                                                                        22    0.000    0.000  {range}
threading.py:64(_note)                                                          ->
densebasic.py:1330(dup_inflate)                                                 ->     578    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       578    0.000    0.000  {method 'extend' of 'list' objects}
{method 'getvalue' of 'cStringIO.StringO' objects}                              ->
polynomialring.py:42(__eq__)                                                    ->     247    0.000    0.000  basic.py:374(__eq__)
                                                                                      1078    0.000    0.000  domain.py:312(__eq__)
ikfast_generator_cpp.py:1244(<lambda>)                                          ->
__init__.py:607(filter)                                                         ->
functions.py:18(__init__)                                                       ->       6    0.000    0.000  ctx_base.py:451(memoize)
                                                                                        34    0.000    0.000  ctx_fp.py:28(<lambda>)
                                                                                       410    0.000    0.000  ctx_fp.py:51(_wrap_specfun)
                                                                                       410    0.000    0.000  ctx_iv.py:341(_wrap_specfun)
                                                                                        34    0.000    0.000  ctx_iv.py:379(_mpq)
                                                                                       410    0.000    0.000  ctx_mp_python.py:1007(_wrap_specfun)
                                                                                        34    0.000    0.000  rational.py:31(__new__)
                                                                                         3    0.000    0.000  {method 'update' of 'dict' objects}
decomp_schur.py:1(<module>)                                                     ->       2    0.000    0.002  getlimits.py:94(__new__)
polytools.py:404(per)                                                           ->     507    0.001    0.001  polytools.py:100(new)
polyroots.py:37(roots_quadratic)                                                ->       2    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                         3    0.000    0.000  expr.py:70(__neg__)
                                                                                         2    0.000    0.000  miscellaneous.py:30(sqrt)
                                                                                         1    0.000    0.000  numbers.py:1419(__neg__)
                                                                                         2    0.000    0.001  polyroots.py:42(_simplify)
                                                                                         2    0.000    0.000  polytools.py:437(get_domain)
                                                                                         2    0.000    0.000  polytools.py:773(all_coeffs)
                                                                                         2    0.000    0.000  {sorted}
platform.py:1281(system)                                                        ->       2    0.000    0.001  platform.py:1144(uname)
platform.py:1144(uname)                                                         ->       1    0.000    0.001  platform.py:978(_syscmd_uname)
                                                                                         1    0.000    0.000  {filter}
                                                                                         1    0.000    0.000  {posix.uname}
inversekinematics.py:140(<module>)                                              ->       1    0.000    0.000  __init__.py:391(__init__)
                                                                                         1    0.000    0.000  __init__.py:764(setFormatter)
                                                                                         1    0.000    0.000  __init__.py:895(__init__)
                                                                                         1    0.000    0.000  __init__.py:1298(addHandler)
                                                                                         1    0.000    0.000  __init__.py:1507(basicConfig)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.001  ccompiler.py:4(<module>)
                                                                                         1    0.000    0.000  inversekinematics.py:207(InverseKinematicsError)
                                                                                         1    0.000    0.000  inversekinematics.py:227(InverseKinematicsModel)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
                                                                                         9    0.000    0.000  six.py:184(find_module)
platform.py:978(_syscmd_uname)                                                  ->       1    0.000    0.000  string.py:250(strip)
                                                                                         1    0.000    0.000  {method 'close' of 'file' objects}
                                                                                         1    0.001    0.001  {method 'read' of 'file' objects}
                                                                                         1    0.000    0.000  {posix.popen}
polyclasses.py:813(__add__)                                                     ->      46    0.000    0.001  polyclasses.py:417(add)
                                                                                        46    0.000    0.000  {isinstance}
power.py:114(_eval_is_comparable)                                               ->     605    0.000    0.001  assumptions.py:365(getit)
                                                                                       708    0.000    0.000  power.py:91(base)
                                                                                       412    0.000    0.000  power.py:95(exp)
numerictypes.py:82(<module>)                                                    ->       1    0.000    0.000  numbers.py:6(<module>)
                                                                                         1    0.000    0.000  numerictypes.py:285(_add_types)
                                                                                         1    0.000    0.000  numerictypes.py:301(_add_aliases)
                                                                                         1    0.000    0.000  numerictypes.py:338(_add_integer_aliases)
                                                                                         1    0.000    0.000  numerictypes.py:379(_set_up_aliases)
                                                                                         1    0.000    0.000  numerictypes.py:428(_construct_char_code_lookup)
                                                                                         1    0.000    0.000  numerictypes.py:451(_set_array_types)
                                                                                         1    0.000    0.000  numerictypes.py:765(_typedict)
                                                                                         1    0.000    0.000  numerictypes.py:781(_construct_lookups)
                                                                                         1    0.000    0.000  numerictypes.py:957(_register_types)
                                                                                       256    0.000    0.000  {chr}
                                                                                        67    0.000    0.000  {globals}
                                                                                        10    0.000    0.000  {isinstance}
                                                                                        24    0.000    0.000  {issubclass}
                                                                                         1    0.000    0.000  {len}
                                                                                        67    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                         2    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         3    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                        21    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                         1    0.000    0.000  {range}
polynomialring.py:46(__ne__)                                                    ->     796    0.001    0.001  polynomialring.py:42(__eq__)
basic.py:1016(<lambda>)                                                         ->    4162    0.001    0.001  {isinstance}
__init__.py:1346(getEffectiveLevel)                                             ->
importtools.py:23(import_module)                                                ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         2    0.000    0.001  {__import__}
numbers.py:1944(as_base_exp)                                                    ->
{method 'read' of 'file' objects}                                               ->
str.py:192(<lambda>)                                                            ->      50    0.000    0.001  printer.py:226(_print)
index_tricks.py:1(<module>)                                                     ->       1    0.000    0.000  __init__.py:3(<module>)
                                                                                         1    0.000    0.000  function_base.py:1(<module>)
                                                                                         1    0.000    0.000  index_tricks.py:87(nd_grid)
                                                                                         2    0.000    0.000  index_tricks.py:148(__init__)
                                                                                         1    0.000    0.000  index_tricks.py:223(AxisConcatenator)
                                                                                         1    0.000    0.000  index_tricks.py:352(RClass)
                                                                                         1    0.000    0.000  index_tricks.py:447(__init__)
                                                                                         1    0.000    0.000  index_tricks.py:452(CClass)
                                                                                         1    0.000    0.000  index_tricks.py:470(__init__)
                                                                                         1    0.000    0.000  index_tricks.py:475(ndenumerate)
                                                                                         1    0.000    0.000  index_tricks.py:525(ndindex)
                                                                                         1    0.000    0.000  index_tricks.py:603(IndexExpression)
                                                                                         2    0.000    0.000  index_tricks.py:647(__init__)
                                                                                         1    0.000    0.000  stride_tricks.py:7(<module>)
numbers.py:1098(__gt__)                                                         ->       1    0.000    0.000  numbers.py:189(__gt__)
                                                                                      2655    0.000    0.000  {isinstance}
densebasic.py:182(dmp_degree_in)                                                ->    1151    0.001    0.001  densebasic.py:148(dmp_degree)
gammazeta.py:14(<module>)                                                       ->       2    0.000    0.000  gammazeta.py:394(bernoulli_size)
                                                                                        14    0.000    0.000  libelefun.py:85(constant_memo)
                                                                                        14    0.000    0.000  libelefun.py:106(def_mpf_constant)
                                                                                       302    0.000    0.000  libintmath.py:341(ifac)
                                                                                       306    0.000    0.001  libmpf.py:330(from_int)
                                                                                         1    0.000    0.000  {range}
cythonutils.py:1(<module>)                                                      ->       1    0.000    0.000  __init__.py:14(<module>)
                                                                                         1    0.000    0.001  importtools.py:23(import_module)
                                                                                         1    0.000    0.000  six.py:184(find_module)
power.py:560(_eval_expand_trig)                                                 ->      60    0.000    0.000  basic.py:622(func)
                                                                                        60    0.000    0.000  basic.py:647(args)
                                                                                        60    0.000    0.000  cache.py:74(wrapper)
                                                                                        60    0.000    0.000  expr.py:1863(_eval_expand_trig)
                                                                                        28    0.000    0.000  trigonometric.py:284(_eval_expand_trig)
                                                                                        32    0.000    0.000  trigonometric.py:506(_eval_expand_trig)
                                                                                       120    0.000    0.000  {hasattr}
                                                                                       120    0.000    0.000  {method 'append' of 'list' objects}
case.py:1(<module>)                                                             ->       1    0.000    0.000  case.py:25(SkipTest)
                                                                                         1    0.000    0.000  case.py:34(_ExpectedFailure)
                                                                                         1    0.000    0.000  case.py:45(_UnexpectedSuccess)
                                                                                         1    0.000    0.000  case.py:98(_AssertRaisesContext)
                                                                                         1    0.000    0.000  case.py:131(TestCase)
                                                                                         1    0.000    0.000  case.py:1018(FunctionTestCase)
                                                                                         1    0.000    0.001  difflib.py:27(<module>)
                                                                                         1    0.000    0.000  pprint.py:35(<module>)
matrices.py:3202(a2idx)                                                         ->    3121    0.000    0.000  {hasattr}
domain.py:387(is_negative)                                                      ->
matrices.py:789(row_swap)                                                       ->     520    0.000    0.000  matrices.py:227(__getitem__)
                                                                                       520    0.000    0.001  matrices.py:276(__setitem__)
                                                                                        65    0.000    0.000  {range}
decomp_qr.py:1(<module>)                                                        ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.001  special_matrices.py:2(<module>)
__init__.py:743(add)                                                            ->     106    0.000    0.000  __init__.py:956(_added_new)
                                                                                       656    0.000    0.001  __init__.py:2565(key)
                                                                                       106    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       464    0.000    0.000  {method 'setdefault' of 'dict' objects}
symbol.py:175(_hashable_content)                                                ->
copy.py:66(copy)                                                                ->    1048    0.000    0.000  copy.py:113(_copy_with_constructor)
                                                                                      1048    0.000    0.000  {method 'get' of 'dict' objects}
abc.py:86(__new__)                                                              ->      90    0.000    0.000  _weakrefset.py:36(__init__)
                                                                                        93    0.000    0.000  abc.py:89(<genexpr>)
                                                                                        30    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                       458    0.000    0.000  {getattr}
                                                                                        67    0.000    0.000  {method 'add' of 'set' objects}
                                                                                        30    0.000    0.000  {method 'items' of 'dict' objects}
numbers.py:57(ilcm)                                                             ->    1025    0.001    0.001  numbers.py:36(igcd)
ctx_mp_python.py:114(mpf_convert_lhs)                                           ->     197    0.000    0.001  ctx_mp_python.py:98(mpf_convert_rhs)
                                                                                       197    0.000    0.000  ctx_mp_python.py:595(make_mpf)
{thread.get_ident}                                                              ->
source.py:31(get_mod_func)                                                      ->    1059    0.000    0.000  {method 'rfind' of 'str' objects}
__init__.py:2737(insert_on)                                                     ->    3286    0.000    0.000  __init__.py:2280(_normalize_cached)
                                                                                       106    0.000    0.000  posixpath.py:120(dirname)
                                                                                       106    0.000    0.000  {method 'index' of 'list' objects}
special_matrices.py:2(<module>)                                                 ->       1    0.000    0.001  __init__.py:37(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
polytools.py:1602(_gen_to_level)                                                ->    1151    0.000    0.000  {isinstance}
                                                                                      1151    0.000    0.000  {len}
libelefun.py:94(g)                                                              ->       3    0.000    0.000  libelefun.py:233(pi_fixed)
__init__.py:37(<module>)                                                        ->       1    0.000    0.000  common.py:4(<module>)
                                                                                         1    0.000    0.000  doccer.py:2(<module>)
                                                                                         1    0.000    0.000  nosetester.py:170(__init__)
                                                                                         1    0.000    0.001  pilutil.py:7(<module>)
                                                                                         3    0.000    0.000  six.py:184(find_module)
monomialtools.py:105(monomial_key)                                              ->     108    0.000    0.000  {isinstance}
polyroots.py:372(preprocess_roots)                                              ->       2    0.000    0.000  polyclasses.py:283(coeffs)
                                                                                         4    0.000    0.000  polytools.py:437(get_domain)
                                                                                         2    0.000    0.001  polytools.py:690(retract)
                                                                                         2    0.000    0.000  polytools.py:743(monoms)
                                                                                         2    0.000    0.000  polytools.py:967(inject)
                                                                                         2    0.000    0.000  polytools.py:1003(eject)
                                                                                         2    0.000    0.000  polytools.py:1861(clear_denoms)
                                                                                         2    0.000    0.000  polytools.py:2365(primitive)
                                                                                         2    0.000    0.000  polytools.py:3239(is_univariate)
                                                                                         2    0.000    0.000  {all}
                                                                                         7    0.000    0.000  {zip}
polyclasses.py:504(TC)                                                          ->     749    0.000    0.001  densebasic.py:80(dmp_ground_TC)
version.py:246(__str__)                                                         ->     346    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         2    0.000    0.000  {method 'format' of 'str' objects}
                                                                                       688    0.000    0.001  {method 'join' of 'str' objects}
{method 'union' of 'set' objects}                                               ->    2711    0.000    0.000  basic.py:179(__hash__)
csr.py:1(<module>)                                                              ->       1    0.000    0.001  __init__.py:2(<module>)
                                                                                         1    0.000    0.000  compressed.py:2(<module>)
                                                                                         1    0.000    0.000  csr.py:19(csr_matrix)
                                                                                         2    0.000    0.000  six.py:184(find_module)
{posix.listdir}                                                                 ->
monomialtools.py:87(monomial_lex_key)                                           ->
polyclasses.py:867(__eq__)                                                      ->     870    0.000    0.000  polyclasses.py:171(unify)
                                                                                         7    0.000    0.000  polyclasses.py:867(__eq__)
cython.py:7(<module>)                                                           ->       1    0.000    0.001  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
domain.py:362(frac_field)                                                       ->      44    0.000    0.001  fractionfield.py:20(__init__)
multinomial.py:54(<genexpr>)                                                    ->
version.py:353(_cmpkey)                                                         ->     686    0.000    0.000  _structures.py:43(__neg__)
                                                                                       436    0.000    0.000  version.py:362(<lambda>)
threading.py:1143(currentThread)                                                ->    1311    0.000    0.000  {thread.get_ident}
polyutils.py:1(<module>)                                                        ->       1    0.000    0.001  polyoptions.py:1(<module>)
                                                                                         1    0.000    0.000  re.py:192(compile)
                                                                                         1    0.000    0.000  six.py:184(find_module)
random.py:91(__init__)                                                          ->       3    0.000    0.001  random.py:100(seed)
random.py:100(seed)                                                             ->       3    0.000    0.000  {binascii.hexlify}
                                                                                         3    0.001    0.001  {function seed at 0x7fef2b577c80}
                                                                                         3    0.000    0.000  {posix.urandom}
{setattr}                                                                       ->      17    0.000    0.000  core.py:80(__setattr__)
                                                                                       173    0.000    0.000  core.py:101(__setattr__)
facts.py:467(process_rule)                                                      ->   99/33    0.000    0.001  facts.py:541(_process_rule)
                                                                                        96    0.000    0.000  logic.py:94(__hash__)
                                                                                        15    0.000    0.000  logic.py:98(__eq__)
                                                                                       226    0.000    0.000  {isinstance}
                                                                                        99    0.000    0.000  {method 'add' of 'set' objects}
__init__.py:2303(yield_lines)                                                   ->     121    0.000    0.000  {isinstance}
                                                                                        61    0.000    0.000  {method 'splitlines' of 'str' objects}
                                                                                        60    0.000    0.000  {method 'splitlines' of 'unicode' objects}
                                                                                       176    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                       180    0.000    0.000  {method 'startswith' of 'unicode' objects}
                                                                                       177    0.000    0.000  {method 'strip' of 'str' objects}
                                                                                       180    0.000    0.000  {method 'strip' of 'unicode' objects}
libintmath.py:7(<module>)                                                       ->     512    0.000    0.000  libintmath.py:58(python_trailing)
                                                                                      2048    0.000    0.001  libintmath.py:83(python_bitcount)
                                                                                         3    0.000    0.000  {range}
evalf.py:1060(_eval_evalf)                                                      ->
function_base.py:3944(add_newdoc)                                               ->     273    0.000    0.000  {__import__}
                                                                                       473    0.000    0.000  {getattr}
                                                                                       273    0.000    0.000  {globals}
                                                                                       472    0.000    0.000  {isinstance}
                                                                                       271    0.000    0.000  {method 'strip' of 'str' objects}
                                                                                       271    0.000    0.000  {numpy.core.multiarray.add_docstring}
__init__.py:2280(_normalize_cached)                                             ->      30    0.000    0.001  __init__.py:2276(normalize_path)
ccompiler.py:4(<module>)                                                        ->       1    0.000    0.000  ccompiler.py:23(CCompiler)
                                                                                         1    0.000    0.000  dep_util.py:5(<module>)
                                                                                         1    0.000    0.000  dir_util.py:3(<module>)
                                                                                         1    0.000    0.000  errors.py:9(<module>)
                                                                                         1    0.000    0.000  file_util.py:4(<module>)
                                                                                         9    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  spawn.py:7(<module>)
                                                                                         1    0.000    0.001  sysconfig.py:10(<module>)
                                                                                         1    0.000    0.000  util.py:5(<module>)
polytools.py:4444(lcm)                                                          ->       1    0.000    0.000  polyoptions.py:60(getter)
                                                                                         1    0.000    0.000  polyoptions.py:699(allowed_flags)
                                                                                         1    0.000    0.000  polytools.py:2275(lcm)
                                                                                         1    0.000    0.001  polytools.py:3596(parallel_poly_from_expr)
                                                                                         1    0.000    0.000  {hasattr}
{method 'acquire' of 'thread.lock' objects}                                     ->
pilutil.py:7(<module>)                                                          ->       1    0.000    0.001  Image.py:27(<module>)
                                                                                         1    0.000    0.000  ImageFilter.py:18(<module>)
                                                                                         1    0.000    0.000  __init__.py:1(<module>)
                                                                                         5    0.000    0.000  six.py:184(find_module)
facts.py:541(_process_rule)                                                     ->   80/32    0.000    0.001  facts.py:467(process_rule)
                                                                                        78    0.000    0.000  logic.py:57(name_not)
                                                                                        52    0.000    0.001  logic.py:195(__new__)
                                                                                        52    0.000    0.000  logic.py:347(__new__)
                                                                                       198    0.000    0.000  {isinstance}
                                                                                         7    0.000    0.000  {len}
                                                                                        89    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         7    0.000    0.000  {range}
socket.py:45(<module>)                                                          ->       1    0.000    0.000  os.py:35(_get_exports_list)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  socket.py:171(_closedsocket)
                                                                                         1    0.000    0.000  socket.py:183(_socketobject)
                                                                                         1    0.000    0.000  socket.py:239(_fileobject)
                                                                                        16    0.000    0.000  {getattr}
                                                                                         1    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                        14    0.000    0.000  {setattr}
{function seed at 0x7fef2b577c80}                                               ->
numbers.py:209(as_coeff_add)                                                    ->
{posix.stat}                                                                    ->
trigonometric.py:731(_eval_subs)                                                ->       6    0.000    0.000  assumptions.py:365(getit)
                                                                                        25    0.000    0.000  basic.py:374(__eq__)
                                                                                        25    0.000    0.000  basic.py:399(__ne__)
                                                                                        25    0.000    0.000  basic.py:647(args)
                                                                                        25    0.000    0.000  basic.py:719(subs)
                                                                                        25    0.000    0.000  cache.py:74(wrapper)
                                                                                        12    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
power.py:1(<module>)                                                            ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  power.py:68(Pow)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.001  symbol.py:1(<module>)
matrices.py:27(_dims_to_nm)                                                     ->     565    0.000    0.000  {len}
                                                                                       482    0.000    0.000  {map}
{posix.getpid}                                                                  ->
numbers.py:1419(__neg__)                                                        ->
fractions.py:4(<module>)                                                        ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  fractions.py:44(Fraction)
                                                                                         1    0.000    0.001  re.py:192(compile)
inversekinematics.py:439(GetDefaultIndices)                                     ->       2    0.000    0.000  __init__.py:1157(info)
                                                                                        32    0.000    0.000  fromnumeric.py:1743(sum)
                                                                                        32    0.000    0.000  numeric.py:1553(cross)
                                                                                         1    0.000    0.000  twodim_base.py:192(eye)
                                                                                        12    0.000    0.000  {abs}
                                                                                         4    0.000    0.000  {len}
                                                                                        22    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         5    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                        14    0.000    0.000  {numpy.core.multiarray.dot}
                                                                                        12    0.000    0.000  {range}
sre_parse.py:206(match)                                                         ->     983    0.000    0.001  sre_parse.py:193(__next)
matrices.py:342(tolist)                                                         ->
posixpath.py:132(islink)                                                        ->     622    0.000    0.000  stat.py:55(S_ISLNK)
                                                                                       626    0.001    0.001  {posix.lstat}
fractionfield.py:20(__init__)                                                   ->      46    0.000    0.001  polyclasses.py:1083(zero)
                                                                                        46    0.000    0.000  polyclasses.py:1087(one)
                                                                                        46    0.000    0.000  {len}
{method 'read' of '_io.TextIOWrapper' objects}                                  ->      60    0.000    0.000  codecs.py:311(decode)
pdb.py:3(<module>)                                                              ->       1    0.000    0.000  bdb.py:1(<module>)
                                                                                         1    0.000    0.000  cmd.py:46(<module>)
                                                                                         1    0.000    0.000  pdb.py:18(Restart)
                                                                                         1    0.000    0.000  pdb.py:59(Pdb)
                                                                                         1    0.000    0.000  repr.py:1(<module>)
                                                                                         1    0.000    0.000  repr.py:10(__init__)
                                                                                         3    0.000    0.000  six.py:184(find_module)
{cStringIO.StringIO}                                                            ->
ctx_iv.py:278(__init__)                                                         ->       2    0.000    0.001  ctx_base.py:38(__init__)
                                                                                         2    0.000    0.000  ctx_iv.py:296(_init_builtins)
                                                                                         2    0.000    0.000  ctx_iv.py:358(_set_prec)
singleton.py:51(__init__)                                                       ->       2    0.000    0.000  basic.py:82(__new__)
                                                                                        17    0.000    0.001  core.py:118(__init__)
                                                                                         1    0.000    0.000  miscellaneous.py:20(__new__)
                                                                                         4    0.000    0.000  numbers.py:1321(__new__)
                                                                                         3    0.000    0.000  numbers.py:1327(__new__)
                                                                                         1    0.000    0.000  numbers.py:1643(__new__)
                                                                                         6    0.000    0.000  numbers.py:1681(__new__)
                                                                                        17    0.000    0.000  {isinstance}
                                                                                        17    0.000    0.000  {method 'mro' of 'type' objects}
                                                                                        17    0.000    0.000  {setattr}
urlparse.py:29(<module>)                                                        ->       2    0.000    0.001  collections.py:305(namedtuple)
                                                                                         1    0.000    0.000  re.py:192(compile)
                                                                                         1    0.000    0.000  urlparse.py:73(ResultMixin)
                                                                                         1    0.000    0.000  urlparse.py:121(SplitResult)
                                                                                         1    0.000    0.000  urlparse.py:129(ParseResult)
                                                                                       485    0.000    0.000  urlparse.py:332(<genexpr>)
logic.py:57(name_not)                                                           ->
evalf.py:920(<lambda>)                                                          ->
polyoptions.py:1(<module>)                                                      ->       1    0.000    0.000  polyoptions.py:16(Option)
                                                                                         1    0.000    0.000  polyoptions.py:41(Flag)
                                                                                         1    0.000    0.000  polyoptions.py:46(BooleanOption)
                                                                                         1    0.000    0.000  polyoptions.py:56(OptionType)
                                                                                        24    0.000    0.000  polyoptions.py:59(__init__)
                                                                                         1    0.000    0.000  polyoptions.py:70(Options)
                                                                                         1    0.000    0.000  polyoptions.py:157(_init_dependencies_order)
                                                                                         1    0.000    0.000  polyoptions.py:228(Expand)
                                                                                         1    0.000    0.000  polyoptions.py:242(Gens)
                                                                                         1    0.000    0.000  polyoptions.py:272(Wrt)
                                                                                         1    0.000    0.000  polyoptions.py:300(Sort)
                                                                                         1    0.000    0.000  polyoptions.py:323(Order)
                                                                                         1    0.000    0.000  polyoptions.py:341(Field)
                                                                                         1    0.000    0.000  polyoptions.py:351(Greedy)
                                                                                         1    0.000    0.000  polyoptions.py:360(Composite)
                                                                                         1    0.000    0.001  polyoptions.py:374(Domain)
                                                                                         1    0.000    0.000  polyoptions.py:449(Split)
                                                                                         1    0.000    0.000  polyoptions.py:464(Gaussian)
                                                                                         1    0.000    0.000  polyoptions.py:480(Extension)
                                                                                         1    0.000    0.000  polyoptions.py:512(Modulus)
                                                                                         1    0.000    0.000  polyoptions.py:538(Symmetric)
                                                                                         1    0.000    0.000  polyoptions.py:548(Strict)
                                                                                         1    0.000    0.000  polyoptions.py:559(Repr)
                                                                                         1    0.000    0.000  polyoptions.py:584(Auto)
                                                                                         1    0.000    0.000  polyoptions.py:602(Frac)
                                                                                         1    0.000    0.000  polyoptions.py:613(Formal)
                                                                                         1    0.000    0.000  polyoptions.py:624(Polys)
                                                                                         1    0.000    0.000  polyoptions.py:631(Include)
                                                                                         1    0.000    0.000  polyoptions.py:642(All)
                                                                                         1    0.000    0.000  polyoptions.py:653(Gen)
                                                                                         1    0.000    0.000  polyoptions.py:671(Symbols)
                                                                                         1    0.000    0.000  six.py:184(find_module)
densebasic.py:713(dmp_one)                                                      ->     823    0.001    0.001  densebasic.py:758(dmp_ground)
genericpath.py:46(isdir)                                                        ->     288    0.000    0.000  stat.py:40(S_ISDIR)
                                                                                       289    0.001    0.001  {posix.stat}
Shadow.py:2(<module>)                                                           ->       1    0.000    0.000  Shadow.py:14(_ArrayType)
                                                                                         1    0.000    0.000  Shadow.py:97(_EmptyDecoratorAndManager)
                                                                                         1    0.000    0.000  Shadow.py:105(_Optimization)
                                                                                         1    0.000    0.000  Shadow.py:184(_nogil)
                                                                                         1    0.000    0.000  Shadow.py:198(CythonMetaType)
                                                                                         1    0.000    0.000  Shadow.py:205(CythonType)
                                                                                        54    0.000    0.001  Shadow.py:207(_pointer)
                                                                                         1    0.000    0.000  Shadow.py:212(PointerType)
                                                                                         1    0.000    0.000  Shadow.py:214(__init__)
                                                                                         1    0.000    0.000  Shadow.py:245(ArrayType)
                                                                                         1    0.000    0.000  Shadow.py:251(StructType)
                                                                                         1    0.000    0.000  Shadow.py:273(UnionType)
                                                                                         1    0.000    0.000  Shadow.py:326(typedef)
                                                                                        34    0.000    0.000  Shadow.py:328(__init__)
                                                                                         1    0.000    0.000  Shadow.py:341(_FusedType)
                                                                                         1    0.000    0.000  Shadow.py:433(CythonDotParallel)
                                                                                         1    0.000    0.000  {getattr}
                                                                                        55    0.000    0.000  {globals}
                                                                                         7    0.000    0.000  {method 'endswith' of 'str' objects}
                                                                                        16    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                        18    0.000    0.000  {range}
base.py:12(<module>)                                                            ->       4    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  base.py:64(default_lapl)
                                                                                         1    0.000    0.000  base.py:73(default_lcpl)
                                                                                         1    0.000    0.000  base.py:83(CommonStateObject)
                                                                                         1    0.000    0.000  base.py:156(_RegionProxy)
                                                                                         1    0.000    0.000  base.py:201(HLObject)
                                                                                         1    0.000    0.000  base.py:300(ValuesViewHDF5)
                                                                                         1    0.000    0.000  base.py:322(ItemsViewHDF5)
                                                                                         1    0.000    0.000  base.py:341(MappingHDF5)
                                                                                         1    0.000    0.000  base.py:391(MutableMappingHDF5)
                                                                                         1    0.000    0.000  six.py:1(<module>)
common.py:10(<module>)                                                          ->       1    0.000    0.000  common.py:33(TestCase)
                                                                                         1    0.000    0.000  common.py:50(TestCase)
                                                                                         1    0.000    0.000  tempfile.py:280(mkstemp)
                                                                                         1    0.000    0.000  {posix.close}
                                                                                         1    0.000    0.000  {posix.unlink}
                                                                                         1    0.000    0.000  {unichr}
matrices.py:793(col_swap)                                                       ->     280    0.000    0.000  matrices.py:227(__getitem__)
                                                                                       280    0.000    0.000  matrices.py:276(__setitem__)
                                                                                        70    0.000    0.000  {range}
six.py:1(<module>)                                                              ->       2    0.000    0.000  six.py:60(X)
                                                                                        16    0.000    0.000  six.py:75(_add_doc)
                                                                                         2    0.000    0.000  six.py:86(_LazyDescr)
                                                                                         2    0.000    0.000  six.py:91(__get__)
                                                                                         2    0.000    0.000  six.py:103(MovedModule)
                                                                                        86    0.000    0.000  six.py:105(__init__)
                                                                                         2    0.000    0.000  six.py:124(_LazyModule)
                                                                                        12    0.000    0.000  six.py:126(__init__)
                                                                                         2    0.000    0.000  six.py:139(MovedAttribute)
                                                                                       166    0.000    0.000  six.py:141(__init__)
                                                                                         2    0.000    0.000  six.py:164(_SixMetaPathImporter)
                                                                                         2    0.000    0.000  six.py:173(__init__)
                                                                                       100    0.000    0.000  six.py:177(_add_module)
                                                                                         2    0.000    0.000  six.py:229(_MovedItems)
                                                                                         2    0.000    0.000  six.py:320(Module_six_moves_urllib_parse)
                                                                                         2    0.000    0.000  six.py:360(Module_six_moves_urllib_error)
                                                                                         2    0.000    0.000  six.py:380(Module_six_moves_urllib_request)
                                                                                         2    0.000    0.000  six.py:430(Module_six_moves_urllib_response)
                                                                                         2    0.000    0.000  six.py:451(Module_six_moves_urllib_robotparser)
                                                                                         2    0.000    0.000  six.py:469(Module_six_moves_urllib)
                                                                                         2    0.000    0.000  six.py:555(Iterator)
                                                                                         2    0.000    0.000  six.py:689(exec_)
                                                                                         1    0.000    0.000  {getattr}
                                                                                         1    0.000    0.000  {globals}
                                                                                        62    0.000    0.000  {isinstance}
                                                                                         1    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                         1    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                       126    0.000    0.000  {setattr}
numbers.py:638(_hashable_content)                                               ->
posixpath.py:61(join)                                                           ->    1132    0.000    0.000  {method 'endswith' of 'str' objects}
                                                                                      1134    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                         2    0.000    0.000  {method 'startswith' of 'unicode' objects}
symbol.py:1(<module>)                                                           ->       1    0.000    0.000  __init__.py:1(<module>)
                                                                                         3    0.000    0.000  core.py:118(__init__)
                                                                                         3    0.000    0.000  re.py:192(compile)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  symbol.py:13(Symbol)
                                                                                         1    0.000    0.000  symbol.py:104(Dummy)
                                                                                         1    0.000    0.000  symbol.py:140(Wild)
libmpf.py:666(mpf_sign)                                                         ->
backend.py:1(<module>)                                                          ->       3    0.000    0.000  UserDict.py:103(__contains__)
                                                                                         2    0.000    0.000  exec_py2.py:1(<module>)
                                                                                         8    0.000    0.000  six.py:184(find_module)
logic.py:195(__new__)                                                           ->      81    0.000    0.000  logic.py:83(__new__)
                                                                                        95    0.000    0.000  logic.py:98(__eq__)
                                                                                         4    0.000    0.000  logic.py:104(__ne__)
                                                                                        93    0.000    0.000  logic.py:259(flatten)
                                                                                   175/137    0.000    0.000  logic.py:347(__new__)
                                                                                       267    0.000    0.000  {len}
                                                                                       366    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        93    0.000    0.000  {sorted}
openravepy_ext.py:14(<module>)                                                  ->       1    0.000    0.000  __init__.py:24(<module>)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  atexit.py:37(register)
                                                                                         1    0.000    0.000  openravepy_ext.py:32(CollisionOptionsStateSaver)
                                                                                         1    0.000    0.000  openravepy_ext.py:52(TransformQuaternionsSaver)
                                                                                         1    0.000    0.000  openravepy_ext.py:83(_registerEnumPicklers)
                                                                                         1    0.000    0.000  openravepy_ext.py:98(openrave_exception)
                                                                                         1    0.000    0.000  openravepy_ext.py:114(std_exception)
                                                                                         1    0.000    0.000  openravepy_ext.py:128(runtime_error)
                                                                                         1    0.000    0.000  openravepy_ext.py:142(PlanningError)
facts.py:442(split_alpha_beta)                                                  ->     267    0.000    0.000  {isinstance}
                                                                                       267    0.000    0.000  {method 'append' of 'list' objects}
tempfile.py:280(mkstemp)                                                        ->       2    0.000    0.000  tempfile.py:235(_mkstemp_inner)
                                                                                         2    0.000    0.000  tempfile.py:268(gettempdir)
ctx_mp_python.py:432(mpc_convert_lhs)                                           ->    1000    0.000    0.000  ctx_mp_python.py:621(convert)
abc.py:148(__subclasscheck__)                                                   ->      49    0.000    0.000  _abcoll.py:98(__subclasshook__)
                                                                                        28    0.000    0.000  _weakrefset.py:36(__init__)
                                                                                       118    0.000    0.000  _weakrefset.py:58(__iter__)
                                                                                       134    0.000    0.000  _weakrefset.py:70(__contains__)
                                                                                        74    0.000    0.000  _weakrefset.py:83(add)
                                                                                        49    0.000    0.000  core.py:220(__cmp__)
                                                                                        74    0.000    0.000  {getattr}
                                                                                    102/33    0.000    0.000  {issubclass}
                                                                                        74    0.000    0.000  {method '__subclasses__' of 'type' objects}
                                                                                        25    0.000    0.000  {method '__subclasshook__' of 'object' objects}
shutil.py:5(<module>)                                                           ->       1    0.000    0.000  shutil.py:31(Error)
                                                                                         1    0.000    0.000  shutil.py:34(SpecialFileError)
                                                                                         1    0.000    0.000  shutil.py:38(ExecError)
expr.py:1048(as_numer_denom)                                                    ->
group.py:12(<module>)                                                           ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  dataset.py:12(<module>)
                                                                                        17    0.000    0.000  functools.py:17(update_wrapper)
                                                                                         1    0.000    0.000  group.py:28(Group)
                                                                                         1    0.000    0.000  group.py:481(HardLink)
                                                                                         1    0.000    0.000  group.py:491(SoftLink)
                                                                                         1    0.000    0.000  group.py:511(ExternalLink)
                                                                                         3    0.000    0.000  six.py:184(find_module)
__init__.py:2208(declare_namespace)                                             ->      31    0.000    0.001  __init__.py:2164(_handle_ns)
                                                                                         1    0.000    0.000  {imp.acquire_lock}
                                                                                         1    0.000    0.000  {imp.release_lock}
                                                                                         1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         2    0.000    0.000  {method 'setdefault' of 'dict' objects}
__init__.py:52(<module>)                                                        ->       1    0.000    0.000  info.py:50(<module>)
                                                                                         1    0.000    0.001  linsolve.py:1(<module>)
                                                                                         1    0.000    0.000  nosetester.py:170(__init__)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {dir}
                                                                                         1    0.000    0.000  {filter}
threading.py:958(name)                                                          ->
polynomials.py:182(<lambda>)                                                    ->     148    0.000    0.000  ctx_base.py:65(_re)
                                                                                       148    0.000    0.000  ctx_base.py:70(_im)
                                                                                       148    0.000    0.000  {abs}
__init__.py:1350(safe_name)                                                     ->     232    0.000    0.001  re.py:148(sub)
inversekinematics.py:368(setrobot)                                              ->       2    0.000    0.000  inversekinematics.py:365(getikname)
                                                                                         2    0.000    0.000  inversekinematics.py:580(getfilename)
                                                                                         8    0.000    0.000  {len}
                                                                                         4    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         2    0.000    0.000  {method 'split' of 'unicode' objects}
__init__.py:2276(normalize_path)                                                ->      30    0.000    0.000  posixpath.py:44(normcase)
                                                                                        30    0.000    0.001  posixpath.py:372(realpath)
ssl.py:89(<module>)                                                             ->       2    0.000    0.001  collections.py:305(namedtuple)
                                                                                         5    0.000    0.000  ssl.py:115(_import_symbols)
                                                                                         1    0.000    0.000  ssl.py:130(<dictcomp>)
                                                                                         1    0.000    0.000  ssl.py:194(CertificateError)
                                                                                         1    0.000    0.000  ssl.py:310(_ASN1Object)
                                                                                         2    0.000    0.000  ssl.py:315(__new__)
                                                                                         1    0.000    0.000  ssl.py:331(Purpose)
                                                                                         1    0.000    0.000  ssl.py:339(SSLContext)
                                                                                         1    0.000    0.000  ssl.py:505(_get_https_context_factory)
                                                                                         1    0.000    0.000  ssl.py:524(SSLSocket)
                                                                                         1    0.000    0.000  {globals}
                                                                                         1    0.000    0.000  {method 'items' of 'dict' objects}
__init__.py:1607(has_metadata)                                                  ->     134    0.000    0.000  __init__.py:1673(_fn)
                                                                                       134    0.000    0.000  __init__.py:1712(_has)
facts.py:456(rules_alpha)                                                       ->       1    0.001    0.001  facts.py:442(split_alpha_beta)
trigonometric.py:901(_eval_subs)                                                ->       6    0.000    0.000  assumptions.py:365(getit)
                                                                                        25    0.000    0.000  basic.py:374(__eq__)
                                                                                        25    0.000    0.000  basic.py:399(__ne__)
                                                                                        25    0.000    0.000  basic.py:647(args)
                                                                                        25    0.000    0.000  basic.py:719(subs)
                                                                                        25    0.000    0.000  cache.py:74(wrapper)
                                                                                         6    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
{method 'find' of 'str' objects}                                                ->
summations.py:1(<module>)                                                       ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.001  gosper.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  summations.py:7(Sum)
<string>:2(__div__)                                                             ->     197    0.000    0.001  libmpf.py:924(mpf_div)
                                                                                       197    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                       197    0.000    0.000  {hasattr}
matrices.py:1034(evalf)                                                         ->       8    0.000    0.001  matrices.py:1016(applyfunc)
matrices.py:1016(applyfunc)                                                     ->       8    0.000    0.000  matrices.py:77(__init__)
                                                                                         8    0.000    0.000  {callable}
                                                                                         8    0.000    0.001  {map}
iterables.py:207(__iter__)                                                      ->
pretty.py:1(<module>)                                                           ->       1    0.000    0.000  pretty.py:17(PrettyPrinter)
                                                                                         1    0.000    0.000  printer.py:66(<module>)
                                                                                         4    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  str.py:3(<module>)
                                                                                         1    0.000    0.000  stringpict.py:13(<module>)
{method 'search' of '_sre.SRE_Pattern' objects}                                 ->
complexes.py:267(_eval_is_positive)                                             ->      15    0.000    0.001  assumptions.py:365(getit)
function.py:267(_eval_is_comparable)                                            ->     115    0.000    0.001  assumptions.py:365(getit)
                                                                                       150    0.000    0.000  basic.py:647(args)
polyclasses.py:926(new)                                                         ->      92    0.000    0.001  polyclasses.py:939(_parse)
                                                                                        92    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
npyio.py:1(<module>)                                                            ->       1    0.000    0.000  _datasource.py:35(<module>)
                                                                                         1    0.000    0.000  _iotools.py:3(<module>)
                                                                                         1    0.000    0.000  format.py:149(<module>)
                                                                                         1    0.000    0.000  npyio.py:40(BagObj)
                                                                                         1    0.000    0.000  npyio.py:95(NpzFile)
polynomial.py:4(<module>)                                                       ->       1    0.000    0.000  __init__.py:45(<module>)
                                                                                         1    0.000    0.000  polynomial.py:22(RankWarning)
                                                                                         1    0.000    0.000  polynomial.py:940(poly1d)
                                                                                         1    0.000    0.000  re.py:192(compile)
                                                                                         1    0.000    0.000  warnings.py:96(simplefilter)
trigonometric.py:45(_pi_coeff)                                                  ->       2    0.000    0.000  cache.py:74(wrapper)
                                                                                        20    0.000    0.000  expr.py:494(coeff)
                                                                                         2    0.000    0.000  numbers.py:230(as_coeff_Mul)
                                                                                       144    0.000    0.000  sympify.py:23(sympify)
re.py:148(sub)                                                                  ->     232    0.000    0.000  re.py:230(_compile)
                                                                                       232    0.000    0.000  {method 'sub' of '_sre.SRE_Pattern' objects}
__init__.py:1621(get_metadata_lines)                                            ->      61    0.000    0.001  __init__.py:1611(get_metadata)
polyroots.py:42(_simplify)                                                      ->       2    0.000    0.001  polytools.py:4945(factor)
polytools.py:4945(factor)                                                       ->       2    0.000    0.001  polytools.py:4894(_generic_factor)
polytools.py:4894(_generic_factor)                                              ->       2    0.000    0.000  polyoptions.py:689(build_options)
                                                                                         2    0.000    0.000  polyoptions.py:699(allowed_flags)
                                                                                         2    0.000    0.001  polytools.py:4850(_symbolic_factor)
                                                                                         2    0.000    0.000  sympify.py:23(sympify)
gosper.py:1(<module>)                                                           ->       1    0.000    0.001  __init__.py:9(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
result.py:1(<module>)                                                           ->       1    0.000    0.000  StringIO.py:30(<module>)
                                                                                         1    0.000    0.000  result.py:26(TestResult)
                                                                                         1    0.000    0.000  util.py:1(<module>)
densebasic.py:80(dmp_ground_TC)                                                 ->    1031    0.000    0.000  densebasic.py:35(poly_TC)
trigonometric.py:1(<module>)                                                    ->      10    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  trigonometric.py:12(TrigonometricFunction)
                                                                                         1    0.000    0.000  trigonometric.py:104(sin)
                                                                                         1    0.000    0.000  trigonometric.py:321(cos)
                                                                                         1    0.000    0.000  trigonometric.py:543(tan)
                                                                                         1    0.000    0.000  trigonometric.py:744(cot)
                                                                                         1    0.000    0.000  trigonometric.py:918(asin)
                                                                                         1    0.000    0.000  trigonometric.py:1035(acos)
                                                                                         1    0.000    0.000  trigonometric.py:1142(atan)
                                                                                         1    0.000    0.000  trigonometric.py:1254(acot)
                                                                                         1    0.000    0.000  trigonometric.py:1353(atan2)
__init__.py:18(<module>)                                                        ->       1    0.000    0.000  curve.py:7(<module>)
                                                                                         1    0.000    0.000  ellipse.py:8(<module>)
                                                                                         1    0.000    0.000  line.py:10(<module>)
                                                                                         1    0.000    0.000  point.py:7(<module>)
                                                                                         5    0.000    0.000  six.py:184(find_module)
ctx_base.py:70(_im)                                                             ->      72    0.000    0.000  ctx_mp_python.py:127(<lambda>)
                                                                                       224    0.000    0.000  ctx_mp_python.py:379(<lambda>)
                                                                                       296    0.000    0.000  {hasattr}
__init__.py:9(<module>)                                                         ->       1    0.000    0.000  ode.py:203(<module>)
                                                                                         1    0.000    0.000  pde.py:6(<module>)
                                                                                         1    0.000    0.000  recurr.py:44(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  solvers.py:14(<module>)
                                                                                         1    0.000    0.000  {method 'index' of 'str' objects}
Shadow.py:207(_pointer)                                                         ->     108    0.001    0.001  Shadow.py:301(pointer)
                                                                                        54    0.000    0.000  {range}
__init__.py:1611(get_metadata)                                                  ->      61    0.000    0.000  __init__.py:1673(_fn)
                                                                                        61    0.000    0.001  __init__.py:1724(_get)
numeric.py:484(asanyarray)                                                      ->    2025    0.000    0.000  {numpy.core.multiarray.array}
power.py:174(_eval_is_real)                                                     ->     598    0.000    0.000  assumptions.py:365(getit)
                                                                                       646    0.000    0.000  power.py:91(base)
                                                                                        77    0.000    0.000  power.py:95(exp)
_weakrefset.py:70(__contains__)                                                 ->      68    0.000    0.000  core.py:220(__cmp__)
difflib.py:27(<module>)                                                         ->       1    0.000    0.000  collections.py:305(namedtuple)
                                                                                         1    0.000    0.000  difflib.py:44(SequenceMatcher)
                                                                                         1    0.000    0.000  difflib.py:764(Differ)
                                                                                         1    0.000    0.000  difflib.py:1670(HtmlDiff)
                                                                                         1    0.000    0.000  re.py:192(compile)
__init__.py:11(<module>)                                                        ->       1    0.001    0.001  integrals.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
polytools.py:4850(_symbolic_factor)                                             ->       2    0.000    0.000  polytools.py:3700(_keep_coeff)
                                                                                         2    0.000    0.000  polytools.py:4815(_factors_product)
                                                                                         2    0.000    0.000  polytools.py:4819(_symbolic_factor_list)
                                                                                         2    0.000    0.000  rationaltools.py:6(together)
                                                                                         2    0.000    0.000  {isinstance}
matrices.py:334(__len__)                                                        ->
Image.py:27(<module>)                                                           ->       1    0.000    0.000  Image.py:34(_imaging_not_installed)
                                                                                         1    0.000    0.000  Image.py:407(_E)
                                                                                         1    0.000    0.000  Image.py:444(Image)
                                                                                         1    0.000    0.000  Image.py:1683(_ImageCrop)
                                                                                         1    0.000    0.000  Image.py:1718(ImagePointHandler)
                                                                                         1    0.000    0.000  Image.py:1722(ImageTransformHandler)
                                                                                         1    0.000    0.000  ImageMode.py:17(<module>)
                                                                                         1    0.000    0.000  ImagePalette.py:19(<module>)
                                                                                         9    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {__import__}
                                                                                         1    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                         1    0.000    0.000  {method 'sort' of 'list' objects}
warnings.py:67(filterwarnings)                                                  ->      12    0.000    0.001  re.py:192(compile)
                                                                                        24    0.000    0.000  {isinstance}
                                                                                         6    0.000    0.000  {issubclass}
                                                                                         1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         5    0.000    0.000  {method 'insert' of 'list' objects}
{method 'release' of 'thread.lock' objects}                                     ->
numbers.py:291(_as_mpf_op)                                                      ->    1104    0.000    0.000  {max}
__init__.py:2066(find_distributions)                                            ->      10    0.000    0.000  __init__.py:2094(find_nothing)
                                                                                        62    0.000    0.001  __init__.py:3057(_find_adapter)
                                                                                        62    0.000    0.000  pkgutil.py:366(get_importer)
pythonintegerring.py:44(from_QQ_python)                                         ->     886    0.000    0.000  pythonrationaltype.py:211(numer)
                                                                                       886    0.000    0.000  pythonrationaltype.py:215(denom)
factor_.py:3(<module>)                                                          ->       2    0.000    0.000  six.py:184(find_module)
                                                                                       255    0.000    0.001  {max}
                                                                                       256    0.000    0.000  {range}
inversekinematics.py:580(getfilename)                                           ->       4    0.000    0.000  ccompiler.py:830(shared_object_filename)
                                                                                         4    0.000    0.000  ccompiler.py:963(new_compiler)
                                                                                         4    0.000    0.000  platform.py:1318(machine)
                                                                                         4    0.000    0.000  posixpath.py:61(join)
                                                                                         6    0.000    0.000  {len}
                                                                                         8    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         8    0.000    0.000  {sorted}
linsolve.py:1(<module>)                                                         ->       1    0.000    0.000  __init__.py:1(<module>)
                                                                                         7    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {hasattr}
ctx_mp_python.py:595(make_mpf)                                                  ->      13    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
polytools.py:690(retract)                                                       ->       2    0.000    0.000  constructor.py:195(construct_domain)
                                                                                         2    0.000    0.000  polytools.py:115(from_dict)
                                                                                         2    0.000    0.000  polytools.py:867(as_dict)
Shadow.py:301(pointer)                                                          ->     108    0.000    0.000  Shadow.py:302(PointerInstance)
tempfile.py:135(next)                                                           ->       3    0.000    0.000  posixpath.py:44(normcase)
                                                                                        18    0.000    0.000  random.py:273(choice)
                                                                                         3    0.000    0.001  tempfile.py:124(rng)
                                                                                         3    0.000    0.000  {method 'acquire' of 'thread.lock' objects}
                                                                                         3    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         3    0.000    0.000  {method 'release' of 'thread.lock' objects}
{_io.open}                                                                      ->      60    0.000    0.000  codecs.py:302(__init__)
plistlib.py:51(<module>)                                                        ->       1    0.000    0.000  plistlib.py:151(DumbXMLWriter)
                                                                                         1    0.000    0.000  plistlib.py:230(PlistWriter)
                                                                                         1    0.000    0.000  plistlib.py:291(_InternalDict)
                                                                                         1    0.000    0.000  plistlib.py:322(Dict)
                                                                                         1    0.000    0.000  plistlib.py:331(Plist)
                                                                                         1    0.000    0.000  plistlib.py:365(Data)
                                                                                         1    0.000    0.000  plistlib.py:393(PlistParser)
                                                                                         2    0.000    0.001  re.py:192(compile)
ikfast_IKFastSolver.py:9319(frontnumbers)                                       ->      13    0.000    0.000  basic.py:647(args)
                                                                                        26    0.000    0.000  ikfast_IKFastSolver.py:9319(frontnumbers)
polyoptions.py:389(preprocess)                                                  ->     840    0.000    0.000  {isinstance}
version.py:12(<module>)                                                         ->       1    0.000    0.000  __init__.py:9(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  version.py:27(<module>)
                                                                                         1    0.000    0.000  version.py:38(__init__)
{imp.load_module}                                                               ->       1    0.000    0.000  six.py:184(find_module)
nonlin.py:1429(_nonlin_wrapper)                                                 ->       1    0.000    0.000  <string>:2(<module>)
                                                                                         7    0.000    0.000  inspect.py:803(getargspec)
                                                                                         7    0.000    0.000  nonlin.py:211(_set_doc)
                                                                                         7    0.000    0.000  {globals}
                                                                                         7    0.000    0.000  {len}
                                                                                        14    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         7    0.000    0.000  {method 'update' of 'dict' objects}
                                                                                         7    0.000    0.000  {zip}
__init__.py:2565(key)                                                           ->     232    0.000    0.000  __init__.py:2692(__getattr__)
                                                                                       232    0.000    0.000  {method 'lower' of 'str' objects}
tempfile.py:124(rng)                                                            ->       2    0.000    0.001  random.py:91(__init__)
                                                                                         3    0.000    0.000  {getattr}
                                                                                         3    0.000    0.000  {posix.getpid}
integrals.py:1(<module>)                                                        ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         2    0.000    0.000  decorator.py:47(xthreaded)
                                                                                         1    0.000    0.000  deltafunctions.py:1(<module>)
                                                                                         1    0.000    0.000  integrals.py:88(Integral)
                                                                                         1    0.000    0.000  rationaltools.py:1(<module>)
                                                                                         1    0.000    0.000  risch.py:1(<module>)
                                                                                         5    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  trigonometry.py:3(<module>)
evalf.py:919(<lambda>)                                                          ->
zipfile.py:3(<module>)                                                          ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  zipfile.py:20(BadZipfile)
                                                                                         1    0.000    0.000  zipfile.py:24(LargeZipFile)
                                                                                         1    0.000    0.000  zipfile.py:262(ZipInfo)
                                                                                         1    0.000    0.000  zipfile.py:420(_ZipDecrypter)
                                                                                         1    0.000    0.000  zipfile.py:501(ZipExtFile)
                                                                                         1    0.000    0.000  zipfile.py:709(ZipFile)
                                                                                         1    0.000    0.000  zipfile.py:1377(PyZipFile)
                                                                                         5    0.000    0.000  {_struct.calcsize}
ccompiler.py:963(new_compiler)                                                  ->       5    0.000    0.000  ccompiler.py:93(__init__)
                                                                                         5    0.000    0.000  ccompiler.py:907(get_default_compiler)
                                                                                         5    0.000    0.000  {__import__}
                                                                                         5    0.000    0.000  {vars}
{method 'remove' of 'list' objects}                                             ->     103    0.000    0.000  basic.py:374(__eq__)
                                                                                        76    0.000    0.000  numbers.py:1084(__eq__)
sre_compile.py:428(_simple)                                                     ->     399    0.000    0.000  sre_parse.py:141(__getitem__)
                                                                                       483    0.000    0.000  sre_parse.py:151(getwidth)
ctx_fp.py:18(__init__)                                                          ->       2    0.000    0.001  ctx_base.py:38(__init__)
                                                                                         2    0.000    0.000  ctx_base.py:47(_init_aliases)
posixpath.py:358(abspath)                                                       ->     121    0.000    0.000  posixpath.py:52(isabs)
                                                                                         2    0.000    0.000  posixpath.py:61(join)
                                                                                       121    0.000    0.000  posixpath.py:329(normpath)
                                                                                         2    0.000    0.000  {isinstance}
                                                                                         2    0.000    0.000  {posix.getcwd}
polyfuncs.py:1(<module>)                                                        ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.001  specialpolys.py:1(<module>)
complexes.py:1(<module>)                                                        ->       1    0.000    0.000  complexes.py:12(re)
                                                                                         1    0.000    0.000  complexes.py:83(im)
                                                                                         1    0.000    0.000  complexes.py:157(sign)
                                                                                         1    0.000    0.000  complexes.py:203(Abs)
                                                                                         1    0.000    0.000  complexes.py:299(arg)
                                                                                         1    0.000    0.000  complexes.py:322(conjugate)
                                                                                         6    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  miscellaneous.py:1(<module>)
                                                                                         1    0.000    0.000  piecewise.py:1(<module>)
                                                                                         3    0.000    0.000  six.py:184(find_module)
ikfast_AST.py:83(numsolutions)                                                  ->     826    0.000    0.000  {len}
ikfast_generator_cpp.py:688(<lambda>)                                           ->      74    0.000    0.001  basic.py:475(__str__)
convexdecomposition.py:63(<module>)                                             ->       1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  convexdecomposition.py:101(ConvexDecompositionError)
                                                                                         1    0.000    0.000  convexdecomposition.py:109(ConvexDecompositionModel)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
                                                                                         3    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {method 'split' of 'str' objects}
core.py:2683(MaskedArray)                                                       ->       9    0.000    0.000  core.py:2521(_arraymethod)
polyclasses.py:1083(zero)                                                       ->      46    0.000    0.001  polyclasses.py:926(new)
{sys._getframe}                                                                 ->
simplify.py:300(make_expression)                                                ->     105    0.000    0.000  cache.py:74(wrapper)
                                                                                        31    0.000    0.000  {method 'append' of 'list' objects}
__init__.py:3057(_find_adapter)                                                 ->      63    0.000    0.000  __init__.py:3050(_get_mro)
                                                                                        63    0.000    0.000  {getattr}
numbers.py:1349(__neg__)                                                        ->
collections.py:11(<module>)                                                     ->       1    0.000    0.000  collections.py:38(OrderedDict)
                                                                                         1    0.000    0.000  collections.py:407(Counter)
                                                                                         1    0.000    0.000  heapq.py:31(<module>)
                                                                                         1    0.000    0.000  keyword.py:11(<module>)
difflib.py:233(set_seq1)                                                        ->
matrices.py:1036(<lambda>)                                                      ->     128    0.000    0.000  evalf.py:983(evalf)
matrices.py:141(<lambda>)                                                       ->     512    0.000    0.000  sympify.py:23(sympify)
mul.py:748(check)                                                               ->
__init__.py:1724(_get)                                                          ->      61    0.000    0.000  {method 'read' of 'file' objects}
                                                                                        61    0.000    0.000  {open}
{imp.find_module}                                                               ->
{method 'endswith' of 'str' objects}                                            ->
polyclasses.py:500(LC)                                                          ->     348    0.000    0.000  densebasic.py:58(dmp_ground_LC)
ctx_mp_python.py:982(f)                                                         ->       4    0.000    0.000  ctx_mp_python.py:595(make_mpf)
                                                                                         4    0.000    0.001  libelefun.py:912(mpf_asin)
                                                                                         4    0.000    0.000  {hasattr}
specialpolys.py:1(<module>)                                                     ->       8    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                         8    0.000    0.000  cythonutils.py:8(cythonized)
                                                                                         9    0.000    0.000  densebasic.py:465(dmp_normal)
relational.py:109(get_relational_class)                                         ->
matrices.py:1231(minorMatrix)                                                   ->      16    0.000    0.001  matrices.py:1541(delRowCol)
sysconfig.py:10(<module>)                                                       ->       1    0.000    0.000  UserDict.py:103(__contains__)
                                                                                         1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         2    0.000    0.000  posixpath.py:329(normpath)
                                                                                         1    0.000    0.000  posixpath.py:358(abspath)
                                                                                         3    0.000    0.000  re.py:192(compile)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  sysconfig.py:51(_python_build)
optparse.py:1008(add_option)                                                    ->      45    0.000    0.000  optparse.py:561(__init__)
                                                                                        45    0.000    0.000  optparse.py:981(_check_conflict)
                                                                                        45    0.000    0.000  {method 'append' of 'list' objects}
specifiers.py:224(LegacySpecifier)                                              ->       1    0.000    0.001  re.py:192(compile)
polyoptions.py:374(Domain)                                                      ->       4    0.000    0.001  re.py:192(compile)
{posix.lstat}                                                                   ->
matrices.py:1541(delRowCol)                                                     ->      16    0.000    0.000  matrices.py:227(__getitem__)
                                                                                        16    0.000    0.000  matrices.py:797(row_del)
                                                                                        16    0.000    0.000  matrices.py:801(col_del)
inversekinematics.py:334(save)                                                  ->       1    0.000    0.000  __init__.py:1157(info)
                                                                                         1    0.000    0.000  inversekinematics.py:363(getversion)
                                                                                         1    0.000    0.000  inversekinematics.py:580(getfilename)
                                                                                         1    0.000    0.000  inversekinematics.py:640(getstatsfilename)
                                                                                         1    0.000    0.000  os.py:136(makedirs)
                                                                                         1    0.000    0.000  posixpath.py:82(split)
                                                                                         1    0.000    0.000  {cPickle.dump}
                                                                                         1    0.000    0.000  {open}
densebasic.py:1(<module>)                                                       ->      61    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                        61    0.000    0.000  cythonutils.py:8(cythonized)
                                                                                         1    0.000    0.000  groebnertools.py:1(<module>)
                                                                                         1    0.000    0.000  monomialtools.py:1(<module>)
                                                                                         3    0.000    0.000  six.py:184(find_module)
libelefun.py:912(mpf_asin)                                                      ->       4    0.000    0.000  libelefun.py:842(mpf_atan)
                                                                                         4    0.000    0.000  libmpf.py:676(mpf_add)
                                                                                         4    0.000    0.000  libmpf.py:771(mpf_sub)
                                                                                         4    0.000    0.000  libmpf.py:858(python_mpf_mul)
                                                                                         4    0.000    0.000  libmpf.py:907(mpf_shift)
                                                                                         4    0.000    0.000  libmpf.py:924(mpf_div)
                                                                                         4    0.000    0.000  libmpf.py:1338(mpf_sqrt)
sre_parse.py:149(append)                                                        ->    1748    0.000    0.000  {method 'append' of 'list' objects}
libelefun.py:842(mpf_atan)                                                      ->       2    0.000    0.000  libelefun.py:94(g)
                                                                                         6    0.000    0.000  libelefun.py:817(atan_taylor)
                                                                                         6    0.000    0.000  libmpf.py:291(from_man_exp)
                                                                                         6    0.000    0.000  libmpf.py:483(to_fixed)
                                                                                         2    0.000    0.000  libmpf.py:961(mpf_rdiv_int)
                                                                                         6    0.000    0.000  {abs}
inversekinematics.py:1241(CreateOptionParser)                                   ->       1    0.000    0.000  __init__.py:147(CreateOptionParser)
                                                                                        11    0.000    0.000  optparse.py:1008(add_option)
                                                                                         1    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'values' of 'dict' objects}
__init__.py:3050(_get_mro)                                                      ->      52    0.000    0.000  __init__.py:3053(cls)
                                                                                        63    0.000    0.000  {isinstance}
posixpath.py:329(normpath)                                                      ->     126    0.000    0.000  {isinstance}
                                                                                       699    0.000    0.000  {method 'append' of 'list' objects}
                                                                                       124    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         2    0.000    0.000  {method 'join' of 'unicode' objects}
                                                                                         2    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                       124    0.000    0.000  {method 'split' of 'str' objects}
                                                                                         2    0.000    0.000  {method 'split' of 'unicode' objects}
                                                                                       247    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                         4    0.000    0.000  {method 'startswith' of 'unicode' objects}
{method 'splitlines' of 'str' objects}                                          ->
pythonrationalfield.py:36(from_ZZ_python)                                       ->     950    0.000    0.000  pythonrationaltype.py:26(__init__)
<string>:2(__mul__)                                                             ->      55    0.000    0.000  ctx_mp_python.py:348(_mpf_)
                                                                                         4    0.000    0.000  libmpc.py:173(mpc_mul_mpf)
                                                                                         8    0.000    0.000  libmpf.py:410(from_float)
                                                                                        55    0.000    0.000  libmpf.py:880(python_mpf_mul_int)
                                                                                        59    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                        63    0.000    0.000  {hasattr}
copy.py:113(_copy_with_constructor)                                             ->
ctx_mp_python.py:379(<lambda>)                                                  ->     528    0.000    0.000  ctx_mp_python.py:595(make_mpf)
polynomial.py:55(<module>)                                                      ->       1    0.000    0.000  _polybase.py:8(<module>)
                                                                                         1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  polynomial.py:1517(Polynomial)
                                                                                         1    0.000    0.000  polyutils.py:45(<module>)
                                                                                         4    0.000    0.000  {numpy.core.multiarray.array}
densebasic.py:465(dmp_normal)                                                   ->      67    0.000    0.000  densebasic.py:264(dmp_strip)
                                                                                       210    0.000    0.000  densebasic.py:450(dup_normal)
                                                                                    268/54    0.000    0.000  densebasic.py:465(dmp_normal)
numbers.py:1393(__neg__)                                                        ->
core.py:113(get_object_signature)                                               ->      43    0.000    0.000  _inspect.py:98(getargspec)
                                                                                        38    0.000    0.000  _inspect.py:142(formatargspec)
power.py:210(_eval_is_bounded)                                                  -> 104/102    0.000    0.000  assumptions.py:365(getit)
                                                                                        53    0.000    0.000  power.py:91(base)
                                                                                        51    0.000    0.000  power.py:95(exp)
basic.py:6(<module>)                                                            ->       1    0.000    0.000  decomp_svd.py:1(<module>)
                                                                                         1    0.000    0.000  flinalg.py:5(<module>)
                                                                                         1    0.000    0.000  lapack.py:5(<module>)
                                                                                         4    0.000    0.000  six.py:184(find_module)
polytools.py:4819(_symbolic_factor_list)                                        ->       2    0.000    0.000  basic.py:647(args)
                                                                                         3    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                         4    0.000    0.000  numbers.py:1056(__mul__)
                                                                                         2    0.000    0.000  numbers.py:1063(__rmul__)
                                                                                         2    0.000    0.000  operations.py:264(make_args)
                                                                                         3    0.000    0.000  polytools.py:2605(factor_list)
                                                                                         3    0.000    0.000  polytools.py:3553(_poly_from_expr)
                                                                                         3    0.000    0.000  {getattr}
                                                                                         2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'extend' of 'list' objects}
assume.py:71(func)                                                              ->
ctx_mp_python.py:610(_set_prec)                                                 ->     118    0.000    0.000  libmpf.py:59(prec_to_dps)
                                                                                         8    0.000    0.000  {max}
numbers.py:230(as_coeff_Mul)                                                    ->
__init__.py:24(<module>)                                                        ->       1    0.000    0.000  __init__.py:225(LogRecord)
                                                                                         1    0.000    0.000  __init__.py:347(Formatter)
                                                                                         1    0.000    0.000  __init__.py:391(__init__)
                                                                                         1    0.000    0.000  __init__.py:503(BufferingFormatter)
                                                                                         1    0.000    0.000  __init__.py:545(Filter)
                                                                                         1    0.000    0.000  __init__.py:582(Filterer)
                                                                                         1    0.000    0.000  __init__.py:656(Handler)
                                                                                         1    0.000    0.000  __init__.py:820(StreamHandler)
                                                                                         1    0.000    0.000  __init__.py:891(FileHandler)
                                                                                         1    0.000    0.000  __init__.py:963(PlaceHolder)
                                                                                         1    0.000    0.000  __init__.py:1010(Manager)
                                                                                         1    0.000    0.000  __init__.py:1015(__init__)
                                                                                         1    0.000    0.000  __init__.py:1112(Logger)
                                                                                         1    0.000    0.000  __init__.py:1387(RootLogger)
                                                                                         1    0.000    0.000  __init__.py:1393(__init__)
                                                                                         1    0.000    0.000  __init__.py:1401(LoggerAdapter)
                                                                                         1    0.000    0.000  __init__.py:1689(NullHandler)
                                                                                         1    0.000    0.000  atexit.py:6(<module>)
                                                                                         1    0.000    0.000  atexit.py:37(register)
                                                                                         1    0.000    0.000  posixpath.py:44(normcase)
                                                                                         1    0.000    0.000  threading.py:114(RLock)
                                                                                         1    0.000    0.000  weakref.py:47(__init__)
                                                                                         1    0.000    0.000  {hasattr}
                                                                                         1    0.000    0.000  {time.time}
version.py:217(<genexpr>)                                                       ->
__init__.py:1712(_has)                                                          ->     134    0.000    0.000  genericpath.py:23(exists)
genericpath.py:23(exists)                                                       ->     156    0.000    0.000  {posix.stat}
sre_parse.py:137(__len__)                                                       ->    2232    0.000    0.000  {len}
version.py:27(<module>)                                                         ->       3    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  version.py:32(Version)
                                                                                         1    0.000    0.000  version.py:63(StrictVersion)
                                                                                         1    0.000    0.000  version.py:228(LooseVersion)
basic.py:1(<module>)                                                            ->       1    0.000    0.000  basic.py:10(Basic)
                                                                                         1    0.000    0.000  basic.py:1198(Atom)
                                                                                         2    0.000    0.000  core.py:118(__init__)
libelefun.py:817(atan_taylor)                                                   ->       6    0.000    0.000  libelefun.py:802(atan_taylor_get_cached)
tempfile.py:268(gettempdir)                                                     ->       1    0.000    0.000  tempfile.py:176(_get_default_tempdir)
                                                                                         1    0.000    0.000  {method 'acquire' of 'thread.lock' objects}
                                                                                         1    0.000    0.000  {method 'release' of 'thread.lock' objects}
libmpc.py:3(<module>)                                                           ->       2    0.000    0.000  libelefun.py:10(<module>)
                                                                                         4    0.000    0.000  libmpf.py:410(from_float)
                                                                                         1    0.000    0.000  six.py:184(find_module)
ikfast_generator_cpp.py:20(<module>)                                            ->       1    0.000    0.000  __init__.py:1507(basicConfig)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         3    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:90(fmod)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:95(atan2check)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:100(RemoveAbsFn)
                                                                                         1    0.000    0.000  ikfast_generator_cpp.py:201(CodeGenerator)
                                                                                         3    0.000    0.000  six.py:184(find_module)
numbers.py:6(<module>)                                                          ->       5    0.000    0.000  abc.py:86(__new__)
                                                                                         4    0.000    0.000  abc.py:105(register)
                                                                                         1    0.000    0.000  numbers.py:13(Number)
                                                                                         1    0.000    0.000  numbers.py:34(Complex)
                                                                                         1    0.000    0.000  numbers.py:169(Real)
                                                                                         1    0.000    0.000  numbers.py:270(Rational)
                                                                                         1    0.000    0.000  numbers.py:295(Integral)
tempfile.py:176(_get_default_tempdir)                                           ->       1    0.000    0.000  posixpath.py:44(normcase)
                                                                                         1    0.000    0.000  posixpath.py:61(join)
                                                                                         1    0.000    0.000  posixpath.py:358(abspath)
                                                                                         1    0.000    0.000  tempfile.py:120(__init__)
                                                                                         1    0.000    0.000  tempfile.py:135(next)
                                                                                         1    0.000    0.000  tempfile.py:148(_candidate_tempdir_list)
                                                                                         1    0.000    0.000  {_io.open}
                                                                                         1    0.000    0.000  {method 'write' of '_io.BufferedWriter' objects}
                                                                                         1    0.000    0.000  {posix.close}
                                                                                         1    0.000    0.000  {posix.open}
                                                                                         1    0.000    0.000  {posix.unlink}
complexes.py:264(_eval_is_nonzero)                                              ->      15    0.000    0.000  assumptions.py:365(getit)
__init__.py:2692(__getattr__)                                                   ->     345    0.000    0.000  {getattr}
                                                                                       577    0.000    0.000  {method 'startswith' of 'str' objects}
{method 'reverse' of 'list' objects}                                            ->
io.py:34(<module>)                                                              ->       4    0.000    0.000  abc.py:86(__new__)
                                                                                         8    0.000    0.000  abc.py:105(register)
                                                                                         1    0.000    0.000  io.py:69(IOBase)
                                                                                         1    0.000    0.000  io.py:73(RawIOBase)
                                                                                         1    0.000    0.000  io.py:76(BufferedIOBase)
                                                                                         1    0.000    0.000  io.py:79(TextIOBase)
core.py:6353(__init__)                                                          ->      26    0.000    0.000  core.py:6358(getdoc)
libintmath.py:15(giant_steps)                                                   ->
__init__.py:2343(EntryPoint)                                                    ->       1    0.000    0.000  re.py:192(compile)
misc.py:152(parseGlobal)                                                        ->       1    0.000    0.000  misc.py:65(InitOpenRAVELogging)
linkstatistics.py:57(<module>)                                                  ->       1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  linkstatistics.py:84(LinkStatisticsModel)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
                                                                                         1    0.000    0.000  pyANN.py:15(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {method 'split' of 'str' objects}
misc.py:65(InitOpenRAVELogging)                                                 ->       1    0.000    0.000  __init__.py:391(__init__)
                                                                                         1    0.000    0.000  __init__.py:764(setFormatter)
                                                                                         1    0.000    0.000  __init__.py:827(__init__)
                                                                                         1    0.000    0.000  __init__.py:1139(setLevel)
                                                                                         1    0.000    0.000  __init__.py:1298(addHandler)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  codecs.py:340(__init__)
                                                                                         1    0.000    0.000  codecs.py:1001(getwriter)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {__import__}
                                                                                         1    0.000    0.000  {len}
ctx_mp_python.py:155(__pos__)                                                   ->      55    0.000    0.000  ctx_mp_python.py:348(_mpf_)
                                                                                       127    0.000    0.000  libmpf.py:627(mpf_pos)
                                                                                       127    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
loader.py:1(<module>)                                                           ->       1    0.000    0.000  fnmatch.py:11(<module>)
                                                                                         1    0.000    0.000  loader.py:38(TestLoader)
                                                                                         1    0.000    0.000  re.py:192(compile)
libelefun.py:802(atan_taylor_get_cached)                                        ->       5    0.000    0.000  libelefun.py:784(atan_newton)
                                                                                         6    0.000    0.000  libintmath.py:83(python_bitcount)
ctx_base.py:65(_re)                                                             ->      72    0.000    0.000  ctx_mp_python.py:126(<lambda>)
                                                                                       152    0.000    0.000  ctx_mp_python.py:378(<lambda>)
                                                                                       224    0.000    0.000  {hasattr}
core.py:6358(getdoc)                                                            ->      26    0.000    0.000  core.py:113(get_object_signature)
                                                                                        52    0.000    0.000  {getattr}
ccompiler.py:907(get_default_compiler)                                          ->      30    0.000    0.000  re.py:138(match)
libmpf.py:322(<genexpr>)                                                        ->     534    0.000    0.000  libmpf.py:291(from_man_exp)
ctx_mp.py:57(__init__)                                                          ->       1    0.000    0.000  ctx_base.py:38(__init__)
                                                                                         1    0.000    0.000  ctx_base.py:47(_init_aliases)
                                                                                         1    0.000    0.000  ctx_mp.py:90(init_builtins)
                                                                                         1    0.000    0.000  ctx_mp_python.py:583(__init__)
                                                                                         1    0.000    0.000  ctx_mp_python.py:605(default)
ikfast_generator_cpp.py:1627(<lambda>)                                          ->
optparse.py:561(__init__)                                                       ->      45    0.000    0.000  optparse.py:580(_check_opt_strings)
                                                                                        45    0.000    0.000  optparse.py:589(_set_opt_strings)
                                                                                        45    0.000    0.000  optparse.py:610(_set_attrs)
                                                                                        45    0.000    0.000  optparse.py:630(_check_action)
                                                                                        45    0.000    0.000  optparse.py:636(_check_type)
                                                                                        45    0.000    0.000  optparse.py:666(_check_choice)
                                                                                        45    0.000    0.000  optparse.py:679(_check_dest)
                                                                                        45    0.000    0.000  optparse.py:694(_check_const)
                                                                                        45    0.000    0.000  optparse.py:700(_check_nargs)
                                                                                        45    0.000    0.000  optparse.py:709(_check_callback)
libelefun.py:784(atan_newton)                                                   ->      10    0.000    0.000  libelefun.py:1391(cos_sin_fixed)
                                                                                         5    0.000    0.000  libintmath.py:15(giant_steps)
                                                                                        15    0.000    0.000  libintmath.py:39(rshift)
                                                                                         5    0.000    0.000  {math.atan}
stringpict.py:13(<module>)                                                      ->       1    0.000    0.000  pretty_symbology.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  stringpict.py:17(stringPict)
                                                                                         1    0.000    0.000  stringpict.py:335(prettyForm)
util.py:1(<module>)                                                             ->       1    0.000    0.000  collections.py:305(namedtuple)
utils.py:1(<module>)                                                            ->       1    0.000    0.000  re.py:192(compile)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  utils.py:56(_Deprecate)
                                                                                         1    0.000    0.000  utils.py:1002(SafeEval)
ikfast_generator_cpp.py:686(<genexpr>)                                          ->      74    0.000    0.000  basic.py:475(__str__)
{method 'group' of '_sre.SRE_Match' objects}                                    ->
shutil.py:66(copyfile)                                                          ->       2    0.000    0.000  shutil.py:46(copyfileobj)
                                                                                         2    0.000    0.000  shutil.py:54(_samefile)
                                                                                         3    0.000    0.000  stat.py:52(S_ISFIFO)
                                                                                         4    0.000    0.000  {open}
                                                                                         4    0.000    0.000  {posix.stat}
ikfast_IKFastSolver.py:8262(<lambda>)                                           ->
tempfile.py:235(_mkstemp_inner)                                                 ->       2    0.000    0.000  posixpath.py:61(join)
                                                                                         2    0.000    0.000  posixpath.py:358(abspath)
                                                                                         2    0.000    0.000  tempfile.py:48(_set_cloexec)
                                                                                         2    0.000    0.000  tempfile.py:135(next)
                                                                                         2    0.000    0.000  tempfile.py:221(_get_candidate_names)
                                                                                         2    0.000    0.000  {posix.open}
dataset.py:12(<module>)                                                         ->       1    0.000    0.000  dataset.py:137(AstypeContext)
                                                                                         1    0.000    0.000  dataset.py:173(Dataset)
                                                                                         1    0.000    0.000  datatype.py:12(<module>)
                                                                                         1    0.000    0.000  selections.py:15(<module>)
                                                                                         1    0.000    0.000  selections2.py:12(<module>)
                                                                                         1    0.000    0.000  six.py:91(__get__)
                                                                                         4    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  six.py:195(load_module)
                                                                                         1    0.000    0.000  {h5py.h5.get_config}
                                                                                         1    0.000    0.000  {range}
polytools.py:115(from_dict)                                                     ->       4    0.000    0.000  polyoptions.py:689(build_options)
                                                                                         4    0.000    0.000  polytools.py:139(_from_dict)
abc.py:105(register)                                                            ->      16    0.000    0.000  _weakrefset.py:83(add)
                                                                                        16    0.000    0.000  {isinstance}
                                                                                        32    0.000    0.000  {issubclass}
re.py:138(match)                                                                ->      30    0.000    0.000  re.py:230(_compile)
                                                                                        30    0.000    0.000  {method 'match' of '_sre.SRE_Pattern' objects}
ctx_mp.py:62(__init__)                                                          ->       1    0.000    0.000  ctx_base.py:38(__init__)
                                                                                         1    0.000    0.000  ctx_base.py:47(_init_aliases)
                                                                                         1    0.000    0.000  ctx_mp.py:95(init_builtins)
                                                                                         1    0.000    0.000  ctx_mp_python.py:583(__init__)
                                                                                         1    0.000    0.000  ctx_mp_python.py:605(default)
expr.py:494(coeff)                                                              ->      18    0.000    0.000  basic.py:179(__hash__)
                                                                                         4    0.000    0.000  cache.py:74(wrapper)
                                                                                        40    0.000    0.000  expr.py:592(arglist)
                                                                                        20    0.000    0.000  numbers.py:819(__hash__)
                                                                                        20    0.000    0.000  numbers.py:1693(__eq__)
                                                                                        22    0.000    0.000  numbers.py:1760(__hash__)
                                                                                        60    0.000    0.000  operations.py:264(make_args)
                                                                                        20    0.000    0.000  sympify.py:23(sympify)
                                                                                       100    0.000    0.000  {len}
                                                                                         2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        20    0.000    0.000  {method 'difference' of 'set' objects}
polytools.py:1244(sub)                                                          ->       2    0.000    0.000  polyclasses.py:422(sub)
                                                                                         2    0.000    0.000  polytools.py:355(_unify)
                                                                                         2    0.000    0.000  polytools.py:393(per)
                                                                                         2    0.000    0.000  sympify.py:23(sympify)
                                                                                         2    0.000    0.000  {hasattr}
ccode.py:10(<module>)                                                           ->       1    0.000    0.000  ccode.py:24(CCodePrinter)
                                                                                         1    0.000    0.000  codeprinter.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
matrices.py:1443(norm)                                                          ->       6    0.000    0.000  cache.py:74(wrapper)
                                                                                         6    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                        24    0.000    0.000  matrices.py:1482(<genexpr>)
polynomialring.py:35(__hash__)                                                  ->     139    0.000    0.000  {hash}
polynomialring.py:32(__str__)                                                   ->      32    0.000    0.000  domain.py:53(__str__)
                                                                                        32    0.000    0.000  {map}
                                                                                        32    0.000    0.000  {method 'join' of 'str' objects}
threading.py:1(<module>)                                                        ->       1    0.000    0.000  threading.py:57(_Verbose)
                                                                                         1    0.000    0.000  threading.py:125(_RLock)
                                                                                         1    0.000    0.000  threading.py:255(_Condition)
                                                                                         1    0.000    0.000  threading.py:423(_Semaphore)
                                                                                         1    0.000    0.000  threading.py:515(_BoundedSemaphore)
                                                                                         1    0.000    0.000  threading.py:552(_Event)
                                                                                         1    0.000    0.000  threading.py:631(Thread)
                                                                                         1    0.000    0.000  threading.py:1049(_Timer)
                                                                                         1    0.000    0.000  threading.py:1079(_MainThread)
                                                                                         1    0.000    0.000  threading.py:1081(__init__)
                                                                                         1    0.000    0.000  threading.py:1119(_DummyThread)
                                                                                         1    0.000    0.000  warnings.py:67(filterwarnings)
                                                                                         1    0.000    0.000  {thread.allocate_lock}
sre_parse.py:92(__init__)                                                       ->
{open}                                                                          ->
polyclasses.py:464(div)                                                         ->      32    0.000    0.000  densearith.py:1652(dmp_div)
                                                                                        32    0.000    0.000  polyclasses.py:171(unify)
                                                                                        64    0.000    0.000  polyclasses.py:197(per)
factor_.py:18(<genexpr>)                                                        ->
__init__.py:147(CreateOptionParser)                                             ->       1    0.000    0.000  misc.py:127(addOptions)
                                                                                         6    0.000    0.000  optparse.py:1008(add_option)
                                                                                         1    0.000    0.000  optparse.py:1091(__init__)
                                                                                         1    0.000    0.000  optparse.py:1191(__init__)
                                                                                         1    0.000    0.000  optparse.py:1336(add_option_group)
                                                                                         1    0.000    0.000  os.py:512(getenv)
<string>:2(__eq__)                                                              ->      55    0.000    0.000  libmpf.py:330(from_int)
                                                                                       238    0.000    0.000  libmpf.py:511(mpf_eq)
                                                                                       238    0.000    0.000  {hasattr}
numeric.py:1553(cross)                                                          ->      64    0.000    0.000  numeric.py:414(asarray)
                                                                                        96    0.000    0.000  numeric.py:1404(rollaxis)
                                                                                        64    0.000    0.000  {len}
                                                                                        32    0.000    0.000  {numpy.core.multiarray.array}
                                                                                        32    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                        32    0.000    0.000  {numpy.core.multiarray.promote_types}
{method 'split' of '_sre.SRE_Pattern' objects}                                  ->
domain.py:1(<module>)                                                           ->       1    0.000    0.000  domain.py:13(Domain)
                                                                                         1    0.000    0.000  groundtypes.py:1(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
optparse.py:1191(__init__)                                                      ->       2    0.000    0.000  optparse.py:225(set_parser)
                                                                                         2    0.000    0.000  optparse.py:366(__init__)
                                                                                         2    0.000    0.000  optparse.py:933(__init__)
                                                                                         2    0.000    0.000  optparse.py:1258(_populate_option_list)
                                                                                         2    0.000    0.000  optparse.py:1268(_init_parsing_state)
                                                                                         2    0.000    0.000  optparse.py:1277(set_usage)
{time.time}                                                                     ->
matrices.py:382(shape)                                                          ->
facts.py:49(<module>)                                                           ->       1    0.000    0.000  facts.py:380(TautologyDetected)
                                                                                         1    0.000    0.000  facts.py:385(Prover)
                                                                                         1    0.000    0.000  facts.py:641(FactRules)
                                                                                         1    0.000    0.000  logic.py:8(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
basic.py:10(Basic)                                                              ->       2    0.000    0.000  cache.py:50(__cacheit)
                                                                                         1    0.000    0.000  decorators.py:23(deprecated)
__init__.py:1673(_fn)                                                           ->     196    0.000    0.000  posixpath.py:61(join)
                                                                                       196    0.000    0.000  {method 'split' of 'str' objects}
ikfast_AST.py:1(<module>)                                                       ->       1    0.000    0.000  ikfast_AST.py:4(AST)
ctx_fp.py:51(_wrap_specfun)                                                     ->     205    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                       205    0.000    0.000  {setattr}
trigonometric.py:762(eval)                                                      ->      12    0.000    0.000  basic.py:622(func)
                                                                                         3    0.000    0.000  expr.py:761(as_coefficient)
                                                                                         3    0.000    0.000  expr.py:1247(could_extract_minus_sign)
                                                                                         3    0.000    0.000  trigonometric.py:45(_pi_coeff)
{method 'split' of 'str' objects}                                               ->
libelefun.py:1391(cos_sin_fixed)                                                ->      10    0.000    0.000  libelefun.py:94(g)
                                                                                        10    0.000    0.000  libelefun.py:1122(cos_sin_basecase)
                                                                                        10    0.000    0.000  {divmod}
expr.py:106(__rpow__)                                                           ->      23    0.000    0.000  cache.py:74(wrapper)
sets.py:1(<module>)                                                             ->      10    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  sets.py:10(Set)
                                                                                         1    0.000    0.000  sets.py:244(RealSet)
                                                                                         1    0.000    0.000  sets.py:252(ProductSet)
                                                                                         1    0.000    0.000  sets.py:379(RealSet)
                                                                                         1    0.000    0.000  sets.py:387(CountableSet)
                                                                                         1    0.000    0.000  sets.py:402(Interval)
                                                                                         1    0.000    0.000  sets.py:647(Union)
                                                                                         1    0.000    0.000  sets.py:830(RealUnion)
                                                                                         1    0.000    0.000  sets.py:945(EmptySet)
                                                                                         1    0.000    0.000  sets.py:989(FiniteSet)
                                                                                         1    0.000    0.000  sets.py:1111(RealFiniteSet)
                                                                                         1    0.000    0.000  sets.py:1158(<genexpr>)
                                                                                         1    0.000    0.000  singleton.py:51(__init__)
expr.py:233(_eval_power)                                                        ->
codeprinter.py:1(<module>)                                                      ->       1    0.000    0.000  __init__.py:3(<module>)
                                                                                         1    0.000    0.000  codeprinter.py:5(AssignmentError)
                                                                                         1    0.000    0.000  codeprinter.py:8(CodePrinter)
                                                                                         1    0.000    0.000  six.py:184(find_module)
domain.py:395(is_nonnegative)                                                   ->
inversekinematics.py:344(load)                                                  ->       1    0.000    0.000  inversekinematics.py:363(getversion)
                                                                                         1    0.000    0.000  inversekinematics.py:368(setrobot)
                                                                                         1    0.000    0.000  inversekinematics.py:640(getstatsfilename)
                                                                                         1    0.000    0.000  {cPickle.load}
                                                                                         1    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {open}
multinomial.py:55(<genexpr>)                                                    ->
polytools.py:773(all_coeffs)                                                    ->       6    0.000    0.000  fractionfield.py:50(to_sympy)
                                                                                         2    0.000    0.000  polyclasses.py:295(all_coeffs)
polytools.py:3553(_poly_from_expr)                                              ->       3    0.000    0.000  constructor.py:195(construct_domain)
                                                                                         3    0.000    0.000  expr.py:1869(expand)
                                                                                         3    0.000    0.000  polyclasses.py:256(from_monoms_coeffs)
                                                                                        15    0.000    0.000  polyoptions.py:60(getter)
                                                                                         3    0.000    0.000  polytools.py:100(new)
                                                                                         3    0.000    0.000  polyutils.py:283(_dict_from_expr)
                                                                                         3    0.000    0.000  sympify.py:23(sympify)
                                                                                         3    0.000    0.000  {isinstance}
                                                                                         3    0.000    0.000  {len}
                                                                                         3    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                         3    0.000    0.000  {zip}
ring.py:11(get_ring)                                                            ->
decimal.py:514(__new__)                                                         ->       3    0.000    0.000  {abs}
                                                                                        38    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                        41    0.000    0.000  {isinstance}
                                                                                        32    0.000    0.000  {len}
                                                                                       138    0.000    0.000  {method 'group' of '_sre.SRE_Match' objects}
                                                                                         1    0.000    0.000  {method 'lstrip' of 'str' objects}
                                                                                        35    0.000    0.000  {method 'match' of '_sre.SRE_Pattern' objects}
                                                                                        35    0.000    0.000  {method 'strip' of 'str' objects}
logic.py:134(fromstring)                                                        ->      16    0.000    0.000  logic.py:195(__new__)
                                                                                       124    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                        46    0.000    0.000  {method 'split' of 'str' objects}
ctx_mp_python.py:143(__float__)                                                 ->     222    0.000    0.000  libmpf.py:429(to_float)
densebasic.py:450(dup_normal)                                                   ->     210    0.000    0.000  densebasic.py:238(dup_strip)
                                                                                       430    0.000    0.000  domain.py:66(normal)
pretty_symbology.py:1(<module>)                                                 ->       1    0.000    0.000  conventions.py:3(<module>)
                                                                                        27    0.000    0.000  pretty_symbology.py:10(U)
                                                                                        24    0.000    0.000  pretty_symbology.py:100(<lambda>)
                                                                                        24    0.000    0.000  pretty_symbology.py:101(<lambda>)
                                                                                         8    0.000    0.000  pretty_symbology.py:144(<lambda>)
                                                                                         5    0.000    0.000  pretty_symbology.py:145(<lambda>)
                                                                                        10    0.000    0.000  pretty_symbology.py:146(<lambda>)
                                                                                         5    0.000    0.000  pretty_symbology.py:147(<lambda>)
                                                                                         2    0.000    0.000  pretty_symbology.py:149(<lambda>)
                                                                                        10    0.000    0.000  pretty_symbology.py:150(<lambda>)
                                                                                         5    0.000    0.000  pretty_symbology.py:151(<lambda>)
                                                                                         4    0.000    0.000  pretty_symbology.py:176(<lambda>)
                                                                                         4    0.000    0.000  pretty_symbology.py:177(<lambda>)
                                                                                         2    0.000    0.000  pretty_symbology.py:178(<lambda>)
                                                                                        15    0.000    0.000  pretty_symbology.py:179(<lambda>)
                                                                                         4    0.000    0.000  pretty_symbology.py:180(<lambda>)
                                                                                         4    0.000    0.000  pretty_symbology.py:181(<lambda>)
                                                                                        15    0.000    0.000  pretty_symbology.py:335(<lambda>)
                                                                                         4    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {range}
ikfast_IKFastSolver.py:9191(_GetSumSquares)                                     ->      90    0.000    0.000  basic.py:647(args)
                                                                                        26    0.000    0.000  numbers.py:197(is_number)
                                                                                        26    0.000    0.000  numbers.py:1070(__mod__)
                                                                                        26    0.000    0.000  numbers.py:1084(__eq__)
                                                                                        26    0.000    0.000  numbers.py:1098(__gt__)
                                                                                        26    0.000    0.000  power.py:91(base)
                                                                                        78    0.000    0.000  power.py:95(exp)
                                                                                        26    0.000    0.000  {method 'append' of 'list' objects}
csr.py:8(<module>)                                                              ->       1    0.000    0.000  csr.py:10(swig_import_helper)
                                                                                         1    0.000    0.000  six.py:184(find_module)
numbers.py:189(__gt__)                                                          ->       7    0.000    0.000  numbers.py:424(__lt__)
                                                                                         3    0.000    0.000  numbers.py:1105(__lt__)
                                                                                        10    0.000    0.000  sympify.py:161(_sympify)
core.py:101(__setattr__)                                                        ->     174    0.000    0.000  core.py:80(__setattr__)
                                                                                       174    0.000    0.000  {method 'add' of 'set' objects}
__init__.py:1567(getLogger)                                                     ->      18    0.000    0.000  __init__.py:1025(getLogger)
{posix.popen}                                                                   ->
{callable}                                                                      ->
hyperbolic.py:1(<module>)                                                       ->       9    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  hyperbolic.py:10(HyperbolicFunction)
                                                                                         1    0.000    0.000  hyperbolic.py:13(sinh)
                                                                                         1    0.000    0.000  hyperbolic.py:140(cosh)
                                                                                         1    0.000    0.000  hyperbolic.py:266(tanh)
                                                                                         1    0.000    0.000  hyperbolic.py:395(coth)
                                                                                         1    0.000    0.000  hyperbolic.py:520(asinh)
                                                                                         1    0.000    0.000  hyperbolic.py:593(acosh)
                                                                                         1    0.000    0.000  hyperbolic.py:697(atanh)
                                                                                         1    0.000    0.000  hyperbolic.py:763(acoth)
ikfast_IKFastSolver.py:200(CheckCases)                                          ->
iterables.py:184(skip)                                                          ->
arrayprint.py:5(<module>)                                                       ->       1    0.000    0.000  arrayprint.py:528(FloatFormat)
                                                                                         1    0.000    0.000  arrayprint.py:634(IntegerFormat)
                                                                                         1    0.000    0.000  arrayprint.py:654(LongFloatFormat)
                                                                                         1    0.000    0.000  arrayprint.py:684(LongComplexFormat)
                                                                                         1    0.000    0.000  arrayprint.py:695(ComplexFormat)
                                                                                         1    0.000    0.000  arrayprint.py:712(DatetimeFormat)
                                                                                         1    0.000    0.000  arrayprint.py:733(TimedeltaFormat)
                                                                                         1    0.000    0.000  fromnumeric.py:3(<module>)
ctx_iv.py:1(<module>)                                                           ->       2    0.000    0.000  ctx_iv.py:35(ivmpf)
                                                                                         2    0.000    0.000  ctx_iv.py:132(ivmpc)
                                                                                        10    0.000    0.000  ctx_iv.py:218(_binary_op)
                                                                                         2    0.000    0.000  ctx_iv.py:264(ivmpf_constant)
                                                                                         2    0.000    0.000  ctx_iv.py:276(MPIntervalContext)
polynomials.py:7(<module>)                                                      ->       8    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  orthopolys.py:1(<module>)
                                                                                         1    0.000    0.000  polynomials.py:24(PolynomialSequence)
                                                                                         1    0.000    0.000  polynomials.py:40(chebyshevt)
                                                                                         1    0.000    0.000  polynomials.py:70(chebyshevu)
                                                                                         1    0.000    0.000  polynomials.py:93(chebyshevt_root)
                                                                                         1    0.000    0.000  polynomials.py:118(chebyshevu_root)
                                                                                         1    0.000    0.000  polynomials.py:147(legendre)
                                                                                         1    0.000    0.000  polynomials.py:173(assoc_legendre)
                                                                                         1    0.000    0.000  polynomials.py:229(hermite)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  symbol.py:127(__new__)
pyANN.py:15(<module>)                                                           ->       1    0.000    0.000  pyANN.py:19(pyann_exception)
                                                                                         1    0.000    0.000  six.py:184(find_module)
assume.py:52(arg)                                                               ->
groundtypes.py:1(<module>)                                                      ->       1    0.000    0.000  groundtypes.py:53(GMPYIntegerType)
                                                                                         1    0.000    0.000  groundtypes.py:57(GMPYRationalType)
                                                                                         1    0.000    0.000  importtools.py:23(import_module)
                                                                                         1    0.000    0.000  pythonrationaltype.py:1(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
polytools.py:650(to_field)                                                      ->       2    0.000    0.000  polyclasses.py:264(to_field)
                                                                                         2    0.000    0.000  polytools.py:404(per)
                                                                                         2    0.000    0.000  {hasattr}
facts.py:69(deduce_alpha_implications)                                          ->     312    0.000    0.000  facts.py:55(list_populate)
                                                                                        33    0.000    0.000  logic.py:57(name_not)
                                                                                         1    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                        78    0.000    0.000  {method 'setdefault' of 'dict' objects}
csr.py:10(swig_import_helper)                                                   ->       1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {imp.find_module}
                                                                                         1    0.000    0.000  {imp.load_module}
                                                                                         1    0.000    0.000  {method 'close' of 'file' objects}
version.py:63(StrictVersion)                                                    ->       1    0.000    0.000  re.py:192(compile)
domain.py:59(__hash__)                                                          ->     635    0.000    0.000  {hash}
sre_parse.py:268(_escape)                                                       ->     100    0.000    0.000  {len}
                                                                                       424    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                       100    0.000    0.000  {ord}
__init__.py:1025(getLogger)                                                     ->      18    0.000    0.000  __init__.py:205(_acquireLock)
                                                                                        18    0.000    0.000  __init__.py:214(_releaseLock)
                                                                                        15    0.000    0.000  __init__.py:1071(_fixupParents)
                                                                                        15    0.000    0.000  __init__.py:1127(__init__)
                                                                                        39    0.000    0.000  {isinstance}
_parseaddr.py:7(<module>)                                                       ->       1    0.000    0.000  _parseaddr.py:172(AddrlistClass)
                                                                                         1    0.000    0.000  _parseaddr.py:452(AddressList)
                                                                                         1    0.000    0.000  calendar.py:6(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
boolalg.py:11(__and__)                                                          ->       8    0.000    0.000  operations.py:322(__new__)
bessel.py:1(<module>)                                                           ->       1    0.000    0.000  bessel.py:21(BesselBase)
                                                                                         1    0.000    0.000  bessel.py:54(besselj)
                                                                                         1    0.000    0.000  bessel.py:117(bessely)
                                                                                         1    0.000    0.000  bessel.py:151(besseli)
                                                                                         1    0.000    0.000  bessel.py:181(besselk)
                                                                                         1    0.000    0.000  bessel.py:209(hankel1)
                                                                                         1    0.000    0.000  bessel.py:236(hankel2)
                                                                                         1    0.000    0.000  bessel.py:266(SphericalBesselBase)
                                                                                         1    0.000    0.000  bessel.py:299(jn)
                                                                                         1    0.000    0.000  bessel.py:349(yn)
                                                                                         8    0.000    0.000  bessel.py:385(c_memo)
                                                                                        10    0.000    0.000  core.py:118(__init__)
                                                                                        20    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                        46    0.000    0.000  functions.py:84(defun)
linalg.py:10(<module>)                                                          ->       1    0.000    0.000  linalg.py:43(LinAlgError)
                                                                                         1    0.000    0.000  linalg.py:76(_determine_error_states)
_weakrefset.py:58(__iter__)                                                     ->      74    0.000    0.000  _weakrefset.py:16(__init__)
                                                                                        74    0.000    0.000  _weakrefset.py:20(__enter__)
                                                                                        74    0.000    0.000  _weakrefset.py:26(__exit__)
libelefun.py:1122(cos_sin_basecase)                                             ->       5    0.000    0.000  libelefun.py:1011(exponential_series)
{method 'lower' of 'str' objects}                                               ->
polytools.py:2365(primitive)                                                    ->       2    0.000    0.000  polyclasses.py:651(primitive)
                                                                                         2    0.000    0.000  polynomialring.py:50(to_sympy)
                                                                                         2    0.000    0.000  polytools.py:404(per)
                                                                                         2    0.000    0.000  {hasattr}
{method 'sub' of '_sre.SRE_Pattern' objects}                                    ->
shutil.py:46(copyfileobj)                                                       ->      35    0.000    0.000  {method 'read' of 'file' objects}
                                                                                        33    0.000    0.000  {method 'write' of 'file' objects}
test_dataset.py:17(<module>)                                                    ->       6    0.000    0.000  case.py:51(_id)
                                                                                         1    0.000    0.000  case.py:58(decorator)
                                                                                         7    0.000    0.000  case.py:70(skipIf)
                                                                                         1    0.000    0.000  test_dataset.py:33(BaseDataset)
                                                                                         1    0.000    0.000  test_dataset.py:42(TestRepr)
                                                                                         1    0.000    0.000  test_dataset.py:55(TestCreateShape)
                                                                                         1    0.000    0.000  test_dataset.py:91(TestCreateData)
                                                                                         1    0.000    0.000  test_dataset.py:134(TestCreateRequire)
                                                                                         1    0.000    0.000  test_dataset.py:180(TestCreateChunked)
                                                                                         1    0.000    0.000  test_dataset.py:213(TestCreateFillvalue)
                                                                                         1    0.000    0.000  test_dataset.py:251(TestCreateNamedType)
                                                                                         1    0.000    0.000  test_dataset.py:266(TestCreateGzip)
                                                                                         1    0.000    0.000  test_dataset.py:311(TestCreateCompressionNumber)
                                                                                         1    0.000    0.000  test_dataset.py:351(TestCreateLZF)
                                                                                         1    0.000    0.000  test_dataset.py:371(TestCreateSZIP)
                                                                                         1    0.000    0.000  test_dataset.py:384(TestCreateShuffle)
                                                                                         1    0.000    0.000  test_dataset.py:397(TestCreateFletcher32)
                                                                                         1    0.000    0.000  test_dataset.py:409(TestCreateScaleOffset)
                                                                                         1    0.000    0.000  test_dataset.py:511(TestAutoCreate)
                                                                                         1    0.000    0.000  test_dataset.py:546(TestResize)
                                                                                         1    0.000    0.000  test_dataset.py:598(TestDtype)
                                                                                         1    0.000    0.000  test_dataset.py:610(TestLen)
                                                                                         1    0.000    0.000  test_dataset.py:633(TestIter)
                                                                                         1    0.000    0.000  test_dataset.py:654(TestStrings)
                                                                                         1    0.000    0.000  test_dataset.py:749(TestCompound)
                                                                                         1    0.000    0.000  test_dataset.py:792(TestEnum)
                                                                                         1    0.000    0.000  test_dataset.py:818(TestFloats)
                                                                                         1    0.000    0.000  test_dataset.py:845(TestTrackTimes)
                                                                                         1    0.000    0.000  test_dataset.py:858(TestZeroShape)
                                                                                         1    0.000    0.000  test_dataset.py:884(TestRegionRefs)
                                                                                         1    0.000    0.000  test_dataset.py:910(TestAstype)
                                                                                         1    0.000    0.000  test_dataset.py:925(TestScalarCompound)
                                                                                         1    0.000    0.000  test_dataset.py:939(TestVlen)
                                                                                         1    0.000    0.000  test_dataset.py:1062(TestLowOpen)
ikfast_generator_cpp.py:1594(<lambda>)                                          ->
ctx_mp_python.py:400(__pos__)                                                   ->      76    0.000    0.000  libmpc.py:105(mpc_pos)
                                                                                        76    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
ctx_mp_python.py:378(<lambda>)                                                  ->     376    0.000    0.000  ctx_mp_python.py:595(make_mpf)
mul.py:469(class_key)                                                           ->
{method 'has_key' of 'dict' objects}                                            ->     494    0.000    0.000  basic.py:179(__hash__)
{filter}                                                                        ->      21    0.000    0.000  __init__.py:5(<lambda>)
                                                                                        16    0.000    0.000  __init__.py:8(<lambda>)
                                                                                        18    0.000    0.000  __init__.py:9(<lambda>)
                                                                                        40    0.000    0.000  __init__.py:11(<lambda>)
                                                                                        15    0.000    0.000  __init__.py:62(<lambda>)
                                                                                        90    0.000    0.000  __init__.py:127(<lambda>)
                                                                                        62    0.000    0.000  __init__.py:139(<lambda>)
                                                                                        53    0.000    0.000  __init__.py:189(<lambda>)
polyoptions.py:49(preprocess)                                                   ->
str.py:91(_print_Dummy)                                                         ->
evalf.py:921(<lambda>)                                                          ->
arpack.py:7(<module>)                                                           ->       1    0.000    0.000  arpack.py:288(ArpackError)
                                                                                         1    0.000    0.000  arpack.py:297(ArpackNoConvergence)
                                                                                         1    0.000    0.000  arpack.py:315(_ArpackParams)
                                                                                         1    0.000    0.000  arpack.py:386(_SymmetricArpackParams)
                                                                                         1    0.000    0.000  arpack.py:603(_UnsymmetricArpackParams)
                                                                                         1    0.000    0.000  arpack.py:904(SpLuInv)
                                                                                         1    0.000    0.000  arpack.py:924(LuInv)
                                                                                         1    0.000    0.000  arpack.py:938(IterInv)
                                                                                         1    0.000    0.000  arpack.py:968(IterOpInv)
                                                                                         5    0.000    0.000  six.py:184(find_module)
                                                                                         4    0.000    0.000  {method 'copy' of 'dict' objects}
ikfast_IKFastSolver.py:194(GetHandledConditions)                                ->    1070    0.000    0.000  {len}
                                                                                        14    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        14    0.000    0.000  {method 'pop' of 'set' objects}
minpack.py:1(<module>)                                                          ->       2    0.000    0.000  six.py:184(find_module)
ikfast_IKFastSolver.py:99(IKFastSolver)                                         ->       1    0.000    0.000  ikfast_IKFastSolver.py:115(CannotSolveError)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:135(IKFeasibilityError)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:152(JointAxis)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:155(Variable)
                                                                                         1    0.000    0.000  ikfast_IKFastSolver.py:170(DegenerateCases)
                                                                                        13    0.000    0.000  matrices.py:77(__init__)
                                                                                         3    0.000    0.000  matrices.py:2626(eye)
lapack.py:5(<module>)                                                           ->       4    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {hasattr}
polyoptions.py:490(preprocess)                                                  ->
ikfast_AST.py:4(AST)                                                            ->       1    0.000    0.000  ikfast_AST.py:8(SolverBase)
                                                                                         1    0.000    0.000  ikfast_AST.py:16(SolverSolution)
                                                                                         1    0.000    0.000  ikfast_AST.py:120(SolverPolynomialRoots)
                                                                                         1    0.000    0.000  ikfast_AST.py:224(SolverCoeffFunction)
                                                                                         1    0.000    0.000  ikfast_AST.py:308(SolverMatrixInverse)
                                                                                         1    0.000    0.000  ikfast_AST.py:339(SolverConditionedSolution)
                                                                                         1    0.000    0.000  ikfast_AST.py:366(SolverBranchConds)
                                                                                         1    0.000    0.000  ikfast_AST.py:390(SolverCheckZeros)
                                                                                         1    0.000    0.000  ikfast_AST.py:456(SolverFreeParameter)
                                                                                         1    0.000    0.000  ikfast_AST.py:478(SolverRotation)
                                                                                         1    0.000    0.000  ikfast_AST.py:494(SolverFunction)
                                                                                         1    0.000    0.000  ikfast_AST.py:517(SolverStoreSolution)
                                                                                         1    0.000    0.000  ikfast_AST.py:540(SolverSequence)
                                                                                         1    0.000    0.000  ikfast_AST.py:561(SolverBreak)
                                                                                         1    0.000    0.000  ikfast_AST.py:591(SolverIKChainTransform6D)
                                                                                         1    0.000    0.000  ikfast_AST.py:617(SolverIKChainRotation3D)
                                                                                         1    0.000    0.000  ikfast_AST.py:643(SolverIKChainTranslation3D)
                                                                                         1    0.000    0.000  ikfast_AST.py:670(SolverIKChainTranslationXY2D)
                                                                                         1    0.000    0.000  ikfast_AST.py:696(SolverIKChainDirection3D)
                                                                                         1    0.000    0.000  ikfast_AST.py:722(SolverIKChainRay)
                                                                                         1    0.000    0.000  ikfast_AST.py:758(SolverIKChainLookat3D)
                                                                                         1    0.000    0.000  ikfast_AST.py:788(SolverIKChainAxisAngle)
monomialtools.py:1(<module>)                                                    ->       6    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                         6    0.000    0.000  cythonutils.py:8(cythonized)
                                                                                         1    0.000    0.000  monomialtools.py:292(Monomial)
                                                                                         1    0.000    0.000  polyerrors.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
ctx_iv.py:341(_wrap_specfun)                                                    ->     205    0.000    0.000  {setattr}
abc.py:89(<genexpr>)                                                            ->     439    0.000    0.000  {getattr}
optparse.py:1258(_populate_option_list)                                         ->       2    0.000    0.000  optparse.py:1248(_add_help_option)
                                                                                         1    0.000    0.000  optparse.py:1253(_add_version_option)
zipfile.py:501(ZipExtFile)                                                      ->       1    0.000    0.000  re.py:192(compile)
matrices.py:1482(<genexpr>)                                                     ->      18    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                        18    0.000    0.000  {abs}
posixpath.py:120(dirname)                                                       ->     154    0.000    0.000  {len}
                                                                                       154    0.000    0.000  {method 'rfind' of 'str' objects}
                                                                                       154    0.000    0.000  {method 'rstrip' of 'str' objects}
cache.py:50(__cacheit)                                                          ->      42    0.000    0.000  functools.py:17(update_wrapper)
                                                                                        42    0.000    0.000  functools.py:39(wraps)
                                                                                        42    0.000    0.000  {method 'append' of 'list' objects}
gamma_functions.py:1(<module>)                                                  ->       5    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  error_functions.py:1(<module>)
                                                                                         1    0.000    0.000  gamma_functions.py:15(gamma)
                                                                                         1    0.000    0.000  gamma_functions.py:101(lowergamma)
                                                                                         1    0.000    0.000  gamma_functions.py:180(uppergamma)
                                                                                         1    0.000    0.000  gamma_functions.py:273(polygamma)
                                                                                         1    0.000    0.000  gamma_functions.py:400(loggamma)
                                                                                         3    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  zeta_functions.py:1(<module>)
defmatrix.py:1(<module>)                                                        ->       1    0.000    0.000  defmatrix.py:208(matrix)
                                                                                       256    0.000    0.000  {chr}
                                                                                       239    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         2    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         1    0.000    0.000  {range}
_inspect.py:142(formatargspec)                                                  ->      98    0.000    0.000  _inspect.py:133(strseq)
                                                                                         7    0.000    0.000  _inspect.py:144(<lambda>)
                                                                                         5    0.000    0.000  _inspect.py:145(<lambda>)
                                                                                        60    0.000    0.000  _inspect.py:146(<lambda>)
                                                                                        78    0.000    0.000  {len}
                                                                                       110    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        38    0.000    0.000  {method 'join' of 'str' objects}
                                                                                        38    0.000    0.000  {range}
__init__.py:2001(has_metadata)                                                  ->      60    0.000    0.000  genericpath.py:34(isfile)
solvers.py:14(<module>)                                                         ->       1    0.000    0.000  inequalities.py:1(<module>)
                                                                                         1    0.000    0.000  polysys.py:1(<module>)
                                                                                         5    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  symbol.py:127(__new__)
                                                                                         8    0.000    0.000  symbol.py:149(__new__)
boolalg.py:1(<module>)                                                          ->       1    0.000    0.000  boolalg.py:6(Boolean)
                                                                                         1    0.000    0.000  boolalg.py:35(BooleanFunction)
                                                                                         1    0.000    0.000  boolalg.py:44(And)
                                                                                         1    0.000    0.000  boolalg.py:61(Or)
                                                                                         1    0.000    0.000  boolalg.py:71(Xor)
                                                                                         1    0.000    0.000  boolalg.py:86(Not)
                                                                                         1    0.000    0.000  boolalg.py:108(Nand)
                                                                                         1    0.000    0.000  boolalg.py:118(Nor)
                                                                                         1    0.000    0.000  boolalg.py:128(Implies)
                                                                                         1    0.000    0.000  boolalg.py:144(Equivalent)
                                                                                         1    0.000    0.000  boolalg.py:162(ITE)
                                                                                        11    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  six.py:184(find_module)
gettext.py:641(gettext)                                                         ->       4    0.000    0.000  gettext.py:603(dgettext)
polyclasses.py:1087(one)                                                        ->      46    0.000    0.000  polyclasses.py:926(new)
iterative.py:1(<module>)                                                        ->       1    0.000    0.000  interface.py:1(<module>)
                                                                                         4    0.000    0.000  iterative.py:66(set_docstring)
                                                                                         4    0.000    0.000  iterative.py:67(combine)
                                                                                         5    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  utils.py:1(<module>)
optparse.py:1368(parse_args)                                                    ->       3    0.000    0.000  optparse.py:1319(get_default_values)
                                                                                         3    0.000    0.000  optparse.py:1362(_get_args)
                                                                                         3    0.000    0.000  optparse.py:1407(check_values)
                                                                                         3    0.000    0.000  optparse.py:1420(_process_args)
cythonutils.py:8(cythonized)                                                    ->     243    0.000    0.000  Shadow.py:88(locals)
                                                                                       243    0.000    0.000  {method 'split' of 'str' objects}
str.py:353(_print_Rational)                                                     ->
gettext.py:603(dgettext)                                                        ->       4    0.000    0.000  gettext.py:537(translation)
                                                                                         8    0.000    0.000  {method 'get' of 'dict' objects}
ctx_mp_python.py:1007(_wrap_specfun)                                            ->     205    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                       205    0.000    0.000  {setattr}
function_base.py:1(<module>)                                                    ->       1    0.000    0.000  function_base.py:2047(vectorize)
                                                                                         1    0.000    0.000  twodim_base.py:3(<module>)
                                                                                         1    0.000    0.000  utils.py:117(deprecate)
ikfast_IKFastSolver.py:183(AddCases)                                            ->      71    0.000    0.000  ikfast_IKFastSolver.py:200(CheckCases)
                                                                                        71    0.000    0.000  {method 'append' of 'list' objects}
sre_parse.py:236(_class_escape)                                                 ->      66    0.000    0.000  sre_parse.py:212(get)
                                                                                       145    0.000    0.000  {len}
                                                                                       260    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                        50    0.000    0.000  {ord}
polytools.py:437(get_domain)                                                    ->
relational.py:139(lhs)                                                          ->
ikfast_IKFastSolver.py:123(__str__)                                             ->      46    0.000    0.000  ikfast_IKFastSolver.py:120(__unicode__)
                                                                                        46    0.000    0.000  {method 'encode' of 'unicode' objects}
__init__.py:2483(<lambda>)                                                      ->     174    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                       180    0.000    0.000  {method 'lower' of 'unicode' objects}
                                                                                       174    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                       180    0.000    0.000  {method 'startswith' of 'unicode' objects}
version.py:254(<genexpr>)                                                       ->
densebasic.py:35(poly_TC)                                                       ->
logic.py:259(flatten)                                                           ->     207    0.000    0.000  {isinstance}
                                                                                       191    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        16    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                       300    0.000    0.000  {method 'pop' of 'list' objects}
gettext.py:537(translation)                                                     ->       4    0.000    0.000  gettext.py:497(find)
__init__.py:1778(MemoizedZipManifests)                                          ->       1    0.000    0.000  collections.py:305(namedtuple)
ellipse.py:8(<module>)                                                          ->       1    0.000    0.000  ellipse.py:22(Ellipse)
                                                                                         1    0.000    0.000  ellipse.py:884(Circle)
                                                                                         1    0.000    0.000  polygon.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
numerictypes.py:301(_add_aliases)                                               ->      36    0.000    0.000  numerictypes.py:127(english_lower)
                                                                                        14    0.000    0.000  numerictypes.py:181(english_capitalize)
                                                                                        26    0.000    0.000  numerictypes.py:229(bitname)
                                                                                        36    0.000    0.000  {isinstance}
                                                                                         3    0.000    0.000  {method 'keys' of 'dict' objects}
gettext.py:497(find)                                                            ->      16    0.000    0.000  UserDict.py:91(get)
                                                                                        16    0.000    0.000  genericpath.py:23(exists)
                                                                                         8    0.000    0.000  gettext.py:205(_expand_lang)
                                                                                        16    0.000    0.000  posixpath.py:61(join)
                                                                                        24    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         4    0.000    0.000  {method 'split' of 'str' objects}
ctx_iv.py:296(_init_builtins)                                                   ->       8    0.000    0.000  ctx_iv.py:40(__new__)
                                                                                         2    0.000    0.000  ctx_iv.py:126(__neg__)
                                                                                         2    0.000    0.000  ctx_iv.py:134(__new__)
                                                                                        22    0.000    0.000  ctx_iv.py:265(__new__)
                                                                                        20    0.000    0.000  ctx_iv.py:327(_wrap_mpi_function)
six.py:184(find_module)                                                         ->
ctx_iv.py:379(_mpq)                                                             ->      68    0.000    0.000  ctx_iv.py:366(<lambda>)
                                                                                        34    0.000    0.000  ctx_iv.py:369(make_mpf)
                                                                                        68    0.000    0.000  libmpf.py:465(from_rational)
multinomial.py:1(binomial_coefficients)                                         ->
libmpc.py:105(mpc_pos)                                                          ->     152    0.000    0.000  libmpf.py:627(mpf_pos)
test_group.py:17(<module>)                                                      ->       1    0.000    0.000  case.py:51(_id)
                                                                                         1    0.000    0.000  case.py:58(decorator)
                                                                                         2    0.000    0.000  case.py:70(skipIf)
                                                                                         1    0.000    0.000  test_group.py:34(BaseGroup)
                                                                                         1    0.000    0.000  test_group.py:43(TestRepr)
                                                                                         1    0.000    0.000  test_group.py:56(TestCreate)
                                                                                         1    0.000    0.000  test_group.py:99(TestDatasetAssignment)
                                                                                         1    0.000    0.000  test_group.py:112(TestDtypeAssignment)
                                                                                         1    0.000    0.000  test_group.py:125(TestRequire)
                                                                                         1    0.000    0.000  test_group.py:149(TestDelete)
                                                                                         1    0.000    0.000  test_group.py:185(TestOpen)
                                                                                         1    0.000    0.000  test_group.py:242(TestRepr)
                                                                                         1    0.000    0.000  test_group.py:255(BaseMapping)
                                                                                         1    0.000    0.000  test_group.py:272(TestLen)
                                                                                         1    0.000    0.000  test_group.py:290(TestContains)
                                                                                         1    0.000    0.000  test_group.py:364(TestIter)
                                                                                         1    0.000    0.000  test_group.py:384(TestPy2Dict)
                                                                                         1    0.000    0.000  test_group.py:421(TestPy3Dict)
                                                                                         1    0.000    0.000  test_group.py:448(TestAdditionalMappingFuncs)
                                                                                         1    0.000    0.000  test_group.py:533(TestGet)
                                                                                         1    0.000    0.000  test_group.py:603(TestVisit)
                                                                                         1    0.000    0.000  test_group.py:641(TestSoftLinks)
                                                                                         1    0.000    0.000  test_group.py:671(TestExternalLinks)
                                                                                         1    0.000    0.000  test_group.py:734(TestExtLinkBugs)
                                                                                         1    0.000    0.000  test_group.py:772(TestCopy)
                                                                                         1    0.000    0.000  test_group.py:965(TestMove)
                                                                                         1    0.000    0.000  test_group.py:999(TestMutableMapping)
ikfast_AST.py:80(end)                                                           ->     168    0.000    0.000  ikfast_generator_cpp.py:1261(endSolution)
posixpath.py:44(normcase)                                                       ->
polyclasses.py:651(primitive)                                                   ->       2    0.000    0.000  densetools.py:665(dmp_ground_primitive)
                                                                                         2    0.000    0.000  polyclasses.py:197(per)
polyoptions.py:333(default)                                                     ->     108    0.000    0.000  monomialtools.py:105(monomial_key)
logic.py:293(_eval_propagate_not)                                               ->      21    0.000    0.000  logic.py:195(__new__)
                                                                                        42    0.000    0.000  logic.py:347(__new__)
fractionfield.py:102(from_PolynomialRing)                                       ->       6    0.000    0.000  domain.py:312(__eq__)
                                                                                         6    0.000    0.000  fractionfield.py:38(__call__)
densebasic.py:829(dmp_negative_p)                                               ->      52    0.000    0.000  densebasic.py:58(dmp_ground_LC)
                                                                                        52    0.000    0.000  domain.py:387(is_negative)
genericpath.py:34(isfile)                                                       ->      61    0.000    0.000  stat.py:49(S_ISREG)
                                                                                        63    0.000    0.000  {posix.stat}
dis.py:1(<module>)                                                              ->       1    0.000    0.000  opcode.py:5(<module>)
main.py:1(<module>)                                                             ->       1    0.000    0.000  main.py:63(TestProgram)
                                                                                         1    0.000    0.000  runner.py:1(<module>)
facts.py:55(list_populate)                                                      ->     705    0.000    0.000  {method 'append' of 'list' objects}
{method 'format' of 'str' objects}                                              ->
matrices.py:331(__array__)                                                      ->       7    0.000    0.000  matrices.py:3193(matrix2numpy)
errors.py:9(<module>)                                                           ->       1    0.000    0.000  errors.py:13(DistutilsError)
                                                                                         1    0.000    0.000  errors.py:16(DistutilsModuleError)
                                                                                         1    0.000    0.000  errors.py:20(DistutilsClassError)
                                                                                         1    0.000    0.000  errors.py:26(DistutilsGetoptError)
                                                                                         1    0.000    0.000  errors.py:29(DistutilsArgError)
                                                                                         1    0.000    0.000  errors.py:33(DistutilsFileError)
                                                                                         1    0.000    0.000  errors.py:38(DistutilsOptionError)
                                                                                         1    0.000    0.000  errors.py:46(DistutilsSetupError)
                                                                                         1    0.000    0.000  errors.py:50(DistutilsPlatformError)
                                                                                         1    0.000    0.000  errors.py:55(DistutilsExecError)
                                                                                         1    0.000    0.000  errors.py:59(DistutilsInternalError)
                                                                                         1    0.000    0.000  errors.py:63(DistutilsTemplateError)
                                                                                         1    0.000    0.000  errors.py:66(DistutilsByteCompileError)
                                                                                         1    0.000    0.000  errors.py:70(CCompilerError)
                                                                                         1    0.000    0.000  errors.py:73(PreprocessError)
                                                                                         1    0.000    0.000  errors.py:76(CompileError)
                                                                                         1    0.000    0.000  errors.py:79(LibError)
                                                                                         1    0.000    0.000  errors.py:83(LinkError)
                                                                                         1    0.000    0.000  errors.py:87(UnknownFileError)
libmpf.py:880(python_mpf_mul_int)                                               ->      55    0.000    0.000  libmpf.py:153(_normalize)
codecs.py:311(decode)                                                           ->      60    0.000    0.000  {_codecs.utf_8_decode}
inversekinematics.py:1212(getcompiler)                                          ->       1    0.000    0.000  ccompiler.py:247(add_library)
                                                                                         1    0.000    0.000  ccompiler.py:963(new_compiler)
                                                                                         2    0.000    0.000  {method 'append' of 'list' objects}
zipfile.py:420(_ZipDecrypter)                                                   ->       1    0.000    0.000  zipfile.py:433(_GenerateCRCTable)
ctypeslib.py:51(<module>)                                                       ->       1    0.000    0.000  _internal.py:200(_getintp_ctype)
                                                                                         1    0.000    0.000  ctypeslib.py:177(_ndptr)
                                                                                        12    0.000    0.000  ctypeslib.py:330(prep_simple)
                                                                                         1    0.000    0.000  utils.py:117(deprecate)
                                                                                        12    0.000    0.000  {_ctypes.sizeof}
sre_compile.py:411(_mk_bitmap)                                                  ->      49    0.000    0.000  {len}
                                                                                        49    0.000    0.000  {method 'translate' of 'str' objects}
                                                                                        49    0.000    0.000  {range}
integerring.py:20(get_field)                                                    ->
matrices.py:3193(matrix2numpy)                                                  ->     112    0.000    0.000  matrices.py:227(__getitem__)
                                                                                         7    0.000    0.000  matrices.py:382(shape)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         7    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                        35    0.000    0.000  {range}
zipfile.py:433(_GenerateCRCTable)                                               ->     257    0.000    0.000  {range}
optparse.py:1319(get_default_values)                                            ->       2    0.000    0.000  optparse.py:756(get_opt_string)
                                                                                         2    0.000    0.000  optparse.py:765(check_value)
                                                                                        72    0.000    0.000  optparse.py:833(isbasestring)
                                                                                         3    0.000    0.000  optparse.py:838(__init__)
                                                                                         3    0.000    0.000  optparse.py:1313(_get_all_options)
                                                                                         3    0.000    0.000  {method 'copy' of 'dict' objects}
                                                                                        72    0.000    0.000  {method 'get' of 'dict' objects}
function.py:88(__new__)                                                         ->      14    0.000    0.000  basic.py:82(__new__)
                                                                                        14    0.000    0.000  boolalg.py:93(eval)
                                                                                         4    0.000    0.000  boolalg.py:133(eval)
                                                                                         9    0.000    0.000  boolalg.py:149(eval)
                                                                                        27    0.000    0.000  {map}
                                                                                        27    0.000    0.000  {method 'pop' of 'dict' objects}
ikfast_AST.py:109(getEquationsUsed)                                             ->
stat.py:55(S_ISLNK)                                                             ->     622    0.000    0.000  stat.py:24(S_IFMT)
factorials.py:1(<module>)                                                       ->       7    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  factorials.py:7(CombinatorialFunction)
                                                                                         1    0.000    0.000  factorials.py:14(factorial)
                                                                                         1    0.000    0.000  factorials.py:149(MultiFactorial)
                                                                                         1    0.000    0.000  factorials.py:152(factorial2)
                                                                                         1    0.000    0.000  factorials.py:192(RisingFactorial)
                                                                                         1    0.000    0.000  factorials.py:255(FallingFactorial)
                                                                                         1    0.000    0.000  factorials.py:324(binomial)
                                                                                         8    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                        12    0.000    0.000  functions.py:84(defun)
                                                                                         2    0.000    0.000  six.py:184(find_module)
nosetester.py:170(__init__)                                                     ->      37    0.000    0.000  posixpath.py:120(dirname)
                                                                                        74    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                        37    0.000    0.000  {sys._getframe}
_inspect.py:98(getargspec)                                                      ->      43    0.000    0.000  _inspect.py:15(ismethod)
                                                                                        43    0.000    0.000  _inspect.py:28(isfunction)
                                                                                        38    0.000    0.000  _inspect.py:67(getargs)
libintmath.py:341(ifac)                                                         ->     149    0.000    0.000  {len}
                                                                                       151    0.000    0.000  {method 'get' of 'dict' objects}
test_attrs.py:16(<module>)                                                      ->       1    0.000    0.000  common.py:10(<module>)
                                                                                         1    0.000    0.000  highlevel.py:17(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  test_attrs.py:32(BaseAttrs)
                                                                                         1    0.000    0.000  test_attrs.py:42(TestAccess)
                                                                                         1    0.000    0.000  test_attrs.py:79(TestDelete)
                                                                                         1    0.000    0.000  test_attrs.py:98(TestUnicode)
                                                                                         1    0.000    0.000  test_attrs.py:125(TestCreate)
                                                                                         1    0.000    0.000  test_attrs.py:144(TestMutableMapping)
                                                                                         1    0.000    0.000  test_attrs.py:162(TestVlen)
_weakrefset.py:36(__init__)                                                     ->
numbers.py:8(<module>)                                                          ->       5    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  memoization.py:1(<module>)
                                                                                         1    0.000    0.000  numbers.py:33(fibonacci)
                                                                                         1    0.000    0.000  numbers.py:91(lucas)
                                                                                         1    0.000    0.000  numbers.py:131(bernoulli)
                                                                                         1    0.000    0.000  numbers.py:272(bell)
                                                                                         1    0.000    0.000  numbers.py:363(harmonic)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  symbol.py:35(__new__)
polynomialring.py:175(gcd)                                                      ->       6    0.000    0.000  polyclasses.py:613(gcd)
misc.py:1(<module>)                                                             ->       2    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {getattr}
bsr.py:8(<module>)                                                              ->       1    0.000    0.000  bsr.py:10(swig_import_helper)
facts.py:301(split_rules_tt_tf_ft_ff)                                           ->     257    0.000    0.000  facts.py:55(list_populate)
                                                                                        76    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         2    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                       333    0.000    0.000  {method 'setdefault' of 'dict' objects}
{method 'find' of 'bytearray' objects}                                          ->
polyclasses.py:613(gcd)                                                         ->       6    0.000    0.000  euclidtools.py:1580(dmp_gcd)
                                                                                         6    0.000    0.000  polyclasses.py:171(unify)
                                                                                         6    0.000    0.000  polyclasses.py:197(per)
hyperexpand.py:15(<module>)                                                     ->       1    0.000    0.000  hyperexpand.py:197(Mod1)
                                                                                         1    0.000    0.000  hyperexpand.py:227(IndexPair)
                                                                                         1    0.000    0.000  hyperexpand.py:367(IndexQuadruple)
                                                                                         1    0.000    0.000  hyperexpand.py:422(Formula)
                                                                                         1    0.000    0.000  hyperexpand.py:648(FormulaCollection)
                                                                                         1    0.000    0.000  hyperexpand.py:715(Operator)
                                                                                         1    0.000    0.000  hyperexpand.py:761(MultOperator)
                                                                                         1    0.000    0.000  hyperexpand.py:767(ShiftA)
                                                                                         1    0.000    0.000  hyperexpand.py:779(ShiftB)
                                                                                         1    0.000    0.000  hyperexpand.py:791(UnShiftA)
                                                                                         1    0.000    0.000  hyperexpand.py:835(UnShiftB)
                                                                                         1    0.000    0.000  hyperexpand.py:881(ReduceOrder)
                                                                                         2    0.000    0.000  symbol.py:127(__new__)
indexed.py:88(<module>)                                                         ->       3    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  indexed.py:111(IndexException)
                                                                                         1    0.000    0.000  indexed.py:114(IndexedBase)
                                                                                         1    0.000    0.000  indexed.py:211(Indexed)
                                                                                         1    0.000    0.000  indexed.py:299(Idx)
                                                                                         1    0.000    0.000  six.py:184(find_module)
libelefun.py:1011(exponential_series)                                           ->       5    0.000    0.000  libintmath.py:83(python_bitcount)
                                                                                         5    0.000    0.000  libintmath.py:223(isqrt_fast_python)
                                                                                         5    0.000    0.000  {abs}
                                                                                        10    0.000    0.000  {max}
libelefun.py:10(<module>)                                                       ->      14    0.000    0.000  libelefun.py:85(constant_memo)
                                                                                        16    0.000    0.000  libelefun.py:106(def_mpf_constant)
                                                                                         2    0.000    0.000  libintmath.py:83(python_bitcount)
                                                                                        12    0.000    0.000  {min}
extras.py:10(<module>)                                                          ->       2    0.000    0.000  core.py:94(doc_note)
                                                                                         1    0.000    0.000  extras.py:215(_fromnxfunction)
                                                                                         9    0.000    0.000  extras.py:232(__init__)
                                                                                         1    0.000    0.000  extras.py:1332(MAxisConcatenator)
                                                                                         1    0.000    0.000  extras.py:1398(mr_class)
                                                                                         1    0.000    0.000  extras.py:1414(__init__)
                                                                                         1    0.000    0.000  {method 'find' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'rstrip' of 'str' objects}
polycontext.py:1(<module>)                                                      ->       1    0.000    0.000  polycontext.py:18(Context)
umfpack.py:6(<module>)                                                          ->       5    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  umfpack.py:233(Struct)
                                                                                         1    0.000    0.000  umfpack.py:254(UmfpackContext)
logic.py:8(<module>)                                                            ->       1    0.000    0.000  compatibility.py:4(<module>)
                                                                                         1    0.000    0.000  logic.py:74(Logic)
                                                                                         1    0.000    0.000  logic.py:191(AndOr_Base)
                                                                                         1    0.000    0.000  logic.py:287(And)
                                                                                         1    0.000    0.000  logic.py:332(Or)
                                                                                         1    0.000    0.000  logic.py:342(Not)
                                                                                         2    0.000    0.000  six.py:184(find_module)
polyerrors.py:1(<module>)                                                       ->       1    0.000    0.000  polyerrors.py:3(BasePolynomialError)
                                                                                         1    0.000    0.000  polyerrors.py:9(ExactQuotientFailed)
                                                                                         1    0.000    0.000  polyerrors.py:25(OperationNotSupported)
                                                                                         1    0.000    0.000  polyerrors.py:34(HeuristicGCDFailed)
                                                                                         1    0.000    0.000  polyerrors.py:37(HomomorphismFailed)
                                                                                         1    0.000    0.000  polyerrors.py:40(IsomorphismFailed)
                                                                                         1    0.000    0.000  polyerrors.py:43(ExtraneousFactors)
                                                                                         1    0.000    0.000  polyerrors.py:46(EvaluationFailed)
                                                                                         1    0.000    0.000  polyerrors.py:49(RefinementFailed)
                                                                                         1    0.000    0.000  polyerrors.py:52(CoercionFailed)
                                                                                         1    0.000    0.000  polyerrors.py:55(NotInvertible)
                                                                                         1    0.000    0.000  polyerrors.py:58(NotReversible)
                                                                                         1    0.000    0.000  polyerrors.py:61(NotAlgebraic)
                                                                                         1    0.000    0.000  polyerrors.py:64(DomainError)
                                                                                         1    0.000    0.000  polyerrors.py:67(PolynomialError)
                                                                                         1    0.000    0.000  polyerrors.py:70(UnificationFailed)
                                                                                         1    0.000    0.000  polyerrors.py:73(GeneratorsNeeded)
                                                                                         1    0.000    0.000  polyerrors.py:76(ComputationFailed)
                                                                                         1    0.000    0.000  polyerrors.py:86(GeneratorsError)
                                                                                         1    0.000    0.000  polyerrors.py:89(UnivariatePolynomialError)
                                                                                         1    0.000    0.000  polyerrors.py:92(MultivariatePolynomialError)
                                                                                         1    0.000    0.000  polyerrors.py:95(PolificationFailed)
                                                                                         1    0.000    0.000  polyerrors.py:116(OptionError)
                                                                                         1    0.000    0.000  polyerrors.py:119(FlagError)
matrices.py:446(__div__)                                                        ->       6    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                         6    0.000    0.000  matrices.py:407(__mul__)
decorators.py:50(deco)                                                          ->      41    0.000    0.000  decorators.py:55(__sympifyit)
polyclasses.py:1071(half_per)                                                   ->     116    0.000    0.000  polyclasses.py:146(__init__)
visibilitymodel.py:66(<module>)                                                 ->       1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
                                                                                         1    0.000    0.000  visibilitymodel.py:90(VisibilityModel)
                                                                                         1    0.000    0.000  {method 'split' of 'str' objects}
quoprimime.py:27(<module>)                                                      ->       2    0.000    0.000  re.py:192(compile)
                                                                                         1    0.000    0.000  six.py:184(find_module)
numbers.py:822(factors)                                                         ->      18    0.000    0.000  factor_.py:726(factorint)
                                                                                         9    0.000    0.000  {len}
                                                                                         9    0.000    0.000  {method 'copy' of 'dict' objects}
                                                                                         9    0.000    0.000  {method 'items' of 'dict' objects}
sre_parse.py:189(__init__)                                                      ->     100    0.000    0.000  sre_parse.py:193(__next)
inversekinematics.py:640(getstatsfilename)                                      ->       3    0.000    0.000  posixpath.py:61(join)
                                                                                         4    0.000    0.000  {len}
                                                                                         3    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         6    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         6    0.000    0.000  {sorted}
__init__.py:2843(DistInfoDistribution)                                          ->       1    0.000    0.000  re.py:192(compile)
test_h5.py:10(<module>)                                                         ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  test_h5.py:23(TestH5)
{h5py._objects.with_phil}                                                       ->      63    0.000    0.000  functools.py:17(update_wrapper)
linalg.py:458(inv)                                                              ->       1    0.000    0.000  linalg.py:101(get_linalg_error_extobj)
                                                                                         1    0.000    0.000  linalg.py:106(_makearray)
                                                                                         1    0.000    0.000  linalg.py:111(isComplexType)
                                                                                         1    0.000    0.000  linalg.py:139(_commonType)
                                                                                         1    0.000    0.000  linalg.py:198(_assertRankAtLeast2)
                                                                                         1    0.000    0.000  linalg.py:209(_assertNdSquareness)
                                                                                         1    0.000    0.000  {method '__array_prepare__' of 'numpy.ndarray' objects}
                                                                                         1    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
ctx_mp_python.py:348(_mpf_)                                                     ->     110    0.000    0.000  ctx_mp.py:108(<lambda>)
urllib.py:1217(<genexpr>)                                                       ->     484    0.000    0.000  {chr}
stat.py:40(S_ISDIR)                                                             ->     288    0.000    0.000  stat.py:24(S_IFMT)
collections.py:349(<genexpr>)                                                   ->     608    0.000    0.000  {method 'isalnum' of 'str' objects}
functions.py:1(<module>)                                                        ->       2    0.000    0.000  functions.py:3(SpecialFunctions)
                                                                                        40    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                        36    0.000    0.000  functions.py:84(defun)
                                                                                         2    0.000    0.000  six.py:184(find_module)
evalf.py:606(evalf_atan)                                                        ->       2    0.000    0.000  basic.py:647(args)
                                                                                         2    0.000    0.000  evalf.py:953(evalf)
                                                                                         2    0.000    0.000  libelefun.py:842(mpf_atan)
decorators.py:55(__sympifyit)                                                   ->      41    0.000    0.000  functools.py:17(update_wrapper)
                                                                                        41    0.000    0.000  functools.py:39(wraps)
urlparse.py:332(<genexpr>)                                                      ->     484    0.000    0.000  {chr}
miscellaneous.py:1(<module>)                                                    ->       3    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  miscellaneous.py:9(IdentityFunction)
                                                                                         1    0.000    0.000  miscellaneous.py:38(MinMaxBase)
                                                                                         1    0.000    0.000  miscellaneous.py:160(Max)
                                                                                         1    0.000    0.000  miscellaneous.py:263(Min)
                                                                                         1    0.000    0.000  singleton.py:51(__init__)
logic.py:11(fuzzy_bool)                                                         ->
ikfast_AST.py:400(__init__)                                                     ->
doctest.py:1106(DocTestRunner)                                                  ->       1    0.000    0.000  re.py:192(compile)
visualization.py:3(<module>)                                                    ->       1    0.000    0.000  colorsys.py:17(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         2    0.000    0.000  visualization.py:9(VisualizationMethods)
__init__.py:74(<module>)                                                        ->       1    0.000    0.000  __config__.py:3(<module>)
                                                                                         2    0.000    0.000  nosetester.py:170(__init__)
                                                                                         4    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  version.py:3(<module>)
                                                                                         1    0.000    0.000  {method 'remove' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'split' of 'str' objects}
sre_parse.py:74(opengroup)                                                      ->     219    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        71    0.000    0.000  {method 'get' of 'dict' objects}
limits.py:1(<module>)                                                           ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  gruntz.py:117(<module>)
                                                                                         1    0.000    0.000  limits.py:220(Limit)
                                                                                         1    0.000    0.000  six.py:184(find_module)
nosetester.py:511(_numpy_tester)                                                ->      19    0.000    0.000  nosetester.py:170(__init__)
                                                                                        19    0.000    0.000  {hasattr}
Grasper.py:11(<module>)                                                         ->       1    0.000    0.000  Grasper.py:25(Grasper)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
expr.py:1863(_eval_expand_trig)                                                 ->
sre_compile.py:101(fixup)                                                       ->     578    0.000    0.000  {_sre.getlower}
add.py:187(class_key)                                                           ->
numbers.py:1423(_eval_power)                                                    ->      11    0.000    0.000  assumptions.py:365(getit)
                                                                                         2    0.000    0.000  {isinstance}
__init__.py:262(_reset_cache)                                                   ->       1    0.000    0.000  __init__.py:75(CFUNCTYPE)
                                                                                         2    0.000    0.000  {_ctypes.POINTER}
                                                                                         2    0.000    0.000  {method 'clear' of 'dict' objects}
{method 'splitlines' of 'unicode' objects}                                      ->
numbers.py:1018(__abs__)                                                        ->      23    0.000    0.000  numbers.py:989(__new__)
misc.py:127(addOptions)                                                         ->       2    0.000    0.000  UserDict.py:91(get)
                                                                                        17    0.000    0.000  optparse.py:1008(add_option)
                                                                                         2    0.000    0.000  optparse.py:1091(__init__)
                                                                                         2    0.000    0.000  optparse.py:1336(add_option_group)
                                                                                         2    0.000    0.000  six.py:184(find_module)
                                                                                         2    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                         2    0.000    0.000  {method 'join' of 'str' objects}
numeric.py:365(extend_all)                                                      ->       3    0.000    0.000  {getattr}
                                                                                       243    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                       119    0.000    0.000  {method 'startswith' of 'str' objects}
{_codecs.utf_8_decode}                                                          ->
densearith.py:1491(dmp_ff_div)                                                  ->      64    0.000    0.000  densebasic.py:148(dmp_degree)
                                                                                        32    0.000    0.000  densebasic.py:677(dmp_zero)
sre_parse.py:227(isname)                                                        ->     372    0.000    0.000  sre_parse.py:221(isident)
                                                                                         4    0.000    0.000  sre_parse.py:224(isdigit)
ctx_iv.py:385(convert)                                                          ->      16    0.000    0.000  ctx_iv.py:28(convert_mpf_)
                                                                                        20    0.000    0.000  ctx_iv.py:366(<lambda>)
                                                                                        12    0.000    0.000  ctx_iv.py:369(make_mpf)
                                                                                         8    0.000    0.000  libmpf.py:605(mpf_le)
                                                                                         4    0.000    0.000  libmpi.py:454(mpi_from_str)
                                                                                        18    0.000    0.000  {hasattr}
                                                                                        24    0.000    0.000  {isinstance}
ikfast_IKFastSolver.py:243(_CheckPreemptFn)                                     ->
ssl.py:115(_import_symbols)                                                     ->       5    0.000    0.000  {dir}
                                                                                        56    0.000    0.000  {getattr}
                                                                                        56    0.000    0.000  {globals}
                                                                                       445    0.000    0.000  {method 'startswith' of 'str' objects}
optparse.py:610(_set_attrs)                                                     ->     540    0.000    0.000  {setattr}
decimal.py:986(as_tuple)                                                        ->      32    0.000    0.000  {map}
factor_.py:726(factorint)                                                       ->      18    0.000    0.000  factor_.py:626(_factorint_small)
                                                                                        76    0.000    0.000  {isinstance}
                                                                                        18    0.000    0.000  {min}
version.py:228(LooseVersion)                                                    ->       1    0.000    0.000  re.py:192(compile)
kinematicreachability.py:49(<module>)                                           ->       1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  kinematicreachability.py:77(ReachabilityModel)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {method 'split' of 'str' objects}
simplify.py:1(<module>)                                                         ->       1    0.000    0.000  cse_main.py:2(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
test_h5f.py:10(<module>)                                                        ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  test_h5f.py:23(TestFileID)
                                                                                         1    0.000    0.000  test_h5f.py:41(TestCacheConfig)
{dir}                                                                           ->
six.py:689(exec_)                                                               ->       1    0.000    0.000  {sys._getframe}
polyclasses.py:1091(numer)                                                      ->      58    0.000    0.000  polyclasses.py:1071(half_per)
test_h5p.py:10(<module>)                                                        ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  test_h5p.py:19(TestLibver)
                                                                                         1    0.000    0.000  test_h5p.py:33(TestDA)
                                                                                         1    0.000    0.000  test_h5p.py:48(TestFA)
                                                                                         1    0.000    0.000  test_h5p.py:70(TestPL)
ikfast_AST.py:415(end)                                                          ->     123    0.000    0.000  ikfast_generator_cpp.py:1649(endCheckZeros)
grasping.py:150(<module>)                                                       ->       1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  grasping.py:194(GraspingModel)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {method 'split' of 'str' objects}
numbers.py:370(_eval_power)                                                     ->       1    0.000    0.000  libelefun.py:318(mpf_pow)
                                                                                        13    0.000    0.000  libmpf.py:1016(mpf_pow_int)
                                                                                         1    0.000    0.000  numbers.py:158(_as_mpf_op)
                                                                                        14    0.000    0.000  numbers.py:319(_new)
                                                                                        28    0.000    0.000  {isinstance}
{method 'strip' of 'str' objects}                                               ->
bsr.py:10(swig_import_helper)                                                   ->       1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         1    0.000    0.000  {imp.find_module}
                                                                                         1    0.000    0.000  {imp.load_module}
                                                                                         1    0.000    0.000  {method 'close' of 'file' objects}
{method 'values' of 'dict' objects}                                             ->
expr.py:9(Expr)                                                                 ->       1    0.000    0.000  cache.py:50(__cacheit)
                                                                                        14    0.000    0.000  decorators.py:34(_sympifyit)
                                                                                        14    0.000    0.000  decorators.py:50(deco)
                                                                                        10    0.000    0.000  decorators.py:82(call_highest_priority)
                                                                                        10    0.000    0.000  decorators.py:105(priority_decorator)
optparse.py:1248(_add_help_option)                                              ->       2    0.000    0.000  gettext.py:641(gettext)
                                                                                         2    0.000    0.000  optparse.py:1008(add_option)
optparse.py:838(__init__)                                                       ->       3    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                        68    0.000    0.000  {setattr}
fromnumeric.py:1743(sum)                                                        ->      39    0.000    0.000  _methods.py:31(_sum)
                                                                                        39    0.000    0.000  {isinstance}
pkgutil.py:366(get_importer)                                                    ->     133    0.000    0.000  pkgutil.py:173(__init__)
runner.py:1(<module>)                                                           ->       1    0.000    0.000  runner.py:12(_WritelnDecorator)
                                                                                         1    0.000    0.000  runner.py:28(TextTestResult)
                                                                                         1    0.000    0.000  runner.py:119(TextTestRunner)
                                                                                         1    0.000    0.000  signals.py:1(<module>)
numbers.py:1112(__ge__)                                                         ->     166    0.000    0.000  {isinstance}
symbol.py:160(__xnew__)                                                         ->      27    0.000    0.000  symbol.py:56(__new_stage2__)
                                                                                        36    0.000    0.000  sympify.py:23(sympify)
core.py:80(__setattr__)                                                         ->     191    0.000    0.000  {setattr}
ikfast_IKFastSolver.py:173(Clone)                                               ->      55    0.000    0.000  ikfast_IKFastSolver.py:171(__init__)
test_file.py:14(<module>)                                                       ->       1    0.000    0.000  test_file.py:28(TestFileOpen)
                                                                                         1    0.000    0.000  test_file.py:133(TestModes)
                                                                                         1    0.000    0.000  test_file.py:175(TestDrivers)
                                                                                         1    0.000    0.000  test_file.py:260(TestLibver)
                                                                                         1    0.000    0.000  test_file.py:285(TestUserblock)
                                                                                         1    0.000    0.000  test_file.py:377(TestContextManager)
                                                                                         1    0.000    0.000  test_file.py:389(TestUnicode)
                                                                                         1    0.000    0.000  test_file.py:407(TestFileProperty)
                                                                                         1    0.000    0.000  test_file.py:445(TestClose)
                                                                                         1    0.000    0.000  test_file.py:465(TestFlush)
                                                                                         1    0.000    0.000  test_file.py:478(TestRepr)
                                                                                         1    0.000    0.000  test_file.py:491(TestFilename)
                                                                                         1    0.000    0.000  test_file.py:507(TestBackwardsCompat)
                                                                                         1    0.000    0.000  test_file.py:519(TestCloseInvalidatesOpenObjectIDs)
                                                                                         1    0.000    0.000  {h5py.h5.get_config}
{chr}                                                                           ->
libmpf.py:1016(mpf_pow_int)                                                     ->      21    0.000    0.000  libmpf.py:924(mpf_div)
exponential.py:1(<module>)                                                      ->       3    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  exponential.py:22(exp)
                                                                                         1    0.000    0.000  exponential.py:282(log)
                                                                                         1    0.000    0.000  exponential.py:491(LambertW)
ctx_mp.py:95(init_builtins)                                                     ->      14    0.000    0.000  ctx_mp_python.py:334(__new__)
                                                                                         5    0.000    0.000  ctx_mp_python.py:595(make_mpf)
                                                                                         1    0.000    0.000  ctx_mp_python.py:600(make_mpc)
                                                                                        45    0.000    0.000  ctx_mp_python.py:972(_wrap_libmp_function)
                                                                                         5    0.000    0.000  {getattr}
ikfast_AST.py:569(__init__)                                                     ->
{_sre.compile}                                                                  ->
relational.py:143(rhs)                                                          ->
polytools.py:457(get_modulus)                                                   ->      78    0.000    0.000  polytools.py:437(get_domain)
test_h5t.py:10(<module>)                                                        ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  test_h5t.py:21(TestCompound)
numbers.py:1705(__ne__)                                                         ->      41    0.000    0.000  sympify.py:161(_sympify)
{cPickle.dump}                                                                  ->
decomp.py:15(<module>)                                                          ->       1    0.000    0.000  blas.py:6(<module>)
                                                                                         1    0.000    0.000  numerictypes.py:774(__getitem__)
                                                                                         1    0.000    0.000  numerictypes.py:860(<lambda>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
test_objects.py:10(<module>)                                                    ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  test_objects.py:19(TestObjects)
_iotools.py:3(<module>)                                                         ->       1    0.000    0.000  _iotools.py:154(LineSplitter)
                                                                                         1    0.000    0.000  _iotools.py:250(NameValidator)
                                                                                         1    0.000    0.000  _iotools.py:444(ConverterError)
                                                                                         1    0.000    0.000  _iotools.py:452(ConverterLockError)
                                                                                         1    0.000    0.000  _iotools.py:460(ConversionWarning)
                                                                                         1    0.000    0.000  _iotools.py:473(StringConverter)
pythonfinitefield.py:1(<module>)                                                ->       1    0.000    0.000  pythonfinitefield.py:6(PythonFiniteField)
                                                                                         1    0.000    0.000  pythonintegerring.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
relational.py:1(<module>)                                                       ->       5    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  relational.py:103(Relational)
                                                                                         1    0.000    0.000  relational.py:155(Equality)
                                                                                         1    0.000    0.000  relational.py:170(Unequality)
                                                                                         1    0.000    0.000  relational.py:183(StrictInequality)
                                                                                         1    0.000    0.000  relational.py:196(Inequality)
base.py:1(<module>)                                                             ->       1    0.000    0.000  base.py:13(SparseWarning)
                                                                                         1    0.000    0.000  base.py:14(SparseFormatWarning)
                                                                                         1    0.000    0.000  base.py:15(SparseEfficiencyWarning)
                                                                                         1    0.000    0.000  base.py:44(spmatrix)
                                                                                         3    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  sputils.py:2(<module>)
rationalfield.py:18(get_ring)                                                   ->
numerictypes.py:957(_register_types)                                            ->       3    0.000    0.000  abc.py:105(register)
optparse.py:1253(_add_version_option)                                           ->       1    0.000    0.000  gettext.py:641(gettext)
                                                                                         1    0.000    0.000  optparse.py:1008(add_option)
numerictypes.py:229(bitname)                                                    ->      26    0.000    0.000  numerictypes.py:154(english_upper)
                                                                                        21    0.000    0.000  numerictypes.py:216(_evalname)
_polybase.py:8(<module>)                                                        ->       1    0.000    0.000  _polybase.py:19(ABCPolyBase)
                                                                                         1    0.000    0.000  abc.py:86(__new__)
csc.py:8(<module>)                                                              ->       1    0.000    0.000  csc.py:10(swig_import_helper)
rational.py:1(<module>)                                                         ->       2    0.000    0.000  rational.py:24(mpq)
                                                                                        22    0.000    0.000  rational.py:31(__new__)
                                                                                         1    0.000    0.000  six.py:184(find_module)
polytools.py:73(Poly)                                                           ->      17    0.000    0.000  decorators.py:34(_sympifyit)
                                                                                        17    0.000    0.000  decorators.py:50(deco)
inversekinematics.py:416(getDefaultFreeIncrements)                              ->       7    0.000    0.000  fromnumeric.py:1743(sum)
                                                                                         1    0.000    0.000  {method 'append' of 'list' objects}
evalf.py:94(complex_accuracy)                                                   ->
numbers.py:641(_eval_is_positive)                                               ->
stat.py:24(S_IFMT)                                                              ->
piecewise.py:1(<module>)                                                        ->       2    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  piecewise.py:6(ExprCondPair)
                                                                                         1    0.000    0.000  piecewise.py:44(Piecewise)
{method 'get' of 'dictproxy' objects}                                           ->
__init__.py:205(_acquireLock)                                                   ->      29    0.000    0.000  threading.py:147(acquire)
ctx_iv.py:40(__new__)                                                           ->       8    0.000    0.000  ctx_iv.py:385(convert)
__init__.py:12(<module>)                                                        ->       1    0.000    0.000  __init__.py:18(NullHandler)
                                                                                         1    0.000    0.000  __init__.py:51(PercentStyle)
                                                                                         1    0.000    0.000  __init__.py:65(StrFormatStyle)
                                                                                         1    0.000    0.000  __init__.py:73(StringTemplateStyle)
                                                                                         1    0.000    0.000  __init__.py:94(Formatter)
                                                                                         1    0.000    0.000  __init__.py:157(BraceMessage)
                                                                                         1    0.000    0.000  __init__.py:169(DollarMessage)
                                                                                         2    0.000    0.000  six.py:184(find_module)
polytools.py:1003(eject)                                                        ->       2    0.000    0.000  basic.py:374(__eq__)
                                                                                         2    0.000    0.000  polyclasses.py:343(eject)
                                                                                         2    0.000    0.000  polytools.py:100(new)
                                                                                         2    0.000    0.000  simpledomain.py:10(inject)
                                                                                         2    0.000    0.000  {hasattr}
                                                                                         4    0.000    0.000  {len}
polyclasses.py:1095(denom)                                                      ->      58    0.000    0.000  polyclasses.py:1071(half_per)
ctx_mp.py:90(init_builtins)                                                     ->      14    0.000    0.000  ctx_mp_python.py:334(__new__)
                                                                                         5    0.000    0.000  ctx_mp_python.py:595(make_mpf)
                                                                                         1    0.000    0.000  ctx_mp_python.py:600(make_mpc)
                                                                                        45    0.000    0.000  ctx_mp_python.py:972(_wrap_libmp_function)
                                                                                         5    0.000    0.000  {getattr}
polyclasses.py:1293(__nonzero__)                                                ->     106    0.000    0.000  densebasic.py:653(dmp_zero_p)
py3k.py:71(sixu)                                                                ->       1    0.000    0.000  __init__.py:71(search_function)
operations.py:1(<module>)                                                       ->       2    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  operations.py:11(AssocOp)
                                                                                         1    0.000    0.000  operations.py:285(ShortCircuit)
                                                                                         1    0.000    0.000  operations.py:288(LatticeOp)
csc.py:10(swig_import_helper)                                                   ->       1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         1    0.000    0.000  {imp.find_module}
                                                                                         1    0.000    0.000  {imp.load_module}
                                                                                         1    0.000    0.000  {method 'close' of 'file' objects}
point.py:7(<module>)                                                            ->       1    0.000    0.000  entity.py:8(<module>)
                                                                                         1    0.000    0.000  exceptions.py:1(<module>)
                                                                                         1    0.000    0.000  point.py:17(Point)
                                                                                         2    0.000    0.000  six.py:184(find_module)
factor_.py:201(perfect_power)                                                   ->       1    0.000    0.000  factor_.py:135(trailing)
                                                                                         5    0.000    0.000  factor_.py:162(multiplicity)
                                                                                         1    0.000    0.000  factor_.py:201(perfect_power)
                                                                                         1    0.000    0.000  factor_.py:1117(primefactors)
                                                                                        11    0.000    0.000  generate.py:132(nextprime)
                                                                                        18    0.000    0.000  generate.py:211(primerange)
                                                                                         2    0.000    0.000  power.py:12(integer_nthroot)
                                                                                         9    0.000    0.000  {math.log}
                                                                                        11    0.000    0.000  {operator.abs}
sre_parse.py:85(closegroup)                                                     ->     219    0.000    0.000  {method 'remove' of 'list' objects}
numeric.py:1835(array_str)                                                      ->      68    0.000    0.000  arrayprint.py:340(array2string)
version.py:308(_parse_letter_version)                                           ->       2    0.000    0.000  {method 'lower' of 'str' objects}
sets.py:429(Rational)                                                           ->
pretty_symbology.py:10(U)                                                       ->     168    0.000    0.000  {unicodedata.lookup}
test_slicing.py:17(<module>)                                                    ->       1    0.000    0.000  test_slicing.py:31(BaseSlicing)
                                                                                         1    0.000    0.000  test_slicing.py:40(TestSingleElement)
                                                                                         1    0.000    0.000  test_slicing.py:80(TestObjectIndex)
                                                                                         1    0.000    0.000  test_slicing.py:125(TestSimpleSlicing)
                                                                                         1    0.000    0.000  test_slicing.py:144(TestArraySlicing)
                                                                                         1    0.000    0.000  test_slicing.py:225(TestEmptySlicing)
                                                                                         1    0.000    0.000  test_slicing.py:247(TestZeroLengthSlicing)
                                                                                         1    0.000    0.000  test_slicing.py:289(TestFieldNames)
six.py:141(__init__)                                                            ->     166    0.000    0.000  six.py:88(__init__)
extras.py:232(__init__)                                                         ->       9    0.000    0.000  extras.py:236(getdoc)
calendar.py:6(<module>)                                                         ->       1    0.000    0.000  calendar.py:21(IllegalMonthError)
                                                                                         1    0.000    0.000  calendar.py:28(IllegalWeekdayError)
                                                                                         1    0.000    0.000  calendar.py:47(_localized_month)
                                                                                         2    0.000    0.000  calendar.py:52(__init__)
                                                                                         1    0.000    0.000  calendar.py:66(_localized_day)
                                                                                         2    0.000    0.000  calendar.py:71(__init__)
                                                                                         1    0.000    0.000  calendar.py:126(Calendar)
                                                                                         1    0.000    0.000  calendar.py:132(__init__)
                                                                                         1    0.000    0.000  calendar.py:260(TextCalendar)
                                                                                         1    0.000    0.000  calendar.py:377(HTMLCalendar)
                                                                                         1    0.000    0.000  calendar.py:489(TimeEncoding)
                                                                                         1    0.000    0.000  calendar.py:502(LocaleTextCalendar)
                                                                                         1    0.000    0.000  calendar.py:537(LocaleHTMLCalendar)
                                                                                         1    0.000    0.000  {method 'toordinal' of 'datetime.date' objects}
                                                                                         1    0.000    0.000  {range}
_inspect.py:67(getargs)                                                         ->      38    0.000    0.000  _inspect.py:43(iscode)
                                                                                        38    0.000    0.000  {range}
ikfast_generator_cpp.py:1169(<lambda>)                                          ->
extras.py:236(getdoc)                                                           ->       9    0.000    0.000  core.py:113(get_object_signature)
                                                                                        18    0.000    0.000  {getattr}
                                                                                         9    0.000    0.000  {method 'join' of 'str' objects}
ikfast_IKFastSolver.py:120(__unicode__)                                         ->
zetazeros.py:16(<module>)                                                       ->       2    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                         4    0.000    0.000  functions.py:84(defun)
{posix.remove}                                                                  ->
__init__.py:71(search_function)                                                 ->       1    0.000    0.000  __init__.py:49(normalize_encoding)
                                                                                         1    0.000    0.000  unicode_escape.py:36(getregentry)
                                                                                         1    0.000    0.000  {__import__}
                                                                                         1    0.000    0.000  {isinstance}
                                                                                         3    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                         1    0.000    0.000  {method 'replace' of 'str' objects}
{eval}                                                                          ->       1    0.000    0.000  <string>:1(<module>)
posixpath.py:52(isabs)                                                          ->     231    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                         2    0.000    0.000  {method 'startswith' of 'unicode' objects}
boolalg.py:15(__or__)                                                           ->       3    0.000    0.000  operations.py:322(__new__)
products.py:1(<module>)                                                         ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  products.py:6(Product)
                                                                                         1    0.000    0.000  six.py:184(find_module)
sre_compile.py:546(isstring)                                                    ->     200    0.000    0.000  {isinstance}
difflib.py:348(find_longest_match)                                              ->      13    0.000    0.000  <string>:8(__new__)
                                                                                         4    0.000    0.000  basic.py:374(__eq__)
                                                                                         8    0.000    0.000  {method '__contains__' of 'set' objects}
                                                                                        22    0.000    0.000  {method 'get' of 'dict' objects}
expr.py:592(arglist)                                                            ->      20    0.000    0.000  assumptions.py:365(getit)
                                                                                        80    0.000    0.000  operations.py:264(make_args)
numbers.py:1508(__gt__)                                                         ->
ikfast_AST.py:582(generate)                                                     ->      55    0.000    0.000  ikfast_generator_cpp.py:1661(generateBreak)
line.py:10(<module>)                                                            ->       1    0.000    0.000  line.py:21(LinearEntity)
                                                                                         1    0.000    0.000  line.py:691(Line)
                                                                                         1    0.000    0.000  line.py:876(Ray)
                                                                                         1    0.000    0.000  line.py:1177(Segment)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  util.py:9(<module>)
ctypeslib.py:330(prep_simple)                                                   ->
linesearch.py:1(<module>)                                                       ->       2    0.000    0.000  six.py:184(find_module)
gettext.py:205(_expand_lang)                                                    ->       8    0.000    0.000  locale.py:365(normalize)
                                                                                        20    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        24    0.000    0.000  {method 'find' of 'str' objects}
                                                                                         8    0.000    0.000  {method 'reverse' of 'list' objects}
                                                                                         8    0.000    0.000  {range}
quadrature.py:1(<module>)                                                       ->       2    0.000    0.000  quadrature.py:5(QuadratureRule)
                                                                                         2    0.000    0.000  quadrature.py:257(TanhSinh)
                                                                                         2    0.000    0.000  quadrature.py:385(GaussLegendre)
                                                                                         2    0.000    0.000  quadrature.py:456(QuadratureMethods)
                                                                                         1    0.000    0.000  six.py:184(find_module)
test_dataset_getitem.py:41(<module>)                                            ->       2    0.000    0.000  case.py:51(_id)
                                                                                         2    0.000    0.000  case.py:78(skipUnless)
                                                                                         1    0.000    0.000  test_dataset_getitem.py:51(TestEmpty)
                                                                                         1    0.000    0.000  test_dataset_getitem.py:106(TestScalarFloat)
                                                                                         1    0.000    0.000  test_dataset_getitem.py:160(TestScalarCompound)
                                                                                         1    0.000    0.000  test_dataset_getitem.py:220(TestScalarArray)
                                                                                         1    0.000    0.000  test_dataset_getitem.py:276(Test1DZeroFloat)
                                                                                         1    0.000    0.000  test_dataset_getitem.py:329(Test1DFloat)
                                                                                         1    0.000    0.000  test_dataset_getitem.py:443(Test2DZeroFloat)
__init__.py:14(<module>)                                                        ->       1    0.000    0.000  __about__.py:14(<module>)
                                                                                         1    0.000    0.000  __init__.py:22(find_module)
                                                                                         1    0.000    0.000  importtools.py:1(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
ikfast_generator_cpp.py:1261(endSolution)                                       ->       2    0.000    0.000  {method 'pop' of 'list' objects}
ikfast_AST.py:537(end)                                                          ->      80    0.000    0.000  ikfast_generator_cpp.py:1754(endStoreSolution)
numbers.py:1918(_eval_power)                                                    ->       1    0.000    0.000  expr.py:70(__neg__)
                                                                                         1    0.000    0.000  numbers.py:1393(__neg__)
                                                                                         4    0.000    0.000  {isinstance}
slsqp.py:6(<module>)                                                            ->       1    0.000    0.000  getlimits.py:94(__new__)
                                                                                         1    0.000    0.000  six.py:184(find_module)
lbfgsb.py:27(<module>)                                                          ->       1    0.000    0.000  six.py:184(find_module)
{_sre.getlower}                                                                 ->
TaskManipulation.py:11(<module>)                                                ->       1    0.000    0.000  TaskManipulation.py:26(TaskManipulation)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
{method 'partition' of 'str' objects}                                           ->
__init__.py:214(_releaseLock)                                                   ->      29    0.000    0.000  threading.py:187(release)
pythonrationaltype.py:48(__hash__)                                              ->     210    0.000    0.000  {hash}
numbers.py:1373(__nonzero__)                                                    ->
facts.py:267(rules_2prereq)                                                     ->     264    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         4    0.000    0.000  {method 'iteritems' of 'dict' objects}
                                                                                       264    0.000    0.000  {method 'setdefault' of 'dict' objects}
assume.py:1(<module>)                                                           ->       1    0.000    0.000  assume.py:5(AssumptionsContext)
                                                                                         1    0.000    0.000  assume.py:34(AppliedPredicate)
                                                                                         1    0.000    0.000  assume.py:86(Predicate)
                                                                                         2    0.000    0.000  core.py:118(__init__)
                                                                                         2    0.000    0.000  six.py:184(find_module)
polytools.py:2605(factor_list)                                                  ->       3    0.000    0.000  polyclasses.py:708(factor_list)
                                                                                         3    0.000    0.000  polytools.py:404(per)
                                                                                         3    0.000    0.000  pythonintegerring.py:23(to_sympy)
                                                                                         3    0.000    0.000  {hasattr}
generate.py:3(<module>)                                                         ->       1    0.000    0.000  generate.py:22(Sieve)
                                                                                         1    0.000    0.000  primetest.py:4(<module>)
                                                                                         5    0.000    0.000  six.py:184(find_module)
{ord}                                                                           ->
{method 'encode' of 'unicode' objects}                                          ->
opcode.py:5(<module>)                                                           ->      96    0.000    0.000  opcode.py:27(def_op)
                                                                                        11    0.000    0.000  opcode.py:31(name_op)
                                                                                         6    0.000    0.000  opcode.py:35(jrel_op)
                                                                                         6    0.000    0.000  opcode.py:39(jabs_op)
                                                                                         8    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {range}
ImagePalette.py:19(<module>)                                                    ->       1    0.000    0.000  ImageColor.py:20(<module>)
                                                                                         1    0.000    0.000  ImagePalette.py:25(ImagePalette)
                                                                                         3    0.000    0.000  six.py:184(find_module)
ikfast_AST.py:106(getPresetCheckForZeros)                                       ->
format.py:149(<module>)                                                         ->       1    0.000    0.000  {len}
expressiondomain.py:1(<module>)                                                 ->       1    0.000    0.000  expressiondomain.py:10(ExpressionDomain)
{method 'startswith' of 'unicode' objects}                                      ->
power.py:12(integer_nthroot)                                                    ->      12    0.000    0.000  libintmath.py:271(sqrtrem_python)
core.py:7777(__init__)                                                          ->       8    0.000    0.000  core.py:7782(getdoc)
                                                                                         8    0.000    0.000  {getattr}
{unicodedata.lookup}                                                            ->
ctx_mp_python.py:127(<lambda>)                                                  ->
_weakrefset.py:26(__exit__)                                                     ->      74    0.000    0.000  _weakrefset.py:52(_commit_removals)
                                                                                        74    0.000    0.000  {method 'remove' of 'set' objects}
__init__.py:5(<module>)                                                         ->       1    0.000    0.000  __init__.py:1(<module>)
                                                                                         1    0.000    0.000  __init__.py:74(LazyImporter)
                                                                                        19    0.000    0.000  __init__.py:75(__init__)
                                                                                         3    0.000    0.000  six.py:184(find_module)
                                                                                        19    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                        26    0.000    0.000  {setattr}
ctx_mp_python.py:618(<lambda>)                                                  ->
hermite.py:59(<module>)                                                         ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  hermite.py:1815(Hermite)
                                                                                         4    0.000    0.000  {numpy.core.multiarray.array}
heapq.py:31(<module>)                                                           ->
libintmath.py:58(python_trailing)                                               ->
hyper.py:1(<module>)                                                            ->       3    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  hyper.py:29(TupleParametersBase)
                                                                                         1    0.000    0.000  hyper.py:38(hyper)
                                                                                         1    0.000    0.000  hyper.py:252(meijerg)
sets.py:3(<module>)                                                             ->       1    0.000    0.000  sets.py:7(AskIntegerHandler)
                                                                                         1    0.000    0.000  sets.py:103(AskRationalHandler)
                                                                                         1    0.000    0.000  sets.py:165(AskIrrationalHandler)
                                                                                         1    0.000    0.000  sets.py:176(AskRealHandler)
                                                                                         1    0.000    0.000  sets.py:283(AskExtendedRealHandler)
                                                                                         1    0.000    0.000  sets.py:304(AskComplexHandler)
                                                                                         1    0.000    0.000  sets.py:342(AskImaginaryHandler)
                                                                                         1    0.000    0.000  sets.py:410(AskAlgebraicHandler)
{method 'replace' of 'str' objects}                                             ->
factor_.py:626(_factorint_small)                                                ->      18    0.000    0.000  factor_.py:135(trailing)
                                                                                        18    0.000    0.000  factor_.py:640(done)
ikfast_AST.py:491(end)                                                          ->      82    0.000    0.000  ikfast_generator_cpp.py:1700(endRotation)
_methods.py:31(_sum)                                                            ->      39    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
polytools.py:4815(_factors_product)                                             ->       2    0.000    0.000  cache.py:74(wrapper)
                                                                                         3    0.000    0.000  decorators.py:72(__sympifyit_wrapper)
                                                                                         3    0.000    0.000  polytools.py:892(as_expr)
polyclasses.py:422(sub)                                                         ->     6/2    0.000    0.000  densearith.py:652(dmp_sub)
                                                                                         6    0.000    0.000  polyclasses.py:171(unify)
                                                                                         6    0.000    0.000  polyclasses.py:197(per)
exponential.py:297(eval)                                                        ->       4    0.000    0.000  basic.py:622(func)
                                                                                         3    0.000    0.000  expr.py:761(as_coefficient)
                                                                                         4    0.000    0.000  sympify.py:23(sympify)
cse_main.py:2(<module>)                                                         ->       1    0.000    0.000  cse_opts.py:3(<module>)
                                                                                         3    0.000    0.000  six.py:184(find_module)
inversekinematics.py:595(<genexpr>)                                             ->      24    0.000    0.000  numeric.py:1835(array_str)
chebyshev.py:87(<module>)                                                       ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  chebyshev.py:2041(Chebyshev)
                                                                                         4    0.000    0.000  {numpy.core.multiarray.array}
polytools.py:2275(lcm)                                                          ->       1    0.000    0.000  polyclasses.py:618(lcm)
                                                                                         1    0.000    0.000  polytools.py:355(_unify)
                                                                                         1    0.000    0.000  polytools.py:393(per)
                                                                                         1    0.000    0.000  {hasattr}
cache.py:1(<module>)                                                            ->       1    0.000    0.000  cache.py:132(MemoizerArg)
                                                                                         1    0.000    0.000  cache.py:174(Memoizer)
                                                                                         1    0.000    0.000  cache.py:272(Memoizer_nocache)
                                                                                         1    0.000    0.000  cache.py:297(__usecache)
                                                                                         1    0.000    0.000  decorators.py:6(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
ctx_iv.py:218(_binary_op)                                                       ->
hermite_e.py:59(<module>)                                                       ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  hermite_e.py:1812(HermiteE)
                                                                                         4    0.000    0.000  {numpy.core.multiarray.array}
legendre.py:83(<module>)                                                        ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  legendre.py:1795(Legendre)
                                                                                         4    0.000    0.000  {numpy.core.multiarray.array}
arrayprint.py:340(array2string)                                                 ->      68    0.000    0.000  {isinstance}
                                                                                        68    0.000    0.000  {method 'item' of 'numpy.ndarray' objects}
numbers.py:469(Rational)                                                        ->       1    0.000    0.000  cache.py:50(__cacheit)
                                                                                         4    0.000    0.000  decorators.py:34(_sympifyit)
                                                                                         4    0.000    0.000  decorators.py:50(deco)
boolalg.py:19(__invert__)                                                       ->       7    0.000    0.000  cache.py:74(wrapper)
dataset.py:173(Dataset)                                                         ->      24    0.000    0.000  {h5py._objects.with_phil}
                                                                                         2    0.000    0.000  {hasattr}
                                                                                         1    0.000    0.000  {method 'setter' of 'property' objects}
__init__.py:1507(basicConfig)                                                   ->       3    0.000    0.000  __init__.py:205(_acquireLock)
                                                                                         3    0.000    0.000  __init__.py:214(_releaseLock)
                                                                                         1    0.000    0.000  __init__.py:391(__init__)
                                                                                         1    0.000    0.000  __init__.py:764(setFormatter)
                                                                                         1    0.000    0.000  __init__.py:827(__init__)
                                                                                         1    0.000    0.000  __init__.py:1139(setLevel)
                                                                                         1    0.000    0.000  __init__.py:1298(addHandler)
                                                                                         3    0.000    0.000  {len}
                                                                                         5    0.000    0.000  {method 'get' of 'dict' objects}
ikfast_AST.py:146(__init__)                                                     ->      11    0.000    0.000  polytools.py:1620(degree)
coo.py:8(<module>)                                                              ->       1    0.000    0.000  coo.py:10(swig_import_helper)
fromnumeric.py:3(<module>)                                                      ->       1    0.000    0.000  _methods.py:5(<module>)
polytools.py:967(inject)                                                        ->       2    0.000    0.000  polyclasses.py:338(inject)
                                                                                         2    0.000    0.000  polytools.py:100(new)
                                                                                         2    0.000    0.000  {hasattr}
laguerre.py:59(<module>)                                                        ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  laguerre.py:1765(Laguerre)
                                                                                         4    0.000    0.000  {numpy.core.multiarray.array}
codecs.py:302(__init__)                                                         ->      60    0.000    0.000  codecs.py:253(__init__)
exprtools.py:1(<module>)                                                        ->       1    0.000    0.000  coreerrors.py:1(<module>)
                                                                                         1    0.000    0.000  exprtools.py:55(Factors)
                                                                                         1    0.000    0.000  exprtools.py:215(Term)
                                                                                         1    0.000    0.000  six.py:184(find_module)
flinalg.py:5(<module>)                                                          ->       1    0.000    0.000  six.py:184(find_module)
integers.py:1(<module>)                                                         ->       3    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  integers.py:11(RoundFunction)
                                                                                         1    0.000    0.000  integers.py:71(floor)
                                                                                         1    0.000    0.000  integers.py:120(ceiling)
python.py:3(<module>)                                                           ->       1    0.000    0.000  python.py:11(PythonPrinter)
                                                                                         1    0.000    0.000  repr.py:6(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
fftpack.py:32(<module>)                                                         ->
optimization.py:1(<module>)                                                     ->       2    0.000    0.000  optimization.py:5(OptimizationMethods)
                                                                                         2    0.000    0.000  optimization.py:13(Newton)
                                                                                         2    0.000    0.000  optimization.py:56(Secant)
                                                                                         2    0.000    0.000  optimization.py:102(MNewton)
                                                                                         2    0.000    0.000  optimization.py:157(Halley)
                                                                                         2    0.000    0.000  optimization.py:211(Muller)
                                                                                         2    0.000    0.000  optimization.py:288(Bisection)
                                                                                         2    0.000    0.000  optimization.py:352(Illinois)
                                                                                         2    0.000    0.000  optimization.py:453(Ridder)
                                                                                         2    0.000    0.000  optimization.py:512(ANewton)
                                                                                         2    0.000    0.000  optimization.py:597(MDNewton)
                                                                                         1    0.000    0.000  six.py:184(find_module)
sre_parse.py:145(__setitem__)                                                   ->
base64.py:3(<module>)                                                           ->     256    0.000    0.000  {chr}
                                                                                         2    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                         1    0.000    0.000  {method 'sort' of 'list' objects}
                                                                                         1    0.000    0.000  {range}
                                                                                         2    0.000    0.000  {strop.maketrans}
math2.py:6(<module>)                                                            ->      30    0.000    0.000  math2.py:27(_mathfun_real)
                                                                                         8    0.000    0.000  math2.py:42(_mathfun)
                                                                                         4    0.000    0.000  math2.py:53(_mathfun_n)
                                                                                         1    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {math.log}
core.py:903(__init__)                                                           ->      54    0.000    0.000  {getattr}
identification.py:4(<module>)                                                   ->       2    0.000    0.000  identification.py:13(IdentificationMethods)
ikfast_IKFastSolver.py:8678(SolvePrismaticHingePairVariables)                   ->       8    0.000    0.000  ikfast_IKFastSolver.py:118(__init__)
                                                                                         8    0.000    0.000  ikfast_IKFastSolver.py:418(IsHinge)
                                                                                        16    0.000    0.000  ikfast_IKFastSolver.py:430(IsPrismatic)
coo.py:10(swig_import_helper)                                                   ->       1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         1    0.000    0.000  {imp.find_module}
                                                                                         1    0.000    0.000  {imp.load_module}
                                                                                         1    0.000    0.000  {method 'close' of 'file' objects}
__init__.py:827(__init__)                                                       ->       4    0.000    0.000  __init__.py:665(__init__)
token.py:1(<module>)                                                            ->       1    0.000    0.000  {globals}
                                                                                         1    0.000    0.000  {method 'items' of 'dict' objects}
errors.py:5(<module>)                                                           ->       1    0.000    0.000  errors.py:9(MessageError)
                                                                                         1    0.000    0.000  errors.py:13(MessageParseError)
                                                                                         1    0.000    0.000  errors.py:17(HeaderParseError)
                                                                                         1    0.000    0.000  errors.py:21(BoundaryError)
                                                                                         1    0.000    0.000  errors.py:25(MultipartConversionError)
                                                                                         1    0.000    0.000  errors.py:29(CharsetError)
                                                                                         1    0.000    0.000  errors.py:35(MessageDefect)
                                                                                         1    0.000    0.000  errors.py:41(NoBoundaryInMultipartDefect)
                                                                                         1    0.000    0.000  errors.py:44(StartBoundaryNotFoundDefect)
                                                                                         1    0.000    0.000  errors.py:47(FirstHeaderLineIsContinuationDefect)
                                                                                         1    0.000    0.000  errors.py:50(MisplacedEnvelopeHeaderDefect)
                                                                                         1    0.000    0.000  errors.py:53(MalformedHeaderDefect)
                                                                                         1    0.000    0.000  errors.py:56(MultipartInvariantViolationDefect)
misc.py:15(<module>)                                                            ->       2    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  misc.py:125(OpenRAVEGlobalArguments)
                                                                                         1    0.000    0.000  misc.py:465(MultiManipIKSolver)
                                                                                         1    0.000    0.000  misc.py:533(SpaceSamplerExtra)
                                                                                         6    0.000    0.000  six.py:184(find_module)
                                                                                         2    0.000    0.000  {method 'split' of 'str' objects}
printer.py:66(<module>)                                                         ->       1    0.000    0.000  printer.py:76(Printer)
                                                                                         1    0.000    0.000  six.py:184(find_module)
{posix.access}                                                                  ->
{method 'iteritems' of 'dictproxy' objects}                                     ->
test_dataset_swmr.py:1(<module>)                                                ->       2    0.000    0.000  case.py:51(_id)
                                                                                         1    0.000    0.000  case.py:58(decorator)
                                                                                         3    0.000    0.000  case.py:78(skipUnless)
                                                                                         1    0.000    0.000  test_dataset_swmr.py:9(TestSwmrNotAvailable)
                                                                                         1    0.000    0.000  test_dataset_swmr.py:45(TestDatasetSwmrRead)
                                                                                         1    0.000    0.000  test_dataset_swmr.py:86(TestDatasetSwmrWrite)
logic.py:83(__new__)                                                            ->      81    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                        81    0.000    0.000  {isinstance}
core.py:7782(getdoc)                                                            ->       8    0.000    0.000  core.py:113(get_object_signature)
                                                                                         8    0.000    0.000  {getattr}
BaseManipulation.py:11(<module>)                                                ->       1    0.000    0.000  BaseManipulation.py:25(BaseManipulation)
                                                                                         1    0.000    0.000  __init__.py:1567(getLogger)
cobyla.py:9(<module>)                                                           ->       1    0.000    0.000  six.py:184(find_module)
collections.py:375(<genexpr>)                                                   ->      66    0.000    0.000  {method 'format' of 'str' objects}
quadrature.py:458(__init__)                                                     ->      12    0.000    0.000  quadrature.py:21(__init__)
{numpy.core.multiarray.empty}                                                   ->
__init__.py:895(__init__)                                                       ->       2    0.000    0.000  __init__.py:827(__init__)
                                                                                         2    0.000    0.000  __init__.py:937(_open)
                                                                                         2    0.000    0.000  posixpath.py:358(abspath)
polyclasses.py:141(DMP)                                                         ->
sympyfinitefield.py:1(<module>)                                                 ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  sympyfinitefield.py:6(SymPyFiniteField)
                                                                                         1    0.000    0.000  sympyintegerring.py:1(<module>)
compressed.py:2(<module>)                                                       ->       1    0.000    0.000  compressed.py:17(_cs_matrix)
                                                                                         1    0.000    0.000  data.py:7(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
inspect.py:803(getargspec)                                                      ->       7    0.000    0.000  inspect.py:67(ismethod)
                                                                                         7    0.000    0.000  inspect.py:142(isfunction)
                                                                                         7    0.000    0.000  inspect.py:743(getargs)
sympyrationalfield.py:1(<module>)                                               ->       1    0.000    0.000  sympyrationalfield.py:14(SymPyRationalField)
functools.py:39(wraps)                                                          ->
polytools.py:1761(LM)                                                           ->       7    0.000    0.000  polytools.py:743(monoms)
dia.py:8(<module>)                                                              ->       1    0.000    0.000  dia.py:10(swig_import_helper)
facts.py:460(rules_beta)                                                        ->       2    0.000    0.000  facts.py:442(split_alpha_beta)
polygon.py:1(<module>)                                                          ->       1    0.000    0.000  polygon.py:15(Polygon)
                                                                                         1    0.000    0.000  polygon.py:859(RegularPolygon)
                                                                                         1    0.000    0.000  polygon.py:1270(Triangle)
                                                                                         1    0.000    0.000  six.py:184(find_module)
add.py:1(<module>)                                                              ->       1    0.000    0.000  add.py:8(Add)
                                                                                         1    0.000    0.000  core.py:118(__init__)
numbers.py:1353(_eval_power)                                                    ->       7    0.000    0.000  assumptions.py:365(getit)
__init__.py:665(__init__)                                                       ->       4    0.000    0.000  __init__.py:177(_checkLevel)
                                                                                         4    0.000    0.000  __init__.py:587(__init__)
                                                                                         4    0.000    0.000  __init__.py:646(_addHandlerRef)
                                                                                         4    0.000    0.000  __init__.py:694(createLock)
finitefield.py:1(<module>)                                                      ->       1    0.000    0.000  finitefield.py:10(FiniteField)
                                                                                         1    0.000    0.000  modularinteger.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
libelefun.py:233(pi_fixed)                                                      ->       3    0.000    0.000  libelefun.py:211(bs_chudnovsky)
                                                                                         3    0.000    0.000  libintmath.py:223(isqrt_fast_python)
zeros.py:2(<module>)                                                            ->       1    0.000    0.000  getlimits.py:94(__new__)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  zeros.py:20(RootResults)
gmpyfinitefield.py:1(<module>)                                                  ->       1    0.000    0.000  gmpyfinitefield.py:6(GMPYFiniteField)
                                                                                         1    0.000    0.000  gmpyintegerring.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
numbers.py:1412(_eval_evalf)                                                    ->
csgraph.py:8(<module>)                                                          ->       1    0.000    0.000  csgraph.py:10(swig_import_helper)
polyclasses.py:343(eject)                                                       ->       2    0.000    0.000  densebasic.py:1520(dmp_eject)
                                                                                         2    0.000    0.000  polyclasses.py:146(__init__)
                                                                                         2    0.000    0.000  {len}
nnls.py:1(<module>)                                                             ->       1    0.000    0.000  six.py:184(find_module)
ikfast_IKFastSolver.py:118(__init__)                                            ->
blas.py:6(<module>)                                                             ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {hasattr}
polyclasses.py:708(factor_list)                                                 ->       3    0.000    0.000  factortools.py:1211(dmp_factor_list)
                                                                                         3    0.000    0.000  polyclasses.py:197(per)
ctx_mp_python.py:972(_wrap_libmp_function)                                      ->      45    0.000    0.000  {method 'get' of 'dict' objects}
attrs.py:15(<module>)                                                           ->       1    0.000    0.000  abc.py:86(__new__)
                                                                                         1    0.000    0.000  attrs.py:28(AttributeManager)
textplot.py:1(<module>)                                                         ->       1    0.000    0.000  six.py:184(find_module)
order.py:1(<module>)                                                            ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  order.py:6(Order)
                                                                                         1    0.000    0.000  six.py:184(find_module)
rational.py:31(__new__)                                                         ->      56    0.000    0.000  rational.py:7(create_reduced)
ctx_mp_python.py:583(__init__)                                                  ->
ask.py:139(register_handler)                                                    ->       1    0.000    0.000  assume.py:111(__new__)
                                                                                        18    0.000    0.000  assume.py:126(add_handler)
                                                                                        19    0.000    0.000  {getattr}
                                                                                         1    0.000    0.000  {setattr}
densetools.py:1(<module>)                                                       ->      33    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                        33    0.000    0.000  cythonutils.py:8(cythonized)
                                                                                         1    0.000    0.000  six.py:184(find_module)
ccompiler.py:93(__init__)                                                       ->      40    0.000    0.000  ccompiler.py:162(set_executable)
                                                                                         5    0.000    0.000  {method 'keys' of 'dict' objects}
expressiondomain.py:10(ExpressionDomain)                                        ->       1    0.000    0.000  expressiondomain.py:15(Expression)
                                                                                         2    0.000    0.000  expressiondomain.py:20(__init__)
densebasic.py:1520(dmp_eject)                                                   ->       2    0.000    0.000  densebasic.py:921(dmp_from_dict)
                                                                                         2    0.000    0.000  densebasic.py:1014(dmp_to_dict)
                                                                                         4    0.000    0.000  polynomialring.py:38(__call__)
                                                                                         2    0.000    0.000  {len}
                                                                                         4    0.000    0.000  {method 'iteritems' of 'dict' objects}
ikfast_generator_cpp.py:604(getClassInit)                                       ->       6    0.000    0.000  {len}
                                                                                         7    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         2    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         5    0.000    0.000  {range}
matrices.py:735(__init__)                                                       ->
polyclasses.py:338(inject)                                                      ->       2    0.000    0.000  densebasic.py:1485(dmp_inject)
                                                                                         2    0.000    0.000  polyclasses.py:146(__init__)
optparse.py:1277(set_usage)                                                     ->       1    0.000    0.000  gettext.py:641(gettext)
                                                                                         1    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'startswith' of 'str' objects}
densearith.py:1(<module>)                                                       ->      40    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                        40    0.000    0.000  cythonutils.py:8(cythonized)
runtests.py:70(get_sympy_dir)                                                   ->       3    0.000    0.000  genericpath.py:46(isdir)
                                                                                         1    0.000    0.000  posixpath.py:61(join)
                                                                                         1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         1    0.000    0.000  posixpath.py:329(normpath)
                                                                                         1    0.000    0.000  posixpath.py:358(abspath)
                                                                                         1    0.000    0.000  runtests.py:47(sys_normcase)
                                                                                         1    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                         1    0.000    0.000  {method 'upper' of 'str' objects}
complexes.py:273(_eval_power)                                                   ->      43    0.000    0.000  assumptions.py:365(getit)
                                                                                        43    0.000    0.000  basic.py:647(args)
dia.py:10(swig_import_helper)                                                   ->       1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         1    0.000    0.000  {imp.find_module}
                                                                                         1    0.000    0.000  {imp.load_module}
                                                                                         1    0.000    0.000  {method 'close' of 'file' objects}
csgraph.py:10(swig_import_helper)                                               ->       1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         1    0.000    0.000  {imp.find_module}
                                                                                         1    0.000    0.000  {imp.load_module}
                                                                                         1    0.000    0.000  {method 'close' of 'file' objects}
ikfast_AST.py:549(end)                                                          ->      82    0.000    0.000  ikfast_generator_cpp.py:1761(endSequence)
str.py:3(<module>)                                                              ->       1    0.000    0.000  precedence.py:1(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  str.py:16(StrPrinter)
                                                                                         1    0.000    0.000  str.py:487(StrReprPrinter)
records.py:36(<module>)                                                         ->       1    0.000    0.000  records.py:83(format_parser)
                                                                                         1    0.000    0.000  records.py:215(record)
                                                                                         1    0.000    0.000  records.py:298(recarray)
libmpi.py:4(<module>)                                                           ->       8    0.000    0.000  libmpf.py:410(from_float)
numerictypes.py:285(_add_types)                                                 ->      36    0.000    0.000  numerictypes.py:127(english_lower)
                                                                                        36    0.000    0.000  {isinstance}
                                                                                         1    0.000    0.000  {method 'keys' of 'dict' objects}
densebasic.py:1485(dmp_inject)                                                  ->       2    0.000    0.000  densebasic.py:921(dmp_from_dict)
                                                                                         2    0.000    0.000  densebasic.py:1014(dmp_to_dict)
                                                                                         4    0.000    0.000  polyclasses.py:230(to_dict)
                                                                                         2    0.000    0.000  {len}
                                                                                         6    0.000    0.000  {method 'iteritems' of 'dict' objects}
polyutils.py:45(<module>)                                                       ->       1    0.000    0.000  polyutils.py:58(RankWarning)
                                                                                         1    0.000    0.000  polyutils.py:62(PolyError)
                                                                                         1    0.000    0.000  polyutils.py:66(PolyDomainError)
                                                                                         1    0.000    0.000  polyutils.py:79(PolyBase)
polyclasses.py:618(lcm)                                                         ->       1    0.000    0.000  euclidtools.py:1716(dmp_lcm)
                                                                                         1    0.000    0.000  polyclasses.py:171(unify)
                                                                                         1    0.000    0.000  polyclasses.py:197(per)
ikfast_IKFastSolver.py:415(chop)                                                ->
weakref.py:47(__init__)                                                         ->       1    0.000    0.000  UserDict.py:4(__init__)
                                                                                         1    0.000    0.000  {len}
test_attrs_data.py:14(<module>)                                                 ->       1    0.000    0.000  test_attrs_data.py:28(BaseAttrs)
                                                                                         1    0.000    0.000  test_attrs_data.py:37(TestScalar)
                                                                                         1    0.000    0.000  test_attrs_data.py:59(TestArray)
                                                                                         1    0.000    0.000  test_attrs_data.py:84(TestTypes)
                                                                                         1    0.000    0.000  test_attrs_data.py:192(TestEmpty)
                                                                                         1    0.000    0.000  test_attrs_data.py:227(TestWriteException)
matrices.py:961(extract)                                                        ->       4    0.000    0.000  matrices.py:77(__init__)
                                                                                         8    0.000    0.000  {all}
                                                                                         8    0.000    0.000  {len}
pythonrationaltype.py:75(__add__)                                               ->      16    0.000    0.000  pythonrationaltype.py:26(__init__)
                                                                                        16    0.000    0.000  {isinstance}
os.py:35(_get_exports_list)                                                     ->       1    0.000    0.000  {dir}
suite.py:1(<module>)                                                            ->       1    0.000    0.000  suite.py:16(BaseTestSuite)
                                                                                         1    0.000    0.000  suite.py:78(TestSuite)
                                                                                         1    0.000    0.000  suite.py:252(_ErrorHolder)
                                                                                         1    0.000    0.000  suite.py:299(_DebugResult)
_structures.py:43(__neg__)                                                      ->
numerictypes.py:451(_set_array_types)                                           ->      30    0.000    0.000  numerictypes.py:443(_add_array_type)
Image.py:444(Image)                                                             ->
polyoptions.py:157(_init_dependencies_order)                                    ->       1    0.000    0.000  iterables.py:583(topological_sort)
                                                                                         4    0.000    0.000  {method 'add' of 'set' objects}
                                                                                        24    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'iteritems' of 'dict' objects}
tensor_functions.py:1(<module>)                                                 ->       2    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  tensor_functions.py:10(Dij)
                                                                                         1    0.000    0.000  tensor_functions.py:48(LeviCivita)
defchararray.py:17(<module>)                                                    ->       1    0.000    0.000  defchararray.py:1669(chararray)
rootisolation.py:1(<module>)                                                    ->       1    0.000    0.000  rootisolation.py:1587(RealInterval)
                                                                                         1    0.000    0.000  rootisolation.py:1692(ComplexInterval)
{posix.open}                                                                    ->
gruntz.py:117(<module>)                                                         ->       3    0.000    0.000  cache.py:50(__cacheit)
                                                                                         6    0.000    0.000  gruntz.py:130(debug)
                                                                                         5    0.000    0.000  gruntz.py:152(timeit)
                                                                                         1    0.000    0.000  gruntz.py:233(SubsSet)
                                                                                         1    0.000    0.000  six.py:184(find_module)
selections.py:15(<module>)                                                      ->       1    0.000    0.000  selections.py:95(_RegionProxy)
                                                                                         1    0.000    0.000  selections.py:118(Selection)
                                                                                         1    0.000    0.000  selections.py:185(PointSelection)
                                                                                         1    0.000    0.000  selections.py:231(SimpleSelection)
                                                                                         1    0.000    0.000  selections.py:315(FancySelection)
factortools.py:1(<module>)                                                      ->      22    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                        22    0.000    0.000  cythonutils.py:8(cythonized)
__init__.py:14(__sympy_debug)                                                   ->       1    0.000    0.000  os.py:512(getenv)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {eval}
factortools.py:1211(dmp_factor_list)                                            ->       3    0.000    0.000  factortools.py:1143(dup_factor_list)
logic.py:94(__hash__)                                                           -> 186/180    0.000    0.000  {hash}
_weakrefset.py:83(add)                                                          ->      90    0.000    0.000  {method 'add' of 'set' objects}
euclidtools.py:1716(dmp_lcm)                                                    ->       1    0.000    0.000  euclidtools.py:1646(dup_lcm)
{method 'seek' of 'cStringIO.StringO' objects}                                  ->
euclidtools.py:1646(dup_lcm)                                                    ->       1    0.000    0.000  euclidtools.py:1599(dup_rr_lcm)
functions.py:84(defun)                                                          ->
anneal.py:5(<module>)                                                           ->       1    0.000    0.000  anneal.py:14(base_schedule)
                                                                                         1    0.000    0.000  anneal.py:92(fast_sa)
                                                                                         1    0.000    0.000  anneal.py:115(cauchy_sa)
                                                                                         1    0.000    0.000  anneal.py:128(boltzmann_sa)
                                                                                         1    0.000    0.000  anneal.py:142(_state)
                                                                                         2    0.000    0.000  getlimits.py:94(__new__)
__init__.py:75(CFUNCTYPE)                                                       ->       3    0.000    0.000  __init__.py:101(CFunctionType)
                                                                                         6    0.000    0.000  {method 'pop' of 'dict' objects}
euclidtools.py:1599(dup_rr_lcm)                                                 ->       1    0.000    0.000  densearith.py:267(dup_mul_ground)
                                                                                         1    0.000    0.000  densearith.py:774(dup_mul)
                                                                                         1    0.000    0.000  densearith.py:1597(dup_quo)
                                                                                         2    0.000    0.000  densetools.py:637(dup_primitive)
                                                                                         1    0.000    0.000  euclidtools.py:1562(dup_gcd)
                                                                                         1    0.000    0.000  pythonintegerring.py:97(lcm)
_datasource.py:35(<module>)                                                     ->       1    0.000    0.000  _datasource.py:50(_FileOpeners)
                                                                                         1    0.000    0.000  _datasource.py:74(__init__)
                                                                                         1    0.000    0.000  _datasource.py:154(DataSource)
                                                                                         1    0.000    0.000  _datasource.py:504(Repository)
numberfields.py:1(<module>)                                                     ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  numberfields.py:392(AlgebraicNumber)
pretty_symbology.py:58(pretty_try_use_unicode)                                  ->       1    0.000    0.000  pretty_symbology.py:41(pretty_use_unicode)
                                                                                        57    0.000    0.000  {getattr}
                                                                                        50    0.000    0.000  {method 'append' of 'list' objects}
                                                                                        57    0.000    0.000  {method 'encode' of 'unicode' objects}
                                                                                         1    0.000    0.000  {method 'itervalues' of 'dict' objects}
                                                                                         1    0.000    0.000  {method 'values' of 'dict' objects}
{numpy.core.multiarray.add_docstring}                                           ->
ctx_iv.py:134(__new__)                                                          ->       4    0.000    0.000  ctx_iv.py:385(convert)
                                                                                         1    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
spawn.py:7(<module>)                                                            ->       1    0.000    0.000  debug.py:1(<module>)
                                                                                         1    0.000    0.000  log.py:1(<module>)
                                                                                         2    0.000    0.000  six.py:184(find_module)
test_dimension_scales.py:10(<module>)                                           ->       1    0.000    0.000  test_dimension_scales.py:21(BaseDataset)
                                                                                         1    0.000    0.000  test_dimension_scales.py:56(TestH5DSBindings)
                                                                                         1    0.000    0.000  test_dimension_scales.py:109(TestDimensionManager)
                                                                                         1    0.000    0.000  test_dimension_scales.py:136(TestDimensionsHighLevel)
__init__.py:1127(__init__)                                                      ->      16    0.000    0.000  __init__.py:177(_checkLevel)
                                                                                        16    0.000    0.000  __init__.py:587(__init__)
factortools.py:1143(dup_factor_list)                                            ->       3    0.000    0.000  densebasic.py:1556(dup_terms_gcd)
                                                                                         3    0.000    0.000  factortools.py:505(dup_zz_factor)
                                                                                         3    0.000    0.000  polyutils.py:116(_sort_factors)
                                                                                         3    0.000    0.000  {method 'insert' of 'list' objects}
optparse.py:636(_check_type)                                                    ->      30    0.000    0.000  {hasattr}
piecewise.py:44(Piecewise)                                                      ->
__init__.py:726(__iter__)                                                       ->
ikfast_IKFastSolver.py:6819(<lambda>)                                           ->
__init__.py:144(_check_size)                                                    ->      14    0.000    0.000  {_ctypes.sizeof}
                                                                                        14    0.000    0.000  {_struct.calcsize}
_weakrefset.py:20(__enter__)                                                    ->      74    0.000    0.000  {method 'add' of 'set' objects}
sympyrationalfield.py:14(SymPyRationalField)                                    ->       2    0.000    0.000  cache.py:74(wrapper)
sre_parse.py:67(__init__)                                                       ->
{repr}                                                                          ->
version.py:342(_parse_local_version)                                            ->
locale.py:365(normalize)                                                        ->       4    0.000    0.000  locale.py:349(_replace_encoding)
                                                                                         8    0.000    0.000  {isinstance}
                                                                                        12    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                         8    0.000    0.000  {method 'replace' of 'str' objects}
                                                                                         4    0.000    0.000  {method 'split' of 'str' objects}
                                                                                         8    0.000    0.000  {method 'translate' of 'str' objects}
ikfast_AST.py:155(numsolutions)                                                 ->       8    0.000    0.000  polytools.py:1620(degree)
                                                                                         2    0.000    0.000  {max}
__init__.py:1071(_fixupParents)                                                 ->       1    0.000    0.000  __init__.py:969(__init__)
                                                                                         3    0.000    0.000  __init__.py:976(append)
                                                                                        18    0.000    0.000  {isinstance}
                                                                                        31    0.000    0.000  {method 'rfind' of 'str' objects}
delta_functions.py:1(<module>)                                                  ->       2    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  delta_functions.py:8(DiracDelta)
                                                                                         1    0.000    0.000  delta_functions.py:136(Heaviside)
zeta_functions.py:1(<module>)                                                   ->       2    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  zeta_functions.py:7(zeta)
                                                                                         1    0.000    0.000  zeta_functions.py:49(dirichlet_eta)
threading.py:1081(__init__)                                                     ->       1    0.000    0.000  threading.py:576(set)
                                                                                         1    0.000    0.000  threading.py:647(__init__)
                                                                                         1    0.000    0.000  threading.py:780(_set_ident)
                                                                                         1    0.000    0.000  {thread.get_ident}
rational.py:7(create_reduced)                                                   ->      13    0.000    0.000  {abs}
                                                                                        19    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
domain.py:66(normal)                                                            ->
ikfast_IKFastSolver.py:206(__init__)                                            ->       1    0.000    0.000  {range}
collections.py:373(<genexpr>)                                                   ->      66    0.000    0.000  {method 'format' of 'str' objects}
doccer.py:2(<module>)                                                           ->       1    0.000    0.000  six.py:184(find_module)
version.py:362(<lambda>)                                                        ->
linalg.py:99(<module>)                                                          ->       2    0.000    0.000  linalg.py:110(LinearAlgebraMethods)
                                                                                         1    0.000    0.000  six.py:184(find_module)
__init__.py:2035(__init__)                                                      ->
libelefun.py:211(bs_chudnovsky)                                                 ->    24/6    0.000    0.000  libelefun.py:211(bs_chudnovsky)
ikfast_AST.py:112(GetZeroThreshold)                                             ->
{posix.urandom}                                                                 ->
polytools.py:215(_hashable_content)                                             ->
numbers.py:1070(__mod__)                                                        ->      26    0.000    0.000  numbers.py:989(__new__)
                                                                                        26    0.000    0.000  {isinstance}
logic.py:338(_eval_propagate_not)                                               ->       4    0.000    0.000  logic.py:195(__new__)
                                                                                         8    0.000    0.000  logic.py:347(__new__)
ikfast_AST.py:585(end)                                                          ->      55    0.000    0.000  ikfast_generator_cpp.py:1663(endBreak)
str.py:467(_print_Zero)                                                         ->
ccompiler.py:881(mkpath)                                                        ->       2    0.000    0.000  dir_util.py:19(mkpath)
os.py:512(getenv)                                                               ->      20    0.000    0.000  UserDict.py:91(get)
ctx_mp.py:108(<lambda>)                                                         ->
__init__.py:2287(_is_unpacked_egg)                                              ->      63    0.000    0.000  {method 'endswith' of 'str' objects}
                                                                                        63    0.000    0.000  {method 'lower' of 'str' objects}
case.py:78(skipUnless)                                                          ->       4    0.000    0.000  case.py:54(skip)
extrapolation.py:1(<module>)                                                    ->      16    0.000    0.000  calculus.py:4(defun)
                                                                                         1    0.000    0.000  six.py:184(find_module)
containers.py:7(<module>)                                                       ->       1    0.000    0.000  containers.py:12(Tuple)
                                                                                         1    0.000    0.000  core.py:118(__init__)
contextlib.py:1(<module>)                                                       ->       1    0.000    0.000  contextlib.py:9(GeneratorContextManager)
                                                                                         1    0.000    0.000  contextlib.py:54(contextmanager)
                                                                                         1    0.000    0.000  contextlib.py:132(closing)
{cPickle.load}                                                                  ->
bdb.py:1(<module>)                                                              ->       1    0.000    0.000  bdb.py:10(BdbQuit)
                                                                                         1    0.000    0.000  bdb.py:14(Bdb)
                                                                                         1    0.000    0.000  bdb.py:449(Breakpoint)
                                                                                         1    0.000    0.000  bdb.py:614(Tdb)
realdomain.py:1(<module>)                                                       ->       1    0.000    0.000  realdomain.py:11(RealDomain)
numerictypes.py:781(_construct_lookups)                                         ->      36    0.000    0.000  {isinstance}
                                                                                        26    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {method 'items' of 'dict' objects}
_endian.py:1(<module>)                                                          ->       1    0.000    0.000  _endian.py:23(_swapped_meta)
                                                                                         1    0.000    0.000  _endian.py:46(BigEndianStructure)
six.py:88(__init__)                                                             ->
dok.py:1(<module>)                                                              ->       1    0.000    0.000  dok.py:21(dok_matrix)
                                                                                         2    0.000    0.000  six.py:184(find_module)
qfunctions.py:1(<module>)                                                       ->       4    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                         4    0.000    0.000  functions.py:84(defun)
__init__.py:1147(resource_filename)                                             ->       1    0.000    0.000  __init__.py:417(get_provider)
                                                                                         1    0.000    0.000  __init__.py:1595(get_resource_filename)
logic.py:98(__eq__)                                                             ->     110    0.000    0.000  {isinstance}
ccompiler.py:323(_setup_compile)                                                ->       1    0.000    0.000  ccompiler.py:813(object_filenames)
                                                                                         1    0.000    0.000  ccompiler.py:881(mkpath)
                                                                                         1    0.000    0.000  ccompiler.py:1008(gen_preprocess_options)
                                                                                         1    0.000    0.000  posixpath.py:97(splitext)
                                                                                         1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         2    0.000    0.000  {isinstance}
                                                                                         3    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {range}
optparse.py:589(_set_opt_strings)                                               ->     110    0.000    0.000  {len}
                                                                                        55    0.000    0.000  {method 'append' of 'list' objects}
metaclass.py:31(__init__)                                                       ->      10    0.000    0.000  metaclass.py:4(__init__)
                                                                                        13    0.000    0.000  {sys._getframe}
odes.py:1(<module>)                                                             ->       2    0.000    0.000  odes.py:4(ODEMethods)
                                                                                         1    0.000    0.000  six.py:184(find_module)
tnc.py:33(<module>)                                                             ->       1    0.000    0.000  six.py:184(find_module)
_inspect.py:133(strseq)                                                         ->
{method 'split' of 'unicode' objects}                                           ->
{method 'read' of 'cStringIO.StringO' objects}                                  ->
signals.py:1(<module>)                                                          ->       1    0.000    0.000  signals.py:9(_InterruptHandler)
                                                                                         1    0.000    0.000  weakref.py:297(__init__)
colorize.py:4(<module>)                                                         ->       1    0.000    0.000  colorize.py:13(ColorizingStreamHandler)
                                                                                         2    0.000    0.000  six.py:184(find_module)
ikfast_IKFastSolver.py:430(IsPrismatic)                                         ->
sre_parse.py:221(isident)                                                       ->
numeric.py:1404(rollaxis)                                                       ->
{globals}                                                                       ->
ctx_iv.py:28(convert_mpf_)                                                      ->      16    0.000    0.000  libmpf.py:330(from_int)
                                                                                         8    0.000    0.000  {hasattr}
                                                                                         8    0.000    0.000  {isinstance}
case.py:87(expectedFailure)                                                     ->       7    0.000    0.000  functools.py:17(update_wrapper)
                                                                                         7    0.000    0.000  functools.py:39(wraps)
iterables.py:583(topological_sort)                                              ->      15    0.000    0.000  iterables.py:659(<lambda>)
                                                                                        25    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         4    0.000    0.000  {method 'discard' of 'set' objects}
                                                                                        24    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                         4    0.000    0.000  {method 'remove' of 'list' objects}
                                                                                         1    0.000    0.000  {sorted}
ikfast_generator_cpp.py:1661(generateBreak)                                     ->
core.py:981(__init__)                                                           ->      36    0.000    0.000  {getattr}
operations.py:38(<genexpr>)                                                     ->
inversekinematics.py:622(getsourcefilename)                                     ->       1    0.000    0.000  posixpath.py:61(join)
                                                                                         1    0.000    0.000  {len}
                                                                                         2    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         2    0.000    0.000  {sorted}
polyclasses.py:825(__sub__)                                                     ->       4    0.000    0.000  polyclasses.py:422(sub)
                                                                                         4    0.000    0.000  {isinstance}
UserDict.py:91(get)                                                             ->       4    0.000    0.000  UserDict.py:35(__getitem__)
                                                                                        41    0.000    0.000  UserDict.py:103(__contains__)
polynomialring.py:142(get_field)                                                ->       2    0.000    0.000  fractionfield.py:20(__init__)
contextlib.py:54(contextmanager)                                                ->       5    0.000    0.000  functools.py:17(update_wrapper)
                                                                                         5    0.000    0.000  functools.py:39(wraps)
latex.py:3(<module>)                                                            ->       1    0.000    0.000  latex.py:18(LatexPrinter)
                                                                                         1    0.000    0.000  six.py:184(find_module)
numbers.py:532(<genexpr>)                                                       ->
sets.py:10(Set)                                                                 ->
numeric.py:2576(seterr)                                                         ->       6    0.000    0.000  numeric.py:2676(geterr)
                                                                                         6    0.000    0.000  {numpy.core.umath.geterrobj}
                                                                                         6    0.000    0.000  {numpy.core.umath.seterrobj}
mpmathrealdomain.py:1(<module>)                                                 ->       1    0.000    0.000  mpmathrealdomain.py:6(MPmathRealDomain)
numerictypes.py:443(_add_array_type)                                            ->      15    0.000    0.000  {method 'append' of 'list' objects}
iterables.py:1(<module>)                                                        ->       1    0.000    0.000  iterables.py:139(preorder_traversal)
                                                                                         2    0.000    0.000  six.py:184(find_module)
trigonometric.py:15(_peeloff_pi)                                                ->       4    0.000    0.000  cache.py:74(wrapper)
                                                                                         8    0.000    0.000  operations.py:264(make_args)
ode.py:203(<module>)                                                            ->       2    0.000    0.000  multidimensional.py:77(__init__)
                                                                                         2    0.000    0.000  multidimensional.py:88(__call__)
__init__.py:417(get_provider)                                                   ->       1    0.000    0.000  __init__.py:1691(__init__)
                                                                                         1    0.000    0.000  __init__.py:3057(_find_adapter)
                                                                                         1    0.000    0.000  {getattr}
                                                                                         1    0.000    0.000  {isinstance}
evalf.py:66(fastlog)                                                            ->
message.py:92(Message)                                                          ->       1    0.000    0.000  iterators.py:5(<module>)
                                                                                         1    0.000    0.000  six.py:184(find_module)
domain.py:316(__ne__)                                                           ->
{method 'clear' of 'dict' objects}                                              ->
six.py:105(__init__)                                                            ->      86    0.000    0.000  six.py:88(__init__)
unicode_escape.py:8(<module>)                                                   ->       1    0.000    0.000  unicode_escape.py:13(Codec)
                                                                                         1    0.000    0.000  unicode_escape.py:20(IncrementalEncoder)
                                                                                         1    0.000    0.000  unicode_escape.py:24(IncrementalDecoder)
                                                                                         1    0.000    0.000  unicode_escape.py:28(StreamWriter)
                                                                                         1    0.000    0.000  unicode_escape.py:31(StreamReader)
numerictypes.py:338(_add_integer_aliases)                                       ->       5    0.000    0.000  {method 'keys' of 'dict' objects}
files.py:133(File)                                                              ->      11    0.000    0.000  {h5py._objects.with_phil}
                                                                                         1    0.000    0.000  {method 'setter' of 'property' objects}
cse_opts.py:3(<module>)                                                         ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  cse_opts.py:25(Sub)
inspect.py:743(getargs)                                                         ->       7    0.000    0.000  inspect.py:208(iscode)
                                                                                         7    0.000    0.000  {range}
error_functions.py:1(<module>)                                                  ->       1    0.000    0.000  core.py:118(__init__)
                                                                                         1    0.000    0.000  error_functions.py:9(erf)
__init__.py:490(PYFUNCTYPE)                                                     ->       3    0.000    0.000  __init__.py:491(CFunctionType)
fromnumeric.py:1987(all)                                                        ->       1    0.000    0.000  numeric.py:484(asanyarray)
                                                                                         1    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
pretty_symbology.py:100(<lambda>)                                               ->      24    0.000    0.000  pretty_symbology.py:10(U)
                                                                                        24    0.000    0.000  {method 'upper' of 'str' objects}
os.py:136(makedirs)                                                             ->       2    0.000    0.000  genericpath.py:23(exists)
                                                                                         2    0.000    0.000  posixpath.py:82(split)
                                                                                         2    0.000    0.000  {posix.mkdir}
trigonometric.py:1065(eval)                                                     ->       2    0.000    0.000  expr.py:176(is_number)
                                                                                         2    0.000    0.000  symbol.py:96(is_number)
importtools.py:1(<module>)                                                      ->       1    0.000    0.000  importtools.py:12(__sympy_debug)
                                                                                         1    0.000    0.000  six.py:184(find_module)
{method 'lower' of 'unicode' objects}                                           ->
FixTk.py:1(<module>)                                                            ->       2    0.000    0.000  genericpath.py:23(exists)
                                                                                         2    0.000    0.000  posixpath.py:61(join)
                                                                                         1    0.000    0.000  posixpath.py:358(abspath)
zeta.py:1(<module>)                                                             ->      26    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                        18    0.000    0.000  functions.py:84(defun)
                                                                                         2    0.000    0.000  functions.py:87(defun_static)
quadrature.py:21(__init__)                                                      ->
functions.py:81(defun_wrapped)                                                  ->
six.py:177(_add_module)                                                         ->
compatibility.py:4(<module>)                                                    ->       3    0.000    0.000  six.py:184(find_module)
getlimits.py:3(<module>)                                                        ->       1    0.000    0.000  getlimits.py:25(finfo)
                                                                                         1    0.000    0.000  getlimits.py:195(iinfo)
calculus.py:1(<module>)                                                         ->       2    0.000    0.000  calculus.py:1(CalculusMethods)
                                                                                         2    0.000    0.000  calculus.py:5(MatrixCalculusMethods)
matrices.py:797(row_del)                                                        ->
matrices.py:410(<lambda>)                                                       ->      18    0.000    0.000  numbers.py:1056(__mul__)
dir_util.py:19(mkpath)                                                          ->       2    0.000    0.000  genericpath.py:46(isdir)
                                                                                         2    0.000    0.000  posixpath.py:329(normpath)
                                                                                         2    0.000    0.000  {isinstance}
test_base.py:14(<module>)                                                       ->       1    0.000    0.000  test_base.py:27(BaseTest)
                                                                                         1    0.000    0.000  test_base.py:36(TestName)
                                                                                         1    0.000    0.000  test_base.py:47(TestRepr)
base.py:201(HLObject)                                                           ->      11    0.000    0.000  {h5py._objects.with_phil}
_inspect.py:146(<lambda>)                                                       ->      60    0.000    0.000  {repr}
ikfast_AST.py:377(end)                                                          ->      30    0.000    0.000  ikfast_generator_cpp.py:1614(endBranchConds)
ccompiler.py:162(set_executable)                                                ->      40    0.000    0.000  {isinstance}
                                                                                        40    0.000    0.000  {setattr}
polyconfig.py:1(<module>)                                                       ->       1    0.000    0.000  polyconfig.py:33(configure)
stat.py:49(S_ISREG)                                                             ->      61    0.000    0.000  stat.py:24(S_IFMT)
numerictypes.py:127(english_lower)                                              ->      72    0.000    0.000  {method 'translate' of 'str' objects}
ikfast_generator_cpp.py:1649(endCheckZeros)                                     ->
base.py:64(default_lapl)                                                        ->
result.py:26(TestResult)                                                        ->       3    0.000    0.000  result.py:14(failfast)
numbers.py:234(Float)                                                           ->       4    0.000    0.000  decorators.py:34(_sympifyit)
                                                                                         4    0.000    0.000  decorators.py:50(deco)
ctx_base.py:47(_init_aliases)                                                   ->      14    0.000    0.000  {getattr}
                                                                                         2    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                        13    0.000    0.000  {setattr}
decimal.py:3782(__init__)                                                       ->      27    0.000    0.000  decimal.py:3809(<genexpr>)
                                                                                        27    0.000    0.000  decimal.py:3816(<genexpr>)
                                                                                         6    0.000    0.000  {isinstance}
six.py:91(__get__)                                                              ->       3    0.000    0.000  six.py:114(_resolve)
                                                                                         3    0.000    0.000  six.py:159(_resolve)
                                                                                         4    0.000    0.000  {delattr}
                                                                                         2    0.000    0.000  {setattr}
__init__.py:1691(__init__)                                                      ->       1    0.000    0.000  __init__.py:1591(__init__)
                                                                                         1    0.000    0.000  __init__.py:1695(_setup_prefix)
boolalg.py:149(eval)                                                            ->       9    0.000    0.000  basic.py:82(__new__)
                                                                                        36    0.000    0.000  basic.py:179(__hash__)
                                                                                         9    0.000    0.000  {len}
optparse.py:1420(_process_args)                                                 ->       3    0.000    0.000  optparse.py:1480(_process_long_opt)
                                                                                         4    0.000    0.000  {method 'append' of 'list' objects}
_weakrefset.py:16(__init__)                                                     ->
inversekinematics.py:662(<genexpr>)                                             ->      18    0.000    0.000  numeric.py:1835(array_str)
numeric.py:2967(__enter__)                                                      ->       3    0.000    0.000  numeric.py:2576(seterr)
datatype.py:12(<module>)                                                        ->       1    0.000    0.000  datatype.py:21(Datatype)
polyconfig.py:33(configure)                                                     ->      11    0.000    0.000  os.py:512(getenv)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {method 'items' of 'dict' objects}
{method 'close' of 'file' objects}                                              ->
ctx_fp.py:12(FPContext)                                                         ->
numerictypes.py:216(_evalname)                                                  ->
optparse.py:833(isbasestring)                                                   ->      72    0.000    0.000  {isinstance}
{method 'tell' of 'cStringIO.StringO' objects}                                  ->
lobpcg.py:11(<module>)                                                          ->       1    0.000    0.000  lobpcg.py:85(CallableLinearOperator)
                                                                                         3    0.000    0.000  six.py:184(find_module)
{posix.unlink}                                                                  ->
threading.py:114(RLock)                                                         ->       5    0.000    0.000  threading.py:132(__init__)
numbers.py:1386(_eval_evalf)                                                    ->
metaclass.py:20(__new__)                                                        ->       4    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                         4    0.000    0.000  {method 'append' of 'list' objects}
_weakrefset.py:52(_commit_removals)                                             ->
filters.py:39(<module>)                                                         ->       1    0.000    0.000  filters.py:57(_gen_filter_tuples)
numeric.py:414(asarray)                                                         ->      65    0.000    0.000  {numpy.core.multiarray.array}
generate.py:211(primerange)                                                     ->      18    0.000    0.000  generate.py:132(nextprime)
posixpath.py:82(split)                                                          ->      15    0.000    0.000  {len}
                                                                                        17    0.000    0.000  {method 'rfind' of 'str' objects}
                                                                                        13    0.000    0.000  {method 'rstrip' of 'str' objects}
generate.py:132(nextprime)                                                      ->       6    0.000    0.000  primetest.py:157(isprime)
twodim_base.py:3(<module>)                                                      ->       3    0.000    0.000  getlimits.py:245(__init__)
polyoptions.py:59(__init__)                                                     ->      24    0.000    0.000  {setattr}
__init__.py:646(_addHandlerRef)                                                 ->       4    0.000    0.000  __init__.py:205(_acquireLock)
                                                                                         4    0.000    0.000  __init__.py:214(_releaseLock)
                                                                                         4    0.000    0.000  {method 'append' of 'list' objects}
ctx_iv.py:369(make_mpf)                                                         ->      24    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
inversekinematics.py:365(getikname)                                             ->
ImageFilter.py:18(<module>)                                                     ->       1    0.000    0.000  ImageFilter.py:18(Filter)
                                                                                         1    0.000    0.000  ImageFilter.py:24(Kernel)
                                                                                         1    0.000    0.000  ImageFilter.py:57(BuiltinFilter)
                                                                                         1    0.000    0.000  ImageFilter.py:64(RankFilter)
                                                                                         1    0.000    0.000  ImageFilter.py:90(MedianFilter)
                                                                                         1    0.000    0.000  ImageFilter.py:106(MinFilter)
                                                                                         1    0.000    0.000  ImageFilter.py:122(MaxFilter)
                                                                                         1    0.000    0.000  ImageFilter.py:140(ModeFilter)
                                                                                         1    0.000    0.000  ImageFilter.py:156(GaussianBlur)
                                                                                         1    0.000    0.000  ImageFilter.py:167(UnsharpMask)
                                                                                         1    0.000    0.000  ImageFilter.py:180(BLUR)
                                                                                         1    0.000    0.000  ImageFilter.py:193(CONTOUR)
                                                                                         1    0.000    0.000  ImageFilter.py:204(DETAIL)
                                                                                         1    0.000    0.000  ImageFilter.py:215(EDGE_ENHANCE)
                                                                                         1    0.000    0.000  ImageFilter.py:226(EDGE_ENHANCE_MORE)
                                                                                         1    0.000    0.000  ImageFilter.py:237(EMBOSS)
                                                                                         1    0.000    0.000  ImageFilter.py:248(FIND_EDGES)
                                                                                         1    0.000    0.000  ImageFilter.py:259(SMOOTH)
                                                                                         1    0.000    0.000  ImageFilter.py:270(SMOOTH_MORE)
                                                                                         1    0.000    0.000  ImageFilter.py:283(SHARPEN)
numbers.py:191(__ge__)                                                          ->       4    0.000    0.000  numbers.py:1119(__le__)
                                                                                         4    0.000    0.000  sympify.py:161(_sympify)
lil.py:2(<module>)                                                              ->       1    0.000    0.000  lil.py:15(lil_matrix)
                                                                                         1    0.000    0.000  six.py:184(find_module)
singleton.py:1(<module>)                                                        ->       1    0.000    0.000  singleton.py:6(SingletonRegistry)
                                                                                         1    0.000    0.000  singleton.py:21(Singleton)
specifiers.py:276(_require_version_compare)                                     ->       7    0.000    0.000  functools.py:17(update_wrapper)
                                                                                         7    0.000    0.000  functools.py:39(wraps)
getlimits.py:151(<lambda>)                                                      ->      10    0.000    0.000  getlimits.py:13(_frz)
                                                                                        10    0.000    0.000  {numpy.core.multiarray.array}
boolalg.py:93(eval)                                                             ->      42    0.000    0.000  basic.py:622(func)
                                                                                        14    0.000    0.000  {len}
expintegrals.py:1(<module>)                                                     ->      32    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                        22    0.000    0.000  functions.py:84(defun)
matrices.py:2185(__getattr__)                                                   ->
matrices.py:801(col_del)                                                        ->      16    0.000    0.000  {range}
__init__.py:22(find_module)                                                     ->       5    0.000    0.000  {any}
                                                                                         5    0.000    0.000  {map}
                                                                                        19    0.000    0.000  {method 'partition' of 'str' objects}
inference.py:1(<module>)                                                        ->       1    0.000    0.000  inference.py:106(KB)
                                                                                         1    0.000    0.000  inference.py:123(PropKB)
pythonrationaltype.py:1(<module>)                                               ->       1    0.000    0.000  pythonrationaltype.py:7(PythonRationalType)
                                                                                         1    0.000    0.000  six.py:184(find_module)
_globals.py:17(<module>)                                                        ->       1    0.000    0.000  _globals.py:33(ModuleDeprecationWarning)
                                                                                         1    0.000    0.000  _globals.py:45(VisibleDeprecationWarning)
                                                                                         1    0.000    0.000  _globals.py:56(_NoValue)
                                                                                         1    0.000    0.000  {globals}
{_ctypes.POINTER}                                                               ->
ccompiler.py:461(_need_link)                                                    ->       1    0.000    0.000  dep_util.py:52(newer_group)
threading.py:647(__init__)                                                      ->       1    0.000    0.000  threading.py:59(__init__)
                                                                                         1    0.000    0.000  threading.py:242(Condition)
                                                                                         1    0.000    0.000  threading.py:542(Event)
                                                                                         1    0.000    0.000  threading.py:1088(_set_daemon)
                                                                                         1    0.000    0.000  {thread.allocate_lock}
integerring.py:1(<module>)                                                      ->       1    0.000    0.000  integerring.py:9(IntegerRing)
                                                                                         1    0.000    0.000  six.py:184(find_module)
visualfeedback.py:11(<module>)                                                  ->       1    0.000    0.000  __init__.py:1567(getLogger)
                                                                                         1    0.000    0.000  visualfeedback.py:25(VisualFeedback)
scimath.py:17(<module>)                                                         ->
interface.py:1(<module>)                                                        ->       1    0.000    0.000  interface.py:7(LinearOperator)
                                                                                         1    0.000    0.000  interface.py:203(MatrixLinearOperator)
                                                                                         1    0.000    0.000  interface.py:218(IdentityOperator)
                                                                                         2    0.000    0.000  six.py:184(find_module)
bsr.py:1(<module>)                                                              ->       1    0.000    0.000  bsr.py:19(bsr_matrix)
realdomain.py:11(RealDomain)                                                    ->       2    0.000    0.000  numbers.py:294(__new__)
ctx_mp_python.py:334(__new__)                                                   ->      14    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
                                                                                        14    0.000    0.000  {getattr}
hypergeometric.py:1(<module>)                                                   ->       4    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                        50    0.000    0.000  functions.py:84(defun)
linalg.py:76(_determine_error_states)                                           ->       1    0.000    0.000  numeric.py:2963(__init__)
                                                                                         1    0.000    0.000  numeric.py:2967(__enter__)
                                                                                         1    0.000    0.000  numeric.py:2972(__exit__)
                                                                                         2    0.000    0.000  {numpy.core.umath.geterrobj}
sympyrealdomain.py:1(<module>)                                                  ->       1    0.000    0.000  sympyrealdomain.py:6(SymPyRealDomain)
decorators.py:23(deprecated)                                                    ->       4    0.000    0.000  functools.py:17(update_wrapper)
                                                                                         4    0.000    0.000  functools.py:39(wraps)
memmap.py:1(<module>)                                                           ->       1    0.000    0.000  memmap.py:20(memmap)
ask.py:8(Q)                                                                     ->      19    0.000    0.000  assume.py:111(__new__)
polytools.py:1043(terms_gcd)                                                    ->       2    0.000    0.000  polyclasses.py:384(terms_gcd)
                                                                                         2    0.000    0.000  polytools.py:404(per)
                                                                                         2    0.000    0.000  {hasattr}
_import_tools.py:1(<module>)                                                    ->       1    0.000    0.000  UserDict.py:91(get)
                                                                                         1    0.000    0.000  _import_tools.py:9(PackageLoader)
                                                                                         1    0.000    0.000  _import_tools.py:340(PackageLoaderDebug)
symbol.py:3(<module>)                                                           ->       1    0.000    0.000  {globals}
                                                                                         1    0.000    0.000  {method 'items' of 'dict' objects}
elliptic.py:63(<module>)                                                        ->      18    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                        12    0.000    0.000  functions.py:84(defun)
optparse.py:1480(_process_long_opt)                                             ->       3    0.000    0.000  optparse.py:753(takes_value)
                                                                                         3    0.000    0.000  optparse.py:779(process)
                                                                                         3    0.000    0.000  optparse.py:1471(_match_long_opt)
                                                                                         2    0.000    0.000  {len}
                                                                                         2    0.000    0.000  {method 'insert' of 'list' objects}
                                                                                         5    0.000    0.000  {method 'pop' of 'list' objects}
                                                                                         2    0.000    0.000  {method 'split' of 'str' objects}
{method 'translate' of 'str' objects}                                           ->
utils.py:117(deprecate)                                                         ->       3    0.000    0.000  utils.py:68(__init__)
                                                                                         2    0.000    0.000  utils.py:73(__call__)
_inspect.py:15(ismethod)                                                        ->      43    0.000    0.000  {isinstance}
algebraicfield.py:1(<module>)                                                   ->       1    0.000    0.000  algebraicfield.py:12(AlgebraicField)
test_slicing.py:289(TestFieldNames)                                             ->       1    0.000    0.000  numeric.py:148(ones)
{numpy.core.multiarray.dot}                                                     ->
_compat.py:38(__new__)                                                          ->       1    0.000    0.000  abc.py:86(__new__)
nosetester.py:6(<module>)                                                       ->       1    0.000    0.000  nosetester.py:128(NoseTester)
fcode.py:18(<module>)                                                           ->       1    0.000    0.000  fcode.py:33(FCodePrinter)
precedence.py:40(precedence_Rational)                                           ->
numbers.py:131(bernoulli)                                                       ->       2    0.000    0.000  cache.py:74(wrapper)
ImageColor.py:20(<module>)                                                      ->       2    0.000    0.000  six.py:184(find_module)
case.py:58(decorator)                                                           ->       3    0.000    0.000  functools.py:17(update_wrapper)
                                                                                         3    0.000    0.000  functools.py:39(wraps)
                                                                                         6    0.000    0.000  {isinstance}
test_selections.py:12(<module>)                                                 ->       1    0.000    0.000  test_selections.py:22(TestTypeGeneration)
                                                                                         1    0.000    0.000  test_selections.py:61(TestScalarSliceRules)
__init__.py:974(Environment)                                                    ->       1    0.000    0.000  __init__.py:250(get_supported_platform)
result.py:14(failfast)                                                          ->       3    0.000    0.000  functools.py:17(update_wrapper)
                                                                                         3    0.000    0.000  functools.py:39(wraps)
calculus.py:4(defun)                                                            ->      22    0.000    0.000  {setattr}
shutil.py:54(_samefile)                                                         ->       2    0.000    0.000  posixpath.py:153(samefile)
                                                                                         2    0.000    0.000  {hasattr}
importtools.py:12(__sympy_debug)                                                ->       1    0.000    0.000  os.py:512(getenv)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {eval}
{method 'isalnum' of 'str' objects}                                             ->
assume.py:111(__new__)                                                          ->      20    0.000    0.000  basic.py:82(__new__)
lambdify.py:4(<module>)                                                         ->       2    0.000    0.000  six.py:184(find_module)
matrices.py:1572(is_square)                                                     ->
add.py:8(Add)                                                                   ->       3    0.000    0.000  cache.py:50(__cacheit)
__init__.py:956(_added_new)                                                     ->
inversekinematics.py:310(__del__)                                               ->       2    0.000    0.000  __init__.py:71(__del__)
filters.py:57(_gen_filter_tuples)                                               ->      10    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'items' of 'dict' objects}
trigonometry.py:3(<module>)                                                     ->       1    0.000    0.000  cache.py:50(__cacheit)
                                                                                         1    0.000    0.000  symbol.py:127(__new__)
__init__.py:1695(_setup_prefix)                                                 ->      11    0.000    0.000  __init__.py:2287(_is_unpacked_egg)
                                                                                        11    0.000    0.000  posixpath.py:82(split)
openravepy_ext.py:83(_registerEnumPicklers)                                     ->       1    0.000    0.000  copy_reg.py:14(pickle)
                                                                                         1    0.000    0.000  copy_reg.py:27(constructor)
domain.py:53(__str__)                                                           ->
coo.py:1(<module>)                                                              ->       1    0.000    0.000  coo.py:16(coo_matrix)
pythonrationalfield.py:1(<module>)                                              ->       1    0.000    0.000  pythonrationalfield.py:11(PythonRationalField)
test_datatype.py:14(<module>)                                                   ->       1    0.000    0.000  test_datatype.py:27(BaseType)
                                                                                         1    0.000    0.000  test_datatype.py:36(TestCreation)
coreerrors.py:1(<module>)                                                       ->       1    0.000    0.000  coreerrors.py:3(BaseCoreError)
                                                                                         1    0.000    0.000  coreerrors.py:6(NonCommutativeExpression)
numbers.py:1415(__abs__)                                                        ->
ikfast_generator_cpp.py:2282(using_polyroots)                                   ->     2/1    0.000    0.000  ikfast_generator_cpp.py:2282(using_polyroots)
trigonometric.py:309(_eval_is_real)                                             ->       4    0.000    0.000  assumptions.py:365(getit)
                                                                                         4    0.000    0.000  basic.py:647(args)
sqfreetools.py:1(<module>)                                                      ->       9    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                         9    0.000    0.000  cythonutils.py:8(cythonized)
polyroots.py:384(<genexpr>)                                                     ->       4    0.000    0.000  polyclasses.py:789(is_monomial)
pythonintegerring.py:1(<module>)                                                ->       1    0.000    0.000  pythonintegerring.py:12(PythonIntegerRing)
dep_util.py:52(newer_group)                                                     ->       2    0.000    0.000  genericpath.py:23(exists)
                                                                                         2    0.000    0.000  {posix.stat}
orthopolys.py:1(<module>)                                                       ->       7    0.000    0.000  Shadow.py:85(_empty_decorator)
                                                                                         7    0.000    0.000  cythonutils.py:8(cythonized)
sympyintegerring.py:1(<module>)                                                 ->       1    0.000    0.000  sympyintegerring.py:8(SymPyIntegerRing)
__init__.py:346(__init__)                                                       ->       1    0.000    0.000  __init__.py:356(_FuncPtr)
                                                                                         1    0.000    0.000  {_ctypes.dlopen}
arrayterator.py:9(<module>)                                                     ->       1    0.000    0.000  arrayterator.py:20(Arrayterator)
fractionfield.py:1(<module>)                                                    ->       1    0.000    0.000  fractionfield.py:11(FractionField)
twodim_base.py:192(eye)                                                         ->       2    0.000    0.000  {numpy.core.multiarray.zeros}
polynomialring.py:1(<module>)                                                   ->       1    0.000    0.000  polynomialring.py:11(PolynomialRing)
matrices.py:2836(_matrix_sympify)                                               ->      21    0.000    0.000  sympify.py:9(__init__)
gmpyrationalfield.py:1(<module>)                                                ->       1    0.000    0.000  gmpyrationalfield.py:13(GMPYRationalField)
simpledomain.py:10(inject)                                                      ->       2    0.000    0.000  domain.py:357(poly_ring)
pkgutil.py:173(__init__)                                                        ->
_polybase.py:19(ABCPolyBase)                                                    ->      12    0.000    0.000  abc.py:15(abstractmethod)
locale.py:349(_replace_encoding)                                                ->       4    0.000    0.000  __init__.py:49(normalize_encoding)
                                                                                         8    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                         4    0.000    0.000  {method 'index' of 'str' objects}
mpmathrealdomain.py:6(MPmathRealDomain)                                         ->       2    0.000    0.000  ctx_mp_python.py:47(__new__)
differentiation.py:1(<module>)                                                  ->      18    0.000    0.000  calculus.py:4(defun)
entity.py:8(<module>)                                                           ->       1    0.000    0.000  entity.py:26(GeometryEntity)
kinematicreachability.py:77(ReachabilityModel)                                  ->       1    0.000    0.000  kinematicreachability.py:81(QuaternionKDTree)
                                                                                         1    0.000    0.000  metaclass.py:31(__init__)
order.py:6(Order)                                                               ->       3    0.000    0.000  cache.py:50(__cacheit)
timeit.py:53(<module>)                                                          ->       1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  timeit.py:105(Timer)
group.py:28(Group)                                                              ->       7    0.000    0.000  {h5py._objects.with_phil}
_structures.py:14(<module>)                                                     ->       1    0.000    0.000  _structures.py:17(Infinity)
                                                                                         1    0.000    0.000  _structures.py:49(NegativeInfinity)
libelefun.py:85(constant_memo)                                                  ->
attrs.py:28(AttributeManager)                                                   ->       6    0.000    0.000  {h5py._objects.with_phil}
factortools.py:505(dup_zz_factor)                                               ->       3    0.000    0.000  densebasic.py:15(poly_LC)
                                                                                         3    0.000    0.000  densebasic.py:131(dup_degree)
                                                                                         3    0.000    0.000  densetools.py:637(dup_primitive)
epathtools.py:1(<module>)                                                       ->       1    0.000    0.000  epathtools.py:5(EPath)
__init__.py:1298(addHandler)                                                    ->       4    0.000    0.000  __init__.py:205(_acquireLock)
                                                                                         4    0.000    0.000  __init__.py:214(_releaseLock)
                                                                                         4    0.000    0.000  {method 'append' of 'list' objects}
polyclasses.py:789(is_monomial)                                                 ->       4    0.000    0.000  polyclasses.py:230(to_dict)
                                                                                         4    0.000    0.000  {len}
__init__.py:127(<lambda>)                                                       ->      90    0.000    0.000  {method 'startswith' of 'str' objects}
unixccompiler.py:14(<module>)                                                   ->       1    0.000    0.000  unixccompiler.py:48(UnixCCompiler)
UserDict.py:103(__contains__)                                                   ->
__init__.py:250(get_supported_platform)                                         ->       1    0.000    0.000  __init__.py:447(get_build_platform)
                                                                                         1    0.000    0.000  {method 'match' of '_sre.SRE_Pattern' objects}
posixpath.py:424(relpath)                                                       ->       1    0.000    0.000  genericpath.py:76(commonprefix)
                                                                                         1    0.000    0.000  posixpath.py:61(join)
                                                                                         2    0.000    0.000  posixpath.py:358(abspath)
                                                                                         2    0.000    0.000  {len}
                                                                                         2    0.000    0.000  {method 'split' of 'str' objects}
_inspect.py:43(iscode)                                                          ->      38    0.000    0.000  {isinstance}
numbers.py:1345(__abs__)                                                        ->
gmpyintegerring.py:1(<module>)                                                  ->       1    0.000    0.000  gmpyintegerring.py:13(GMPYIntegerRing)
numerictypes.py:428(_construct_char_code_lookup)                                ->      36    0.000    0.000  {isinstance}
                                                                                         1    0.000    0.000  {method 'keys' of 'dict' objects}
utils.py:73(__call__)                                                           ->       3    0.000    0.000  utils.py:51(_set_function_name)
                                                                                         3    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         3    0.000    0.000  {method 'update' of 'dict' objects}
{method 'strip' of 'unicode' objects}                                           ->
getlimits.py:245(__init__)                                                      ->
threading.py:132(__init__)                                                      ->       5    0.000    0.000  threading.py:59(__init__)
                                                                                         5    0.000    0.000  {thread.allocate_lock}
polysys.py:1(<module>)                                                          ->       1    0.000    0.000  polysys.py:10(SolveFailed)
_inspect.py:28(isfunction)                                                      ->      43    0.000    0.000  {isinstance}
{h5py._conv.register_converters}                                                ->
optparse.py:366(__init__)                                                       ->       2    0.000    0.000  optparse.py:200(__init__)
ikfast_IKFastSolver.py:171(__init__)                                            ->
core.py:1139(__init__)                                                          ->      12    0.000    0.000  {getattr}
__init__.py:694(createLock)                                                     ->       4    0.000    0.000  threading.py:114(RLock)
nonlin.py:211(_set_doc)                                                         ->
mathml.py:3(<module>)                                                           ->       1    0.000    0.000  mathml.py:11(MathMLPrinter)
index_methods.py:10(<module>)                                                   ->       1    0.000    0.000  index_methods.py:18(IndexConformanceException)
fractions.py:44(Fraction)                                                       ->       5    0.000    0.000  fractions.py:280(_operator_fallbacks)
sysconfig.py:51(_python_build)                                                  ->       2    0.000    0.000  genericpath.py:34(isfile)
                                                                                         2    0.000    0.000  posixpath.py:61(join)
numerictypes.py:154(english_upper)                                              ->      40    0.000    0.000  {method 'translate' of 'str' objects}
{method '__subclasses__' of 'type' objects}                                     ->
curve.py:7(<module>)                                                            ->       1    0.000    0.000  curve.py:16(Curve)
_compat.py:30(with_metaclass)                                                   ->       1    0.000    0.000  _compat.py:37(metaclass)
                                                                                         1    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
data.py:7(<module>)                                                             ->       1    0.000    0.000  data.py:16(_data_matrix)
gtk.py:2(<module>)                                                              ->       2    0.000    0.000  six.py:184(find_module)
optparse.py:933(__init__)                                                       ->       5    0.000    0.000  optparse.py:960(set_conflict_handler)
                                                                                         5    0.000    0.000  optparse.py:965(set_description)
                                                                                         3    0.000    0.000  optparse.py:1097(_create_option_list)
                                                                                         2    0.000    0.000  optparse.py:1243(_create_option_list)
groebnertools.py:1(<module>)                                                    ->       1    0.000    0.000  six.py:184(find_module)
dia.py:1(<module>)                                                              ->       1    0.000    0.000  dia.py:14(dia_matrix)
{method 'all' of 'numpy.ndarray' objects}                                       ->       1    0.000    0.000  _methods.py:40(_all)
ikfast_generator_cpp.py:706(<lambda>)                                           ->
miscellaneous.py:20(__new__)                                                    ->       1    0.000    0.000  basic.py:82(__new__)
                                                                                         1    0.000    0.000  containers.py:30(__new__)
                                                                                         1    0.000    0.000  symbol.py:127(__new__)
pythonrealdomain.py:1(<module>)                                                 ->       1    0.000    0.000  pythonrealdomain.py:8(PythonRealDomain)
ikfast_generator_cpp.py:1754(endStoreSolution)                                  ->
__init__.py:447(get_build_platform)                                             ->       1    0.000    0.000  sysconfig.py:584(get_platform)
socket.py:183(_socketobject)                                                    ->
abc.py:15(abstractmethod)                                                       ->
rationalfield.py:1(<module>)                                                    ->       1    0.000    0.000  rationalfield.py:7(RationalField)
power.py:68(Pow)                                                                ->       2    0.000    0.000  cache.py:50(__cacheit)
six.py:80(_import_module)                                                       ->       4    0.000    0.000  {__import__}
function.py:152(Function)                                                       ->       1    0.000    0.000  cache.py:50(__cacheit)
                                                                                         1    0.000    0.000  decorators.py:23(deprecated)
repr.py:6(<module>)                                                             ->       1    0.000    0.000  repr.py:13(ReprPrinter)
machar.py:7(<module>)                                                           ->       1    0.000    0.000  machar.py:17(MachAr)
cache.py:297(__usecache)                                                        ->       1    0.000    0.000  os.py:512(getenv)
                                                                                         1    0.000    0.000  six.py:184(find_module)
                                                                                         1    0.000    0.000  {method 'lower' of 'str' objects}
ctx_mp_python.py:126(<lambda>)                                                  ->
numeric.py:2972(__exit__)                                                       ->       3    0.000    0.000  numeric.py:2576(seterr)
inversekinematics.py:655(<genexpr>)                                             ->       3    0.000    0.000  numeric.py:1835(array_str)
Shadow.py:88(locals)                                                            ->
optparse.py:580(_check_opt_strings)                                             ->      45    0.000    0.000  {filter}
ikfast_AST.py:373(__init__)                                                     ->
stride_tricks.py:7(<module>)                                                    ->       1    0.000    0.000  stride_tricks.py:15(DummyArray)
Shadow.py:85(_empty_decorator)                                                  ->
shape_base.py:1(<module>)                                                       ->
matfuncs.py:5(<module>)                                                         ->       2    0.000    0.000  getlimits.py:94(__new__)
getlimits.py:150(<lambda>)                                                      ->      12    0.000    0.000  getlimits.py:13(_frz)
                                                                                        12    0.000    0.000  {numpy.core.multiarray.array}
ssl.py:130(<dictcomp>)                                                          ->      91    0.000    0.000  {method 'startswith' of 'str' objects}
test_dataset_getitem.py:329(Test1DFloat)                                        ->       3    0.000    0.000  case.py:87(expectedFailure)
{built-in method now}                                                           ->
csc.py:1(<module>)                                                              ->       1    0.000    0.000  csc.py:17(csc_matrix)
decomp_lu.py:1(<module>)                                                        ->       1    0.000    0.000  six.py:184(find_module)
posixpath.py:153(samefile)                                                      ->       1    0.000    0.000  posixpath.py:173(samestat)
                                                                                         4    0.000    0.000  {posix.stat}
matrices.py:71(Matrix)                                                          ->
case.py:131(TestCase)                                                           ->       7    0.000    0.000  case.py:607(_deprecate)
mul.py:19(Mul)                                                                  ->       2    0.000    0.000  cache.py:50(__cacheit)
decorator.py:47(xthreaded)                                                      ->       2    0.000    0.000  decorator.py:4(threaded_factory)
ctx_iv.py:366(<lambda>)                                                         ->
risch.py:1(<module>)                                                            ->
getlimits.py:148(<lambda>)                                                      ->       4    0.000    0.000  {numpy.core.multiarray.array}
test_file.py:175(TestDrivers)                                                   ->       2    0.000    0.000  case.py:51(_id)
                                                                                         2    0.000    0.000  case.py:58(decorator)
                                                                                         4    0.000    0.000  case.py:78(skipUnless)
orthogonal.py:1(<module>)                                                       ->      12    0.000    0.000  functions.py:81(defun_wrapped)
                                                                                        16    0.000    0.000  functions.py:84(defun)
ikfast_generator_cpp.py:205(__init__)                                           ->       1    0.000    0.000  ikfast_generator_cpp.py:222(resetequations)
                                                                                         1    0.000    0.000  printer.py:190(__init__)
__init__.py:937(_open)                                                          ->       2    0.000    0.000  {open}
pretty_symbology.py:101(<lambda>)                                               ->      24    0.000    0.000  pretty_symbology.py:10(U)
                                                                                        24    0.000    0.000  {method 'upper' of 'str' objects}
optparse.py:981(_check_conflict)                                                ->
random.py:273(choice)                                                           ->      18    0.000    0.000  {len}
                                                                                        18    0.000    0.000  {method 'random' of '_random.Random' objects}
exponential.py:22(exp)                                                          ->       1    0.000    0.000  cache.py:50(__cacheit)
__init__.py:65(_getenv)                                                         ->       1    0.000    0.000  os.py:512(getenv)
                                                                                         1    0.000    0.000  six.py:184(find_module)
ctx_iv.py:358(_set_prec)                                                        ->       2    0.000    0.000  libmpf.py:59(prec_to_dps)
                                                                                         1    0.000    0.000  {max}
rszeta.py:49(<module>)                                                          ->       4    0.000    0.000  functions.py:84(defun)
                                                                                         2    0.000    0.000  rszeta.py:53(RSCache)
codecs.py:253(__init__)                                                         ->
libmpi.py:454(mpi_from_str)                                                     ->       8    0.000    0.000  libmpf.py:1284(from_str)
                                                                                         2    0.000    0.000  {method 'replace' of 'str' objects}
pythoncomplexdomain.py:1(<module>)                                              ->       1    0.000    0.000  pythoncomplexdomain.py:7(PythonComplexDomain)
decorators.py:6(<module>)                                                       ->       1    0.000    0.000  six.py:184(find_module)
optparse.py:200(__init__)                                                       ->       2    0.000    0.000  UserDict.py:35(__getitem__)
                                                                                         2    0.000    0.000  {max}
                                                                                         2    0.000    0.000  {min}
spherical_harmonics.py:1(<module>)                                              ->       1    0.000    0.000  symbol.py:127(__new__)
__init__.py:49(__init__)                                                        ->
ikfast_generator_cpp.py:1700(endRotation)                                       ->
ccompiler.py:1057(gen_lib_options)                                              ->       2    0.000    0.000  posixpath.py:82(split)
                                                                                         2    0.000    0.000  unixccompiler.py:251(library_option)
                                                                                         2    0.000    0.000  {method 'append' of 'list' objects}
polyclasses.py:283(coeffs)                                                      ->       2    0.000    0.000  densebasic.py:1636(dmp_list_terms)
function.py:74(Application)                                                     ->       1    0.000    0.000  cache.py:50(__cacheit)
_iotools.py:473(StringConverter)                                                ->       1    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                         1    0.000    0.000  {zip}
defchararray.py:1669(chararray)                                                 ->
{method 'partition' of 'unicode' objects}                                       ->
__init__.py:189(<lambda>)                                                       ->      53    0.000    0.000  {method 'startswith' of 'str' objects}
__init__.py:49(normalize_encoding)                                              ->       5    0.000    0.000  {hasattr}
                                                                                         5    0.000    0.000  {isinstance}
                                                                                         5    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         5    0.000    0.000  {method 'split' of 'str' objects}
                                                                                         5    0.000    0.000  {method 'translate' of 'str' objects}
libelefun.py:318(mpf_pow)                                                       ->       1    0.000    0.000  libmpf.py:1338(mpf_sqrt)
fromnumeric.py:127(reshape)                                                     ->       3    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
getlimits.py:149(<lambda>)                                                      ->       2    0.000    0.000  getlimits.py:13(_frz)
                                                                                         2    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
singleton.py:65(__new__)                                                        ->
__init__.py:177(_checkLevel)                                                    ->      22    0.000    0.000  {isinstance}
__init__.py:3130(_initialize)                                                   ->       1    0.000    0.000  __init__.py:1134(__init__)
                                                                                         1    0.000    0.000  {dir}
                                                                                        13    0.000    0.000  {getattr}
                                                                                        17    0.000    0.000  {method 'startswith' of 'str' objects}
tempfile.py:148(_candidate_tempdir_list)                                        ->       3    0.000    0.000  os.py:512(getenv)
                                                                                         1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                         1    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                         1    0.000    0.000  {posix.getcwd}
{posix.mkdir}                                                                   ->
expr.py:164(_from_mpmath)                                                       ->       4    0.000    0.000  numbers.py:319(_new)
                                                                                         4    0.000    0.000  {hasattr}
core.py:2521(_arraymethod)                                                      ->       9    0.000    0.000  {getattr}
pde.py:6(<module>)                                                              ->       1    0.000    0.000  six.py:184(find_module)
datatype.py:21(Datatype)                                                        ->       3    0.000    0.000  {h5py._objects.with_phil}
threading.py:542(Event)                                                         ->       1    0.000    0.000  threading.py:561(__init__)
recurr.py:44(<module>)                                                          ->
version.py:38(__init__)                                                         ->       1    0.000    0.000  version.py:104(parse)
six.py:114(_resolve)                                                            ->       3    0.000    0.000  six.py:80(_import_module)
ctx_mp_python.py:39(_mpf)                                                       ->
ctx_base.py:22(StandardBaseContext)                                             ->
approximation.py:1(<module>)                                                    ->       6    0.000    0.000  calculus.py:4(defun)
six.py:126(__init__)                                                            ->
assumptions.py:346(make__get_assumption)                                        ->
numeric.py:148(ones)                                                            ->       1    0.000    0.000  {numpy.core.multiarray.copyto}
                                                                                         1    0.000    0.000  {numpy.core.multiarray.empty}
ring.py:1(<module>)                                                             ->       1    0.000    0.000  ring.py:6(Ring)
numbers.py:1681(__new__)                                                        ->       6    0.000    0.000  basic.py:82(__new__)
ccompiler.py:830(shared_object_filename)                                        ->       4    0.000    0.000  posixpath.py:61(join)
numerictypes.py:181(english_capitalize)                                         ->      14    0.000    0.000  numerictypes.py:154(english_upper)
metaclass.py:4(__init__)                                                        ->
uu.py:31(<module>)                                                              ->       1    0.000    0.000  uu.py:39(Error)
<string>:8(__new__)                                                             ->     405    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
numerictypes.py:603(obj2sctype)                                                 ->       5    0.000    0.000  {isinstance}
                                                                                         3    0.000    0.000  {issubclass}
platform.py:1318(machine)                                                       ->       4    0.000    0.000  platform.py:1144(uname)
ssl.py:315(__new__)                                                             ->       2    0.000    0.000  {_ssl.txt2obj}
threading.py:242(Condition)                                                     ->       2    0.000    0.000  threading.py:260(__init__)
polyclasses.py:384(terms_gcd)                                                   ->       2    0.000    0.000  densebasic.py:1585(dmp_terms_gcd)
                                                                                         2    0.000    0.000  polyclasses.py:197(per)
densearith.py:1597(dup_quo)                                                     ->       1    0.000    0.000  densearith.py:1546(dup_div)
function.py:606(Derivative)                                                     ->       1    0.000    0.000  decorators.py:34(_sympifyit)
                                                                                         1    0.000    0.000  decorators.py:50(deco)
Shadow.py:302(PointerInstance)                                                  ->
exceptions.py:1(<module>)                                                       ->       1    0.000    0.000  exceptions.py:3(GeometryError)
modularinteger.py:1(<module>)                                                   ->       1    0.000    0.000  modularinteger.py:3(ModularInteger)
{method 'mro' of 'type' objects}                                                ->
version.py:104(parse)                                                           ->       1    0.000    0.000  {map}
                                                                                         1    0.000    0.000  {method 'group' of '_sre.SRE_Match' objects}
                                                                                         1    0.000    0.000  {method 'match' of '_sre.SRE_Pattern' objects}
test_dimension_scales.py:56(TestH5DSBindings)                                   ->       1    0.000    0.000  case.py:58(decorator)
                                                                                         1    0.000    0.000  case.py:78(skipUnless)
function_docs.py:3(<module>)                                                    ->
field.py:1(<module>)                                                            ->       1    0.000    0.000  field.py:6(Field)
euclidtools.py:1562(dup_gcd)                                                    ->       1    0.000    0.000  euclidtools.py:1476(dup_inner_gcd)
preview.py:1(<module>)                                                          ->       1    0.000    0.000  six.py:184(find_module)
hashlib.py:100(__get_openssl_constructor)                                       ->       1    0.000    0.000  {_hashlib.openssl_md5}
                                                                                         1    0.000    0.000  {_hashlib.openssl_sha1}
                                                                                         1    0.000    0.000  {_hashlib.openssl_sha224}
                                                                                         1    0.000    0.000  {_hashlib.openssl_sha256}
                                                                                         1    0.000    0.000  {_hashlib.openssl_sha384}
                                                                                         1    0.000    0.000  {_hashlib.openssl_sha512}
                                                                                         6    0.000    0.000  {getattr}
matrices.py:8(_matrix)                                                          ->
sysconfig.py:584(get_platform)                                                  ->       1    0.000    0.000  UserDict.py:103(__contains__)
                                                                                         1    0.000    0.000  {hasattr}
                                                                                         1    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                         3    0.000    0.000  {method 'replace' of 'str' objects}
                                                                                         1    0.000    0.000  {posix.uname}
numbers.py:1327(__new__)                                                        ->       3    0.000    0.000  basic.py:82(__new__)
mpmathcomplexdomain.py:1(<module>)                                              ->       1    0.000    0.000  mpmathcomplexdomain.py:5(MPmathComplexDomain)
numbers.py:295(Integral)                                                        ->      13    0.000    0.000  abc.py:15(abstractmethod)
common.py:4(<module>)                                                           ->       1    0.000    0.000  six.py:184(find_module)
decimal.py:505(Decimal)                                                         ->
numbers.py:973(Integer)                                                         ->       1    0.000    0.000  numbers.py:946(int_trace)
opcode.py:27(def_op)                                                            ->
numbers.py:34(Complex)                                                          ->      16    0.000    0.000  abc.py:15(abstractmethod)
ikfast_generator_cpp.py:1352(<lambda>)                                          ->
function.py:103(eval)                                                           ->
threading.py:576(set)                                                           ->       1    0.000    0.000  threading.py:285(__enter__)
                                                                                         1    0.000    0.000  threading.py:288(__exit__)
                                                                                         1    0.000    0.000  threading.py:400(notifyAll)
numerictypes.py:379(_set_up_aliases)                                            ->       1    0.000    0.000  {method 'extend' of 'list' objects}
source.py:3(<module>)                                                           ->
ctx_iv.py:132(ivmpc)                                                            ->
test_attribute_create.py:12(<module>)                                           ->       1    0.000    0.000  test_attribute_create.py:21(TestArray)
lsqr.py:50(<module>)                                                            ->       1    0.000    0.000  six.py:184(find_module)
pprint.py:35(<module>)                                                          ->       1    0.000    0.000  pprint.py:84(PrettyPrinter)
ikfast_generator_cpp.py:1663(endBreak)                                          ->
inequalities.py:1(<module>)                                                     ->
conventions.py:3(<module>)                                                      ->       1    0.000    0.000  six.py:184(find_module)
numeric.py:2676(geterr)                                                         ->       6    0.000    0.000  {numpy.core.umath.geterrobj}
test_dataset.py:91(TestCreateData)                                              ->       1    0.000    0.000  case.py:87(expectedFailure)
threading.py:631(Thread)                                                        ->       2    0.000    0.000  {method 'setter' of 'property' objects}
session.py:1(<module>)                                                          ->       1    0.000    0.000  six.py:184(find_module)
_version.py:7(<module>)                                                         ->       1    0.000    0.000  _version.py:18(NumpyVersion)
ctx_fp.py:28(<lambda>)                                                          ->
multidimensional.py:88(__call__)                                                ->       2    0.000    0.000  functools.py:17(update_wrapper)
                                                                                         2    0.000    0.000  functools.py:39(wraps)
{method 'strftime' of 'datetime.date' objects}                                  ->
optparse.py:694(_check_const)                                                   ->
inversekinematics.py:631(<genexpr>)                                             ->       6    0.000    0.000  numeric.py:1835(array_str)
ikfast_generator_cpp.py:1761(endSequence)                                       ->
polynomial.py:1517(Polynomial)                                                  ->       2    0.000    0.000  {numpy.core.multiarray.array}
selections2.py:12(<module>)                                                     ->       1    0.000    0.000  selections2.py:76(ScalarReadSelection)
timeutils.py:1(<module>)                                                        ->       1    0.000    0.000  six.py:184(find_module)
_methods.py:40(_all)                                                            ->       1    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
linalg.py:139(_commonType)                                                      ->       1    0.000    0.000  linalg.py:111(isComplexType)
                                                                                         1    0.000    0.000  linalg.py:124(_realType)
                                                                                         1    0.000    0.000  {issubclass}
__init__.py:139(<lambda>)                                                       ->      62    0.000    0.000  {method 'startswith' of 'str' objects}
pretty_symbology.py:179(<lambda>)                                               ->      15    0.000    0.000  pretty_symbology.py:10(U)
threading.py:561(__init__)                                                      ->       1    0.000    0.000  threading.py:59(__init__)
                                                                                         1    0.000    0.000  threading.py:242(Condition)
                                                                                         1    0.000    0.000  {thread.allocate_lock}
dir_util.py:3(<module>)                                                         ->       1    0.000    0.000  six.py:184(find_module)
pdb.py:59(Pdb)                                                                  ->
nanfunctions.py:19(<module>)                                                    ->
_methods.py:5(<module>)                                                         ->
pretty_symbology.py:144(<lambda>)                                               ->       8    0.000    0.000  pretty_symbology.py:10(U)
                                                                                         8    0.000    0.000  {method 'upper' of 'str' objects}
str.py:128(_print_ImaginaryUnit)                                                ->
test_dims_dimensionproxy.py:12(<module>)                                        ->       1    0.000    0.000  test_dims_dimensionproxy.py:21(TestItems)
symbol.py:13(Symbol)                                                            ->       1    0.000    0.000  cache.py:50(__cacheit)
{method 'remove' of 'set' objects}                                              ->
{method 'item' of 'numpy.ndarray' objects}                                      ->
sympyrealdomain.py:6(SymPyRealDomain)                                           ->       2    0.000    0.000  numbers.py:294(__new__)
_abcoll.py:98(__subclasshook__)                                                 ->
trigonometric.py:543(tan)                                                       ->       1    0.000    0.000  cache.py:50(__cacheit)
theta.py:1(<module>)                                                            ->      20    0.000    0.000  functions.py:84(defun)
optparse.py:1091(__init__)                                                      ->       3    0.000    0.000  optparse.py:933(__init__)
numerictypes.py:774(__getitem__)                                                ->       1    0.000    0.000  numerictypes.py:603(obj2sctype)
pretty_symbology.py:150(<lambda>)                                               ->      10    0.000    0.000  pretty_symbology.py:10(U)
tempfile.py:48(_set_cloexec)                                                    ->       4    0.000    0.000  {fcntl.fcntl}
operations.py:11(AssocOp)                                                       ->       1    0.000    0.000  cache.py:50(__cacheit)
threading.py:260(__init__)                                                      ->       2    0.000    0.000  threading.py:59(__init__)
repr.py:1(<module>)                                                             ->       1    0.000    0.000  repr.py:8(Repr)
                                                                                         1    0.000    0.000  repr.py:10(__init__)
inversekinematics.py:377(<genexpr>)                                             ->
dual.py:52(register_func)                                                       ->      12    0.000    0.000  {sys._getframe}
expressiondomain.py:20(__init__)                                                ->       2    0.000    0.000  sympify.py:23(sympify)
                                                                                         2    0.000    0.000  {isinstance}
ikfast_IKFastSolver.py:8895(<lambda>)                                           ->
ctx_iv.py:35(ivmpf)                                                             ->
rationaltools.py:1(<module>)                                                    ->
__init__.py:217(_declare_state)                                                 ->       4    0.000    0.000  {built-in method fromkeys}
                                                                                         4    0.000    0.000  {globals}
                                                                                         8    0.000    0.000  {method 'update' of 'dict' objects}
polyutils.py:116(_sort_factors)                                                 ->       3    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                         3    0.000    0.000  {sorted}
optparse.py:679(_check_dest)                                                    ->
inversekinematics.py:1291(<genexpr>)                                            ->
optparse.py:630(_check_action)                                                  ->
trigonometric.py:321(cos)                                                       ->       1    0.000    0.000  cache.py:50(__cacheit)
ctx_mp_python.py:357(_mpc)                                                      ->
util.py:5(<module>)                                                             ->
characteristiczero.py:1(<module>)                                               ->       1    0.000    0.000  characteristiczero.py:5(CharacteristicZero)
trigonometric.py:104(sin)                                                       ->       1    0.000    0.000  cache.py:50(__cacheit)
evalf.py:911(_create_evalf_table)                                               ->
cmd.py:46(<module>)                                                             ->       1    0.000    0.000  cmd.py:55(Cmd)
pretty_symbology.py:146(<lambda>)                                               ->      10    0.000    0.000  pretty_symbology.py:10(U)
{imp.release_lock}                                                              ->
hyperbolic.py:13(sinh)                                                          ->       1    0.000    0.000  cache.py:50(__cacheit)
simpledomain.py:1(<module>)                                                     ->       1    0.000    0.000  simpledomain.py:5(SimpleDomain)
bisect.py:1(<module>)                                                           ->       1    0.000    0.000  six.py:184(find_module)
test_file.py:12(<module>)                                                       ->       1    0.000    0.000  test_file.py:28(TestDealloc)
optparse.py:779(process)                                                        ->       3    0.000    0.000  optparse.py:772(convert_value)
                                                                                         3    0.000    0.000  optparse.py:791(take_action)
calendar.py:47(_localized_month)                                                ->       1    0.000    0.000  {method 'insert' of 'list' objects}
                                                                                         1    0.000    0.000  {range}
exponential.py:282(log)                                                         ->       1    0.000    0.000  cache.py:50(__cacheit)
ccompiler.py:813(object_filenames)                                              ->       1    0.000    0.000  posixpath.py:52(isabs)
                                                                                         1    0.000    0.000  posixpath.py:61(join)
                                                                                         1    0.000    0.000  posixpath.py:97(splitext)
                                                                                         1    0.000    0.000  posixpath.py:104(splitdrive)
                                                                                         1    0.000    0.000  {method 'append' of 'list' objects}
test_threads.py:12(<module>)                                                    ->       1    0.000    0.000  test_threads.py:22(TestErrorPrinting)
dep_util.py:5(<module>)                                                         ->       1    0.000    0.000  six.py:184(find_module)
polynomialring.py:66(from_ZZ_python)                                            ->       2    0.000    0.000  domain.py:69(convert)
                                                                                         2    0.000    0.000  polynomialring.py:38(__call__)
optparse.py:700(_check_nargs)                                                   ->
test_datatype.py:3(<module>)                                                    ->       1    0.000    0.000  test_datatype.py:12(TestVlen)
copy_reg.py:14(pickle)                                                          ->       2    0.000    0.000  copy_reg.py:27(constructor)
                                                                                         3    0.000    0.000  {hasattr}
{method 'astype' of 'numpy.ndarray' objects}                                    ->
{_struct.calcsize}                                                              ->
{_ssl.txt2obj}                                                                  ->
polyroots.py:519(_update_dict)                                                  ->       8    0.000    0.000  basic.py:179(__hash__)
hyperbolic.py:266(tanh)                                                         ->       1    0.000    0.000  cache.py:50(__cacheit)
compositedomain.py:1(<module>)                                                  ->       1    0.000    0.000  compositedomain.py:6(CompositeDomain)
pretty_symbology.py:335(<lambda>)                                               ->      15    0.000    0.000  pretty_symbology.py:10(U)
Shadow.py:328(__init__)                                                         ->
__init__.py:3053(cls)                                                           ->
numbers.py:1321(__new__)                                                        ->       4    0.000    0.000  basic.py:82(__new__)
test_dataset_getitem.py:276(Test1DZeroFloat)                                    ->       1    0.000    0.000  case.py:87(expectedFailure)
__init__.py:2523(_reload_version)                                               ->
ctx_iv.py:276(MPIntervalContext)                                                ->
six.py:195(load_module)                                                         ->       3    0.000    0.000  six.py:189(__get_module)
                                                                                         1    0.000    0.000  {isinstance}
ctx_iv.py:126(__neg__)                                                          ->       2    0.000    0.000  ctx_iv.py:366(<lambda>)
                                                                                         2    0.000    0.000  ctx_iv.py:369(make_mpf)
                                                                                         2    0.000    0.000  libmpi.py:96(mpi_neg)
specifiers.py:31(BaseSpecifier)                                                 ->       6    0.000    0.000  abc.py:15(abstractmethod)
                                                                                         1    0.000    0.000  {method 'setter' of 'property' objects}
ctx_base.py:451(memoize)                                                        ->
test_dataset.py:654(TestStrings)                                                ->       1    0.000    0.000  case.py:87(expectedFailure)
polynomials.py:1(<module>)                                                      ->       4    0.000    0.000  calculus.py:4(defun)
ctx_mp.py:52(MPContext)                                                         ->
ctx_iv.py:327(_wrap_mpi_function)                                               ->
{method '__contains__' of 'frozenset' objects}                                  ->
error_functions.py:9(erf)                                                       ->       1    0.000    0.000  cache.py:50(__cacheit)
minres.py:1(<module>)                                                           ->       1    0.000    0.000  iterative.py:66(set_docstring)
                                                                                         1    0.000    0.000  iterative.py:67(combine)
{posix.WIFEXITED}                                                               ->
zipfile.py:709(ZipFile)                                                         ->       1    0.000    0.000  {method 'setter' of 'property' objects}
inversekinematics.py:227(InverseKinematicsModel)                                ->       1    0.000    0.000  inversekinematics.py:231(ArmVisibility)
os.py:472(__setitem__)                                                          ->       2    0.000    0.000  {posix.putenv}
{numpy.core.umath.seterrobj}                                                    ->
construct.py:2(<module>)                                                        ->
{numpy.core.multiarray.zeros}                                                   ->
StringIO.py:30(<module>)                                                        ->       1    0.000    0.000  StringIO.py:42(StringIO)
dual.py:12(<module>)                                                            ->
hyperbolic.py:140(cosh)                                                         ->       1    0.000    0.000  cache.py:50(__cacheit)
numbers.py:169(Real)                                                            ->       8    0.000    0.000  abc.py:15(abstractmethod)
optparse.py:709(_check_callback)                                                ->       2    0.000    0.000  {hasattr}
ikfast_IKFastSolver.py:8762(<lambda>)                                           ->
rootoftools.py:83(RootOf)                                                       ->
symbol.py:140(Wild)                                                             ->       1    0.000    0.000  cache.py:50(__cacheit)
{method 'rjust' of 'str' objects}                                               ->
defmatrix.py:208(matrix)                                                        ->
__init__.py:1998(__init__)                                                      ->
grasping.py:194(GraspingModel)                                                  ->       1    0.000    0.000  grasping.py:204(GripperVisibility)
hyperbolic.py:395(coth)                                                         ->       1    0.000    0.000  cache.py:50(__cacheit)
trigonometric.py:918(asin)                                                      ->       1    0.000    0.000  cache.py:50(__cacheit)
polytools.py:3461(PurePoly)                                                     ->       1    0.000    0.000  decorators.py:34(_sympifyit)
                                                                                         1    0.000    0.000  decorators.py:50(deco)
partitions_.py:1(<module>)                                                      ->
numbers.py:946(int_trace)                                                       ->       1    0.000    0.000  os.py:512(getenv)
                                                                                         1    0.000    0.000  {method 'lower' of 'str' objects}
factor_.py:162(multiplicity)                                                    ->       7    0.000    0.000  {divmod}
__init__.py:2490(Distribution)                                                  ->
base.py:156(_RegionProxy)                                                       ->       1    0.000    0.000  {h5py._objects.with_phil}
factor_.py:1117(primefactors)                                                   ->       1    0.000    0.000  factor_.py:726(factorint)
                                                                                         1    0.000    0.000  primetest.py:157(isprime)
                                                                                         1    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                         1    0.000    0.000  {sorted}
libmpf.py:961(mpf_rdiv_int)                                                     ->       2    0.000    0.000  libintmath.py:83(python_bitcount)
                                                                                         2    0.000    0.000  libmpf.py:208(_normalize1)
                                                                                         2    0.000    0.000  {divmod}
base.py:44(spmatrix)                                                            ->
os.py:496(__delitem__)                                                          ->       2    0.000    0.000  {posix.unsetenv}
unicode_escape.py:36(getregentry)                                               ->       1    0.000    0.000  codecs.py:92(__new__)
decimal.py:3816(<genexpr>)                                                      ->
constructor.py:1(<module>)                                                      ->
{posix.close}                                                                   ->
numeric.py:2963(__init__)                                                       ->       3    0.000    0.000  {method 'pop' of 'dict' objects}
ccompiler.py:23(CCompiler)                                                      ->
trigonometric.py:1035(acos)                                                     ->       1    0.000    0.000  cache.py:50(__cacheit)
inversekinematics.py:598(<genexpr>)                                             ->       4    0.000    0.000  numeric.py:1835(array_str)
function.py:797(Lambda)                                                         ->       1    0.000    0.000  decorators.py:23(deprecated)
<string>:1(Mismatch)                                                            ->
fractions.py:280(_operator_fallbacks)                                           ->
__init__.py:11(<lambda>)                                                        ->      40    0.000    0.000  {method 'startswith' of 'str' objects}
<string>:1(Attribute)                                                           ->
numbers.py:1134(_eval_is_odd)                                                   ->
trigonometric.py:744(cot)                                                       ->       1    0.000    0.000  cache.py:50(__cacheit)
random.py:72(Random)                                                            ->
domain.py:13(Domain)                                                            ->
hyperbolic.py:520(asinh)                                                        ->       1    0.000    0.000  cache.py:50(__cacheit)
UserDict.py:35(__getitem__)                                                     ->       2    0.000    0.000  {hasattr}
test_group.py:772(TestCopy)                                                     ->      10    0.000    0.000  case.py:51(_id)
                                                                                        10    0.000    0.000  case.py:70(skipIf)
primetest.py:157(isprime)                                                       ->       6    0.000    0.000  {pow}
bsplines.py:1(<module>)                                                         ->
libmpf.py:1284(from_str)                                                        ->       4    0.000    0.000  {method 'strip' of 'str' objects}
highlevel.py:17(<module>)                                                       ->
six.py:469(Module_six_moves_urllib)                                             ->      10    0.000    0.000  six.py:181(_get_module)
polyoptions.py:593(default)                                                     ->
primetest.py:4(<module>)                                                        ->
rational.py:24(mpq)                                                             ->
boolalg.py:133(eval)                                                            ->       4    0.000    0.000  basic.py:82(__new__)
{numpy.core.multiarray.copyto}                                                  ->
__future__.py:48(<module>)                                                      ->       1    0.000    0.000  __future__.py:74(_Feature)
                                                                                         7    0.000    0.000  __future__.py:75(__init__)
helper.py:4(<module>)                                                           ->
arraypad.py:5(<module>)                                                         ->
runtests.py:472(SymPyTests)                                                     ->       1    0.000    0.000  {method 'random' of '_random.Random' objects}
{imp.acquire_lock}                                                              ->
collections.py:38(OrderedDict)                                                  ->
<string>:1(Match)                                                               ->
test_base.py:47(TestRepr)                                                       ->       1    0.000    0.000  case.py:51(_id)
                                                                                         1    0.000    0.000  case.py:70(skipIf)
                                                                                         2    0.000    0.000  {unichr}
ctx_mp_python.py:581(PythonMPContext)                                           ->
tempfile.py:519(SpooledTemporaryFile)                                           ->
<string>:1(_Version)                                                            ->
gammazeta.py:394(bernoulli_size)                                                ->       1    0.000    0.000  {math.log}
threading.py:400(notifyAll)                                                     ->       1    0.000    0.000  threading.py:373(notify)
                                                                                         1    0.000    0.000  {len}
numerictypes.py:860(<lambda>)                                                   ->       1    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                         1    0.000    0.000  {numpy.core.multiarray.array}
ikfast_generator_cpp.py:1359(<lambda>)                                          ->
log.py:39(info)                                                                 ->       2    0.000    0.000  log.py:19(_log)
factor_.py:135(trailing)                                                        ->
{fcntl.fcntl}                                                                   ->
bdb.py:14(Bdb)                                                                  ->
polyclasses.py:1300(ANP)                                                        ->
polyclasses.py:912(DMF)                                                         ->
hyperbolic.py:593(acosh)                                                        ->       1    0.000    0.000  cache.py:50(__cacheit)
ssl.py:505(_get_https_context_factory)                                          ->       1    0.000    0.000  UserDict.py:91(get)
hermite_e.py:1812(HermiteE)                                                     ->       2    0.000    0.000  {numpy.core.multiarray.array}
ssl.py:524(SSLSocket)                                                           ->       1    0.000    0.000  {method 'setter' of 'property' objects}
arraysetops.py:26(<module>)                                                     ->
sputils.py:2(<module>)                                                          ->
sympyintegerring.py:8(SymPyIntegerRing)                                         ->       2    0.000    0.000  numbers.py:989(__new__)
deltafunctions.py:1(<module>)                                                   ->
financial.py:10(<module>)                                                       ->
_inspect.py:7(<module>)                                                         ->
math2.py:27(_mathfun_real)                                                      ->
hyperbolic.py:697(atanh)                                                        ->       1    0.000    0.000  cache.py:50(__cacheit)
<string>:1(ParseResult)                                                         ->
ikfast_generator_cpp.py:201(CodeGenerator)                                      ->
laguerre.py:1765(Laguerre)                                                      ->       2    0.000    0.000  {numpy.core.multiarray.array}
decomp_svd.py:1(<module>)                                                       ->
{math.exp}                                                                      ->
{binascii.hexlify}                                                              ->
densebasic.py:1585(dmp_terms_gcd)                                               ->       2    0.000    0.000  densebasic.py:80(dmp_ground_TC)
                                                                                         2    0.000    0.000  polyclasses.py:905(__nonzero__)
core.py:6104(MaskedConstant)                                                    ->       2    0.000    0.000  {numpy.core.multiarray.array}
{posix.uname}                                                                   ->
getlimits.py:13(_frz)                                                           ->
opcode.py:31(name_op)                                                           ->      11    0.000    0.000  opcode.py:27(def_op)
                                                                                        11    0.000    0.000  {method 'append' of 'list' objects}
trigonometric.py:1254(acot)                                                     ->       1    0.000    0.000  cache.py:50(__cacheit)
ccompiler.py:408(_fix_object_args)                                              ->       1    0.000    0.000  {isinstance}
{posix.putenv}                                                                  ->
{posix.getcwd}                                                                  ->
pretty.py:17(PrettyPrinter)                                                     ->
__init__.py:1591(__init__)                                                      ->       1    0.000    0.000  posixpath.py:120(dirname)
                                                                                         2    0.000    0.000  {getattr}
tokenize.py:45(group)                                                           ->      19    0.000    0.000  {method 'join' of 'str' objects}
{_ctypes.sizeof}                                                                ->
index_tricks.py:242(__init__)                                                   ->
functions.py:3(SpecialFunctions)                                                ->
legendre.py:1795(Legendre)                                                      ->       2    0.000    0.000  {numpy.core.multiarray.array}
ikfast_generator_cpp.py:654(GetIkFunctionPreamble)                              ->       1    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {range}
inversereachability.py:77(InverseReachabilityModel)                             ->
__init__.py:587(__init__)                                                       ->
latex.py:18(LatexPrinter)                                                       ->
__init__.py:9(<lambda>)                                                         ->      18    0.000    0.000  {method 'startswith' of 'str' objects}
{numpy.core.multiarray.promote_types}                                           ->
hyperbolic.py:763(acoth)                                                        ->       1    0.000    0.000  cache.py:50(__cacheit)
{method 'setter' of 'property' objects}                                         ->
trigonometric.py:1142(atan)                                                     ->       1    0.000    0.000  cache.py:50(__cacheit)
chebyshev.py:2041(Chebyshev)                                                    ->       2    0.000    0.000  {numpy.core.multiarray.array}
refine.py:1(<module>)                                                           ->
libelefun.py:106(def_mpf_constant)                                              ->
inspect.py:67(ismethod)                                                         ->       7    0.000    0.000  {isinstance}
iterative.py:67(combine)                                                        ->       5    0.000    0.000  {method 'join' of 'str' objects}
                                                                                         5    0.000    0.000  {method 'replace' of 'str' objects}
decorators.py:34(_sympifyit)                                                    ->
str.py:16(StrPrinter)                                                           ->
linalg.py:106(_makearray)                                                       ->       1    0.000    0.000  numeric.py:414(asarray)
                                                                                         1    0.000    0.000  {getattr}
rszeta.py:54(__init__)                                                          ->
py3k.py:4(<module>)                                                             ->
numbers.py:165(_eval_conjugate)                                                 ->
numbers.py:106(Number)                                                          ->
pretty_symbology.py:145(<lambda>)                                               ->       5    0.000    0.000  pretty_symbology.py:10(U)
                                                                                         5    0.000    0.000  {method 'upper' of 'str' objects}
compressed.py:17(_cs_matrix)                                                    ->
ikfast_generator_cpp.py:1614(endBranchConds)                                    ->
decimal.py:3763(Context)                                                        ->
line.py:21(LinearEntity)                                                        ->
densebasic.py:1556(dup_terms_gcd)                                               ->       3    0.000    0.000  densebasic.py:35(poly_TC)
<string>:1(DefaultVerifyPaths)                                                  ->
__init__.py:1584(NullProvider)                                                  ->
__init__.py:8(<lambda>)                                                         ->      16    0.000    0.000  {method 'startswith' of 'str' objects}
ctx_mp_python.py:328(_constant)                                                 ->
{vars}                                                                          ->
ikfast_AST.py:186(end)                                                          ->       3    0.000    0.000  ikfast_generator_cpp.py:1432(endPolynomialRoots)
six.py:159(_resolve)                                                            ->       3    0.000    0.000  six.py:80(_import_module)
                                                                                         2    0.000    0.000  {getattr}
misc.py:147(<genexpr>)                                                          ->      14    0.000    0.000  {method 'lower' of 'str' objects}
decomp_cholesky.py:1(<module>)                                                  ->
rootoftools.py:480(RootSum)                                                     ->
polytools.py:3129(is_ground)                                                    ->       2    0.000    0.000  polyclasses.py:759(is_ground)
threading.py:59(__init__)                                                       ->
dok.py:21(dok_matrix)                                                           ->
{thread.allocate_lock}                                                          ->
__init__.py:46(DatabaseGenerator)                                               ->
optparse.py:1336(add_option_group)                                              ->       3    0.000    0.000  {isinstance}
                                                                                         3    0.000    0.000  {len}
                                                                                         3    0.000    0.000  {method 'append' of 'list' objects}
ccompiler.py:426(_fix_lib_args)                                                 ->       1    0.000    0.000  {isinstance}
extras.py:1414(__init__)                                                        ->       1    0.000    0.000  extras.py:1344(__init__)
optparse.py:1313(_get_all_options)                                              ->       5    0.000    0.000  {method 'extend' of 'list' objects}
assume.py:117(_hashable_content)                                                ->
ellipse.py:22(Ellipse)                                                          ->
<string>:1(Traceback)                                                           ->
getlimits.py:270(max)                                                           ->
__init__.py:1387(MarkerEvaluation)                                              ->       1    0.000    0.000  {globals}
keyword.py:11(<module>)                                                         ->
debug.py:1(<module>)                                                            ->       1    0.000    0.000  UserDict.py:91(get)
polyoptions.py:272(Wrt)                                                         ->       1    0.000    0.000  re.py:192(compile)
base.py:73(default_lcpl)                                                        ->
core.py:94(doc_note)                                                            ->
visibilitymodel.py:90(VisibilityModel)                                          ->       1    0.000    0.000  visibilitymodel.py:95(GripperVisibility)
__init__.py:1393(__init__)                                                      ->       1    0.000    0.000  __init__.py:1127(__init__)
<string>:1(SplitResult)                                                         ->
{method 'isdigit' of 'str' objects}                                             ->
pretty_symbology.py:176(<lambda>)                                               ->       4    0.000    0.000  pretty_symbology.py:10(U)
log.py:1(<module>)                                                              ->       1    0.000    0.000  log.py:14(Log)
                                                                                         1    0.000    0.000  log.py:16(__init__)
colorize.py:13(ColorizingStreamHandler)                                         ->
hermite.py:1815(Hermite)                                                        ->       2    0.000    0.000  {numpy.core.multiarray.array}
polygon.py:859(RegularPolygon)                                                  ->
__init__.py:63(install)                                                         ->       1    0.000    0.000  {method 'append' of 'list' objects}
atexit.py:6(<module>)                                                           ->       1    0.000    0.000  {hasattr}
pretty_symbology.py:180(<lambda>)                                               ->       4    0.000    0.000  pretty_symbology.py:10(U)
iterators.py:5(<module>)                                                        ->
trigonometric.py:533(_eval_is_bounded)                                          ->       2    0.000    0.000  assumptions.py:365(getit)
                                                                                         2    0.000    0.000  basic.py:647(args)
numeric.py:1871(set_string_function)                                            ->       2    0.000    0.000  {numpy.core.multiarray.set_string_function}
data.py:16(_data_matrix)                                                        ->
<string>:1(ArgInfo)                                                             ->
gmpyrationalfield.py:13(GMPYRationalField)                                      ->       2    0.000    0.000  groundtypes.py:58(__init__)
assume.py:126(add_handler)                                                      ->      18    0.000    0.000  {method 'append' of 'list' objects}
{posix.unsetenv}                                                                ->
case.py:70(skipIf)                                                              ->       2    0.000    0.000  case.py:54(skip)
quopri.py:3(<module>)                                                           ->
integrals.py:88(Integral)                                                       ->
__config__.py:3(<module>)                                                       ->
matrices.py:733(MatrixMethods)                                                  ->
optparse.py:666(_check_choice)                                                  ->
unixccompiler.py:48(UnixCCompiler)                                              ->
<string>:1(manifest_mod)                                                        ->
<string>:1(ArgSpec)                                                             ->
polygon.py:15(Polygon)                                                          ->
fcode.py:33(FCodePrinter)                                                       ->
convexdecomposition.py:109(ConvexDecompositionModel)                            ->
common.py:50(TestCase)                                                          ->       1    0.000    0.000  {hasattr}
opcode.py:35(jrel_op)                                                           ->       6    0.000    0.000  opcode.py:27(def_op)
                                                                                         6    0.000    0.000  {method 'append' of 'list' objects}
residue_ntheory.py:1(<module>)                                                  ->
libmpi.py:96(mpi_neg)                                                           ->       4    0.000    0.000  libmpf.py:637(mpf_neg)
linalg.py:110(LinearAlgebraMethods)                                             ->
bsr.py:19(bsr_matrix)                                                           ->
libintmath.py:39(rshift)                                                        ->
numbers.py:33(fibonacci)                                                        ->       2    0.000    0.000  memoization.py:1(recurrence_memo)
                                                                                         2    0.000    0.000  memoization.py:8(decorator)
printer.py:76(Printer)                                                          ->
<string>:1(_ASN1Object)                                                         ->
{method 'reshape' of 'numpy.ndarray' objects}                                   ->
threading.py:373(notify)                                                        ->       1    0.000    0.000  threading.py:64(_note)
                                                                                         1    0.000    0.000  threading.py:300(_is_owned)
copy_reg.py:27(constructor)                                                     ->       3    0.000    0.000  {hasattr}
extras.py:1344(__init__)                                                        ->       1    0.000    0.000  index_tricks.py:242(__init__)
__init__.py:75(__init__)                                                        ->
pretty_symbology.py:151(<lambda>)                                               ->       5    0.000    0.000  pretty_symbology.py:10(U)
six.py:75(_add_doc)                                                             ->
pythonrationalfield.py:11(PythonRationalField)                                  ->       2    0.000    0.000  pythonrationaltype.py:26(__init__)
ufunclike.py:5(<module>)                                                        ->
ctx_mp.py:57(MPContext)                                                         ->
linalg_version.py:1(<module>)                                                   ->       1    0.000    0.000  {locals}
collections.py:407(Counter)                                                     ->
sqrtdenest.py:1(<module>)                                                       ->
decorator.py:1(<module>)                                                        ->
pythonrationaltype.py:7(PythonRationalType)                                     ->
polynomial.py:940(poly1d)                                                       ->
{math.atan}                                                                     ->
multidimensional.py:5(<module>)                                                 ->       1    0.000    0.000  multidimensional.py:57(vectorize)
__init__.py:610(WorkingSet)                                                     ->
ikfast_generator_cpp.py:1393(<lambda>)                                          ->
{numpy.core.umath.geterrobj}                                                    ->
selections.py:118(Selection)                                                    ->
facts.py:385(Prover)                                                            ->
test_dataset_getitem.py:443(Test2DZeroFloat)                                    ->       1    0.000    0.000  case.py:87(expectedFailure)
facts.py:753(<genexpr>)                                                         ->
_version.py:18(NumpyVersion)                                                    ->
<string>:1(ModuleInfo)                                                          ->
warnings.py:96(simplefilter)                                                    ->       1    0.000    0.000  {isinstance}
                                                                                         1    0.000    0.000  {method 'insert' of 'list' objects}
doctest.py:128(register_optionflag)                                             ->      10    0.000    0.000  {len}
                                                                                        10    0.000    0.000  {method 'setdefault' of 'dict' objects}
math2.py:42(_mathfun)                                                           ->
trigonometric.py:530(_eval_is_real)                                             ->       4    0.000    0.000  assumptions.py:365(getit)
                                                                                         4    0.000    0.000  basic.py:647(args)
decimal.py:3809(<genexpr>)                                                      ->
getlimits.py:195(iinfo)                                                         ->
numbers.py:272(bell)                                                            ->       2    0.000    0.000  memoization.py:1(recurrence_memo)
                                                                                         2    0.000    0.000  memoization.py:8(decorator)
file_util.py:4(<module>)                                                        ->
core.py:6111(__new__)                                                           ->       1    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
<string>:1(TestResults)                                                         ->
<string>:1(DecimalTuple)                                                        ->
csgraph.py:1(<module>)                                                          ->
ikfast_IKFastSolver.py:8845(<lambda>)                                           ->
precedence.py:1(<module>)                                                       ->
sets.py:402(Interval)                                                           ->
ikfast_generator_cpp.py:1693(<lambda>)                                          ->
lgmres.py:4(<module>)                                                           ->
optparse.py:791(take_action)                                                    ->       1    0.000    0.000  openrave.py:54(vararg_callback)
                                                                                         2    0.000    0.000  {setattr}
{math.log10}                                                                    ->
six.py:164(_SixMetaPathImporter)                                                ->
math2.py:53(_mathfun_n)                                                         ->
_internal.py:226(_ctypes)                                                       ->
ikfast_generator_cpp.py:690(<lambda>)                                           ->
_iotools.py:250(NameValidator)                                                  ->
<string>:1(Arguments)                                                           ->
TaskManipulation.py:26(TaskManipulation)                                        ->       1    0.000    0.000  TaskManipulation.py:304(SwitchState)
hyperexpand.py:422(Formula)                                                     ->
__init__.py:1818(ZipProvider)                                                   ->
specifiers.py:88(_IndividualSpecifier)                                          ->       1    0.000    0.000  {method 'setter' of 'property' objects}
fnmatch.py:11(<module>)                                                         ->
function.py:900(Subs)                                                           ->
_compat.py:14(<module>)                                                         ->
ctx_iv.py:264(ivmpf_constant)                                                   ->
indexed.py:114(IndexedBase)                                                     ->
threading.py:125(_RLock)                                                        ->
iterables.py:659(<lambda>)                                                      ->
mathml.py:11(MathMLPrinter)                                                     ->
string.py:394(atoi)                                                             ->
tempfile.py:221(_get_candidate_names)                                           ->       1    0.000    0.000  tempfile.py:120(__init__)
                                                                                         1    0.000    0.000  {method 'acquire' of 'thread.lock' objects}
                                                                                         1    0.000    0.000  {method 'release' of 'thread.lock' objects}
pythonintegerring.py:12(PythonIntegerRing)                                      ->
fractionfield.py:11(FractionField)                                              ->
numeric.py:2978(_setdef)                                                        ->       1    0.000    0.000  {numpy.core.umath.seterrobj}
case.py:607(_deprecate)                                                         ->
generate.py:22(Sieve)                                                           ->
inspect.py:142(isfunction)                                                      ->       7    0.000    0.000  {isinstance}
nonlin.py:639(LowRankMatrix)                                                    ->
sets.py:989(FiniteSet)                                                          ->
optparse.py:765(check_value)                                                    ->       4    0.000    0.000  {method 'get' of 'dict' objects}
linkstatistics.py:84(LinkStatisticsModel)                                       ->
__init__.py:1139(setLevel)                                                      ->       2    0.000    0.000  __init__.py:177(_checkLevel)
factor_.py:640(done)                                                            ->
polyoptions.py:70(Options)                                                      ->
functions.py:87(defun_static)                                                   ->       1    0.000    0.000  {setattr}
polyclasses.py:295(all_coeffs)                                                  ->       2    0.000    0.000  polyclasses.py:905(__nonzero__)
modularinteger.py:3(ModularInteger)                                             ->
__init__.py:62(<lambda>)                                                        ->      15    0.000    0.000  {method 'startswith' of 'str' objects}
optparse.py:1097(_create_option_list)                                           ->       3    0.000    0.000  optparse.py:953(_share_option_mappings)
sets.py:7(AskIntegerHandler)                                                    ->
encoders.py:5(<module>)                                                         ->
bessel.py:151(besseli)                                                          ->       1    0.000    0.000  numbers.py:1393(__neg__)
arrayterator.py:20(Arrayterator)                                                ->
__init__.py:656(Handler)                                                        ->
case.py:54(skip)                                                                ->
weakref.py:297(__init__)                                                        ->
{method 'random' of '_random.Random' objects}                                   ->
expressiondomain.py:15(Expression)                                              ->
misc.py:125(OpenRAVEGlobalArguments)                                            ->
__init__.py:9(__init__)                                                         ->       1    0.000    0.000  {method 'replace' of 'str' objects}
calendar.py:66(_localized_day)                                                  ->       1    0.000    0.000  {range}
point.py:17(Point)                                                              ->
lil.py:15(lil_matrix)                                                           ->
ikfast_generator_cpp.py:222(resetequations)                                     ->
repr.py:13(ReprPrinter)                                                         ->
stringpict.py:17(stringPict)                                                    ->
polyclasses.py:759(is_ground)                                                   ->       2    0.000    0.000  densebasic.py:729(dmp_ground_p)
operations.py:288(LatticeOp)                                                    ->
string.py:250(strip)                                                            ->       1    0.000    0.000  {method 'strip' of 'str' objects}
index_tricks.py:470(__init__)                                                   ->       1    0.000    0.000  index_tricks.py:242(__init__)
pythoncomplexdomain.py:7(PythonComplexDomain)                                   ->
ccompiler.py:1008(gen_preprocess_options)                                       ->       2    0.000    0.000  {isinstance}
                                                                                         6    0.000    0.000  {len}
                                                                                         2    0.000    0.000  {method 'append' of 'list' objects}
line.py:876(Ray)                                                                ->
{posix.WIFSIGNALED}                                                             ->
{method '__subclasshook__' of 'object' objects}                                 ->
__init__.py:1112(Logger)                                                        ->
entity.py:26(GeometryEntity)                                                    ->
tempfile.py:120(__init__)                                                       ->       2    0.000    0.000  {thread.allocate_lock}
Shadow.py:214(__init__)                                                         ->       2    0.000    0.000  {isinstance}
__init__.py:1595(get_resource_filename)                                         ->       1    0.000    0.000  __init__.py:1673(_fn)
rootisolation.py:1587(RealInterval)                                             ->
codecs.py:92(__new__)                                                           ->       1    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
ikfast_AST.py:16(SolverSolution)                                                ->
numbers.py:1452(__abs__)                                                        ->
loader.py:38(TestLoader)                                                        ->
_internal.py:200(_getintp_ctype)                                                ->
inversekinematics.py:363(getversion)                                            ->
series.py:1(<module>)                                                           ->
matrices.py:984(<genexpr>)                                                      ->
tempfile.py:108(_RandomNameSequence)                                            ->
six.py:103(MovedModule)                                                         ->
common.py:33(TestCase)                                                          ->       1    0.000    0.000  {hasattr}
ctx_iv.py:265(__new__)                                                          ->      11    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
info.py:86(<module>)                                                            ->
numbers.py:1668(NumberSymbol)                                                   ->
ImageMode.py:17(<module>)                                                       ->       1    0.000    0.000  ImageMode.py:22(ModeDescriptor)
runner.py:119(TextTestRunner)                                                   ->
codecs.py:1001(getwriter)                                                       ->       1    0.000    0.000  {_codecs.lookup}
specifiers.py:599(SpecifierSet)                                                 ->       1    0.000    0.000  {method 'setter' of 'property' objects}
multidimensional.py:77(__init__)                                                ->       2    0.000    0.000  {isinstance}
ctx_mp_python.py:605(default)                                                   ->
index_tricks.py:447(__init__)                                                   ->       1    0.000    0.000  index_tricks.py:242(__init__)
{locals}                                                                        ->
log.py:19(_log)                                                                 ->
finitefield.py:10(FiniteField)                                                  ->
__init__.py:1130(ResourceManager)                                               ->
linalg.py:209(_assertNdSquareness)                                              ->       1    0.000    0.000  {max}
                                                                                         1    0.000    0.000  {min}
gmpyintegerring.py:13(GMPYIntegerRing)                                          ->       2    0.000    0.000  groundtypes.py:54(__init__)
coo.py:16(coo_matrix)                                                           ->
core.py:5902(mvoid)                                                             ->
ccode.py:24(CCodePrinter)                                                       ->
{method '__contains__' of 'set' objects}                                        ->       8    0.000    0.000  basic.py:179(__hash__)
optparse.py:756(get_opt_string)                                                 ->
__init__.py:1401(LoggerAdapter)                                                 ->
sets.py:176(AskRealHandler)                                                     ->
hyper.py:38(hyper)                                                              ->
algebraicfield.py:12(AlgebraicField)                                            ->
bessel.py:385(c_memo)                                                           ->
polynomialring.py:11(PolynomialRing)                                            ->
{id}                                                                            ->
numbers.py:1457(Infinity)                                                       ->
calendar.py:132(__init__)                                                       ->       1    0.000    0.000  calendar.py:138(setfirstweekday)
gamma_functions.py:15(gamma)                                                    ->
runner.py:28(TextTestResult)                                                    ->
numberfields.py:392(AlgebraicNumber)                                            ->
numbers.py:1331(Zero)                                                           ->
numbers.py:1643(__new__)                                                        ->       1    0.000    0.000  basic.py:82(__new__)
__init__.py:5(<lambda>)                                                         ->      21    0.000    0.000  {method 'startswith' of 'str' objects}
__about__.py:14(<module>)                                                       ->
__init__.py:347(Formatter)                                                      ->
usertools.py:2(<module>)                                                        ->
test_dataset.py:818(TestFloats)                                                 ->       1    0.000    0.000  case.py:51(_id)
                                                                                         1    0.000    0.000  case.py:78(skipUnless)
                                                                                         1    0.000    0.000  {hasattr}
StringIO.py:42(StringIO)                                                        ->
info.py:83(<module>)                                                            ->
ikfast_AST.py:390(SolverCheckZeros)                                             ->
case.py:1018(FunctionTestCase)                                                  ->
optparse.py:1407(check_values)                                                  ->
_iotools.py:154(LineSplitter)                                                   ->
core.py:805(__init__)                                                           ->
_datasource.py:154(DataSource)                                                  ->
ikfast_generator_cpp.py:707(<lambda>)                                           ->
quadrature.py:385(GaussLegendre)                                                ->
ikfast_IKFastSolver.py:6534(<lambda>)                                           ->
polyoptions.py:559(Repr)                                                        ->
tokenize.py:47(maybe)                                                           ->       2    0.000    0.000  tokenize.py:45(group)
stat.py:52(S_ISFIFO)                                                            ->       3    0.000    0.000  stat.py:24(S_IFMT)
assume.py:34(AppliedPredicate)                                                  ->
threading.py:288(__exit__)                                                      ->       1    0.000    0.000  {method '__exit__' of 'thread.lock' objects}
exprtools.py:55(Factors)                                                        ->
openrave.py:54(vararg_callback)                                                 ->       1    0.000    0.000  {len}
                                                                                         1    0.000    0.000  {setattr}
__init__.py:101(CFunctionType)                                                  ->
ssl.py:310(_ASN1Object)                                                         ->
cmd.py:55(Cmd)                                                                  ->
random.py:655(WichmannHill)                                                     ->
random.py:805(SystemRandom)                                                     ->
__init__.py:391(__init__)                                                       ->
threading.py:300(_is_owned)                                                     ->       1    0.000    0.000  {method 'acquire' of 'thread.lock' objects}
records.py:298(recarray)                                                        ->
__init__.py:2995(Requirement)                                                   ->
nosetester.py:128(NoseTester)                                                   ->
__init__.py:14(search_path)                                                     ->
complexes.py:203(Abs)                                                           ->
interface.py:7(LinearOperator)                                                  ->
optparse.py:1362(_get_args)                                                     ->
misc.py:533(SpaceSamplerExtra)                                                  ->
optparse.py:772(convert_value)                                                  ->       2    0.000    0.000  optparse.py:765(check_value)
pretty_symbology.py:177(<lambda>)                                               ->       4    0.000    0.000  pretty_symbology.py:10(U)
_datasource.py:504(Repository)                                                  ->
difflib.py:44(SequenceMatcher)                                                  ->
decorators.py:105(priority_decorator)                                           ->
ikfast_generator_cpp.py:1657(endFreeParameter)                                  ->       4    0.000    0.000  {method 'pop' of 'list' objects}
sets.py:103(AskRationalHandler)                                                 ->
inspect.py:208(iscode)                                                          ->       7    0.000    0.000  {isinstance}
threading.py:285(__enter__)                                                     ->       1    0.000    0.000  {method '__enter__' of 'thread.lock' objects}
opcode.py:39(jabs_op)                                                           ->       6    0.000    0.000  opcode.py:27(def_op)
                                                                                         6    0.000    0.000  {method 'append' of 'list' objects}
stringpict.py:335(prettyForm)                                                   ->       1    0.000    0.000  {range}
runtests.py:945(PyTestReporter)                                                 ->
pretty_symbology.py:178(<lambda>)                                               ->       2    0.000    0.000  pretty_symbology.py:10(U)
base.py:83(CommonStateObject)                                                   ->
pretty_symbology.py:181(<lambda>)                                               ->       4    0.000    0.000  pretty_symbology.py:10(U)
function_base.py:2047(vectorize)                                                ->
BaseManipulation.py:25(BaseManipulation)                                        ->
urllib.py:120(URLopener)                                                        ->
linalg.py:198(_assertRankAtLeast2)                                              ->       1    0.000    0.000  {len}
main.py:63(TestProgram)                                                         ->
numbers.py:1874(Catalan)                                                        ->
quadrature.py:257(TanhSinh)                                                     ->
ctx_mp_python.py:161(__neg__)                                                   ->       1    0.000    0.000  libmpf.py:637(mpf_neg)
                                                                                         1    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
integers.py:11(RoundFunction)                                                   ->
utils.py:68(__init__)                                                           ->
line.py:1177(Segment)                                                           ->
info.py:184(<module>)                                                           ->
threading.py:552(_Event)                                                        ->
__future__.py:75(__init__)                                                      ->
ikfast_generator_cpp.py:1184(<lambda>)                                          ->
six.py:181(_get_module)                                                         ->
doctest.py:810(DocTestFinder)                                                   ->
indexed.py:299(Idx)                                                             ->
pythonrealdomain.py:8(PythonRealDomain)                                         ->
exprtools.py:215(Term)                                                          ->
{method 'pop' of 'set' objects}                                                 ->
str.py:131(_print_Infinity)                                                     ->
warnings.py:361(__enter__)                                                      ->
{posix.WEXITSTATUS}                                                             ->
ssl.py:339(SSLContext)                                                          ->
polytools.py:1861(clear_denoms)                                                 ->
extract.py:2(<module>)                                                          ->
urllib.py:616(FancyURLopener)                                                   ->
genericpath.py:76(commonprefix)                                                 ->       1    0.000    0.000  {max}
                                                                                         1    0.000    0.000  {min}
summations.py:7(Sum)                                                            ->
UserDict.py:4(__init__)                                                         ->       2    0.000    0.000  {len}
visualization.py:9(VisualizationMethods)                                        ->
pythonintegerring.py:97(lcm)                                                    ->       1    0.000    0.000  numbers.py:57(ilcm)
ellipse.py:884(Circle)                                                          ->
socket.py:239(_fileobject)                                                      ->
charset.py:156(Charset)                                                         ->
pprint.py:84(PrettyPrinter)                                                     ->
numbers.py:1376(One)                                                            ->
factorials.py:14(factorial)                                                     ->
npyio.py:95(NpzFile)                                                            ->
optparse.py:1471(_match_long_opt)                                               ->       3    0.000    0.000  optparse.py:1675(_match_abbrev)
difflib.py:764(Differ)                                                          ->
ikfast_AST.py:561(SolverBreak)                                                  ->
calendar.py:260(TextCalendar)                                                   ->
pretty_symbology.py:147(<lambda>)                                               ->       5    0.000    0.000  pretty_symbology.py:10(U)
__init__.py:1728(_register)                                                     ->       1    0.000    0.000  __init__.py:408(register_loader_type)
                                                                                         1    0.000    0.000  {getattr}
suite.py:16(BaseTestSuite)                                                      ->
logic.py:191(AndOr_Base)                                                        ->
hyperexpand.py:227(IndexPair)                                                   ->
residues.py:4(<module>)                                                         ->
piecewise.py:6(ExprCondPair)                                                    ->
codeprinter.py:8(CodePrinter)                                                   ->
utils.py:56(_Deprecate)                                                         ->
__init__.py:71(__del__)                                                         ->       2    0.000    0.000  __init__.py:62(_CloseDatabase)
relational.py:103(Relational)                                                   ->
linalg.py:124(_realType)                                                        ->       1    0.000    0.000  {method 'get' of 'dict' objects}
decorators.py:82(call_highest_priority)                                         ->
ikfast_AST.py:120(SolverPolynomialRoots)                                        ->
{_ctypes.dlopen}                                                                ->
atexit.py:37(register)                                                          ->       2    0.000    0.000  {method 'append' of 'list' objects}
{method 'index' of 'str' objects}                                               ->
six.py:598(iteritems)                                                           ->       1    0.000    0.000  {method 'iteritems' of 'dict' objects}
optimize.py:1132(Brent)                                                         ->
indexed.py:211(Indexed)                                                         ->
rootisolation.py:1692(ComplexInterval)                                          ->
tempfile.py:383(_TemporaryFileWrapper)                                          ->
polygon.py:1270(Triangle)                                                       ->
io.py:69(IOBase)                                                                ->
quadrature.py:456(QuadratureMethods)                                            ->
ikfast_AST.py:467(end)                                                          ->       2    0.000    0.000  ikfast_generator_cpp.py:1657(endFreeParameter)
logic.py:332(Or)                                                                ->
products.py:6(Product)                                                          ->
hyper.py:252(meijerg)                                                           ->
urlparse.py:73(ResultMixin)                                                     ->
numbers.py:270(Rational)                                                        ->
curve.py:16(Curve)                                                              ->
sets.py:304(AskComplexHandler)                                                  ->
_inspect.py:145(<lambda>)                                                       ->
sets.py:647(Union)                                                              ->
_inspect.py:144(<lambda>)                                                       ->
numbers.py:1530(NegativeInfinity)                                               ->
matrices.py:2842(SparseMatrix)                                                  ->
traversaltools.py:1(<module>)                                                   ->
{method 'view' of 'numpy.ndarray' objects}                                      ->       1    0.000    0.000  core.py:6114(__array_finalize__)
runtests.py:603(SymPyDocTests)                                                  ->
monomialtools.py:292(Monomial)                                                  ->
misc.py:163(parseEnvironment)                                                   ->
plistlib.py:393(PlistParser)                                                    ->
polyerrors.py:25(OperationNotSupported)                                         ->
__init__.py:370(DistributionNotFound)                                           ->
nonlin.py:442(Jacobian)                                                         ->
optparse.py:1243(_create_option_list)                                           ->       2    0.000    0.000  optparse.py:944(_create_option_mappings)
logic.py:74(Logic)                                                              ->
numbers.py:1764(Exp1)                                                           ->
calendar.py:126(Calendar)                                                       ->
ikfast_generator_cpp.py:648(<genexpr>)                                          ->
warnings.py:340(__init__)                                                       ->
ikfast_AST.py:224(SolverCoeffFunction)                                          ->
bessel.py:21(BesselBase)                                                        ->
pretty_symbology.py:149(<lambda>)                                               ->       2    0.000    0.000  pretty_symbology.py:10(U)
                                                                                         2    0.000    0.000  {method 'upper' of 'str' objects}
__init__.py:1015(__init__)                                                      ->
__init__.py:357(ContextualVersionConflict)                                      ->
quadrature.py:5(QuadratureRule)                                                 ->
__init__.py:325(VersionConflict)                                                ->
index_tricks.py:475(ndenumerate)                                                ->
calculus.py:5(MatrixCalculusMethods)                                            ->
version.py:82(LegacyVersion)                                                    ->
optparse.py:965(set_description)                                                ->
info.py:34(<module>)                                                            ->
suite.py:78(TestSuite)                                                          ->
tensor_functions.py:48(LeviCivita)                                              ->
nonlin.py:855(BroydenFirst)                                                     ->
openrave.py:73(<genexpr>)                                                       ->
util.py:9(<module>)                                                             ->
utils.py:1002(SafeEval)                                                         ->
dia.py:14(dia_matrix)                                                           ->
__init__.py:764(setFormatter)                                                   ->
ctypeslib.py:177(_ndptr)                                                        ->
difflib.py:1670(HtmlDiff)                                                       ->
numbers.py:1897(ImaginaryUnit)                                                  ->
records.py:83(format_parser)                                                    ->
ikfast.py:337(GinacUtils)                                                       ->
numbers.py:1404(NegativeOne)                                                    ->
optimization.py:352(Illinois)                                                   ->
__init__.py:1798(ContextualZipFile)                                             ->
__init__.py:963(PlaceHolder)                                                    ->
contextlib.py:132(closing)                                                      ->
core.py:116(BasicMeta)                                                          ->
{built-in method fromkeys}                                                      ->
{method 'write' of '_io.BufferedWriter' objects}                                ->
test_group.py:999(TestMutableMapping)                                           ->
urlparse.py:129(ParseResult)                                                    ->
mul.py:10(NC_Marker)                                                            ->
expr.py:1991(AtomicExpr)                                                        ->
ikfast_IKFastSolver.py:170(DegenerateCases)                                     ->
ikfast_AST.py:483(__init__)                                                     ->
polyerrors.py:119(FlagError)                                                    ->
base.py:341(MappingHDF5)                                                        ->
polynomials.py:147(legendre)                                                    ->
case.py:51(_id)                                                                 ->
index_methods.py:18(IndexConformanceException)                                  ->
polyutils.py:118(order_if_multiple_key)                                         ->       3    0.000    0.000  {len}
ImageFilter.py:259(SMOOTH)                                                      ->
polyoptions.py:602(Frac)                                                        ->
test_slicing.py:40(TestSingleElement)                                           ->
{unichr}                                                                        ->
test_group.py:641(TestSoftLinks)                                                ->
linalg.py:101(get_linalg_error_extobj)                                          ->
relational.py:155(Equality)                                                     ->
Grasper.py:25(Grasper)                                                          ->
feedparser.py:43(BufferedSubFile)                                               ->
utils.py:1612(WarningManager)                                                   ->
numbers.py:363(harmonic)                                                        ->
test_group.py:56(TestCreate)                                                    ->
core.py:861(__init__)                                                           ->
__init__.py:169(DollarMessage)                                                  ->
facts.py:419(__init__)                                                          ->
__init__.py:2094(find_nothing)                                                  ->
ImageFilter.py:204(DETAIL)                                                      ->
numerictypes.py:765(_typedict)                                                  ->
bdb.py:614(Tdb)                                                                 ->
six.py:60(X)                                                                    ->
zeros.py:20(RootResults)                                                        ->
tensor_functions.py:10(Dij)                                                     ->
polyoptions.py:480(Extension)                                                   ->
core.py:2352(_MaskedPrintOption)                                                ->
complexes.py:83(im)                                                             ->
nonlin.py:509(InverseJacobian)                                                  ->
trigonometric.py:312(_eval_is_bounded)                                          ->       1    0.000    0.000  assumptions.py:365(getit)
                                                                                         1    0.000    0.000  basic.py:647(args)
plistlib.py:230(PlistWriter)                                                    ->
unicode_escape.py:20(IncrementalEncoder)                                        ->
test_dataset_swmr.py:9(TestSwmrNotAvailable)                                    ->
optimization.py:211(Muller)                                                     ->
assume.py:86(Predicate)                                                         ->
__init__.py:1689(NullHandler)                                                   ->
test_dataset.py:251(TestCreateNamedType)                                        ->
socket.py:171(_closedsocket)                                                    ->
facts.py:380(TautologyDetected)                                                 ->
test_dataset.py:213(TestCreateFillvalue)                                        ->
{h5py.h5z._register_lzf}                                                        ->
numbers.py:1389(__abs__)                                                        ->
__init__.py:2926(RequirementParseError)                                         ->
__init__.py:425(LibraryLoader)                                                  ->
ikfast_AST.py:591(SolverIKChainTransform6D)                                     ->
_endian.py:46(BigEndianStructure)                                               ->
polyoptions.py:360(Composite)                                                   ->
polycontext.py:18(Context)                                                      ->
core.py:1118(_DomainedBinaryOperation)                                          ->
records.py:215(record)                                                          ->
hyperexpand.py:761(MultOperator)                                                ->
six.py:124(_LazyModule)                                                         ->
linalg.py:43(LinAlgError)                                                       ->
threading.py:780(_set_ident)                                                    ->       1    0.000    0.000  {thread.get_ident}
ImageFilter.py:270(SMOOTH_MORE)                                                 ->
expr.py:742(as_expr)                                                            ->
evalf.py:978(EvalfMixin)                                                        ->
__init__.py:2147(register_namespace_handler)                                    ->
misc.py:465(MultiManipIKSolver)                                                 ->
core.py:7764(_convert2ma)                                                       ->
zeta_functions.py:7(zeta)                                                       ->
__init__.py:4(VendorImporter)                                                   ->
test_selections.py:22(TestTypeGeneration)                                       ->
Shadow.py:251(StructType)                                                       ->
errors.py:9(MessageError)                                                       ->
test_dataset_getitem.py:220(TestScalarArray)                                    ->
sympyrationalfield.py:22(__init__)                                              ->
calendar.py:377(HTMLCalendar)                                                   ->
ikfast_generator_cpp.py:1153(<lambda>)                                          ->
{_hashlib.openssl_md5}                                                          ->
__init__.py:15(AskCommutativeHandler)                                           ->
ikfast.py:331(atan2check)                                                       ->
ImageFilter.py:156(GaussianBlur)                                                ->
test_group.py:384(TestPy2Dict)                                                  ->
ikfast_AST.py:460(__init__)                                                     ->
files.py:37(<genexpr>)                                                          ->
parser.py:86(HeaderParser)                                                      ->
test_group.py:671(TestExternalLinks)                                            ->
core.py:2569(MaskedIterator)                                                    ->
selections2.py:76(ScalarReadSelection)                                          ->
__init__.py:45(TautologicalHandler)                                             ->
ikfast_generator_cpp.py:1154(<lambda>)                                          ->
test_h5.py:23(TestH5)                                                           ->
Shadow.py:14(_ArrayType)                                                        ->
info.py:154(<module>)                                                           ->
__init__.py:203(SetuptoolsLegacyVersion)                                        ->
test_slicing.py:31(BaseSlicing)                                                 ->
getlimits.py:25(finfo)                                                          ->
test_slicing.py:80(TestObjectIndex)                                             ->
{h5py.h5.get_config}                                                            ->
test_file.py:260(TestLibver)                                                    ->
rszeta.py:53(RSCache)                                                           ->
contextlib.py:9(GeneratorContextManager)                                        ->
urllib.py:1014(addinfourl)                                                      ->
ikfast_AST.py:696(SolverIKChainDirection3D)                                     ->
test_slicing.py:125(TestSimpleSlicing)                                          ->
sets.py:244(RealSet)                                                            ->
core.py:841(__init__)                                                           ->
convexdecomposition.py:101(ConvexDecompositionError)                            ->
optparse.py:960(set_conflict_handler)                                           ->
ikfast_AST.py:610(end)                                                          ->       1    0.000    0.000  ikfast_generator_cpp.py:723(endChain)
test_dataset_getitem.py:160(TestScalarCompound)                                 ->
relational.py:183(StrictInequality)                                             ->
test_attrs.py:42(TestAccess)                                                    ->
Image.py:407(_E)                                                                ->
gruntz.py:233(SubsSet)                                                          ->
decimal.py:5696(__init__)                                                       ->
sets.py:945(EmptySet)                                                           ->
{method 'discard' of 'set' objects}                                             ->
ikfast_IKFastSolver.py:152(JointAxis)                                           ->
sets.py:283(AskExtendedRealHandler)                                             ->
core.py:68(Registry)                                                            ->
polyclasses.py:5(GenericPoly)                                                   ->
csr.py:19(csr_matrix)                                                           ->
ccompiler.py:247(add_library)                                                   ->       1    0.000    0.000  {method 'append' of 'list' objects}
suite.py:252(_ErrorHolder)                                                      ->
utils.py:1881(clear_and_catch_warnings)                                         ->
{method 'copy' of 'set' objects}                                                ->
index_tricks.py:647(__init__)                                                   ->
ctx_mp_python.py:33(mpnumeric)                                                  ->
ssl.py:194(CertificateError)                                                    ->
cache.py:132(MemoizerArg)                                                       ->
sets.py:387(CountableSet)                                                       ->
boolalg.py:6(Boolean)                                                           ->
ikfast_AST.py:366(SolverBranchConds)                                            ->
__init__.py:199(SetuptoolsVersion)                                              ->
__init__.py:1986(FileMetadata)                                                  ->
expressiondomain.py:111(__init__)                                               ->
nonlin.py:1127(DiagBroyden)                                                     ->
urllib.py:862(ftpwrapper)                                                       ->
bessel.py:266(SphericalBesselBase)                                              ->
singleton.py:6(SingletonRegistry)                                               ->
test_file.py:285(TestUserblock)                                                 ->
matrices.py:988(<lambda>)                                                       ->
signals.py:9(_InterruptHandler)                                                 ->
plistlib.py:331(Plist)                                                          ->
polyutils.py:62(PolyError)                                                      ->
__init__.py:329(CDLL)                                                           ->
__init__.py:558(IMetadataProvider)                                              ->
polyoptions.py:512(Modulus)                                                     ->
csc.py:17(csc_matrix)                                                           ->
npyio.py:40(BagObj)                                                             ->
selections.py:95(_RegionProxy)                                                  ->
optimization.py:157(Halley)                                                     ->
groundtypes.py:53(GMPYIntegerType)                                              ->
core.py:6285(_maximum_operation)                                                ->
case.py:98(_AssertRaisesContext)                                                ->
boolalg.py:71(Xor)                                                              ->
__init__.py:156(py_object)                                                      ->
parser.py:17(Parser)                                                            ->
test_h5p.py:33(TestDA)                                                          ->
miscellaneous.py:263(Min)                                                       ->
optimization.py:13(Newton)                                                      ->
repr.py:10(__init__)                                                            ->
core.py:6275(__init__)                                                          ->
test_group.py:448(TestAdditionalMappingFuncs)                                   ->
unicode_escape.py:13(Codec)                                                     ->
openravepy_ext.py:142(PlanningError)                                            ->
inference.py:123(PropKB)                                                        ->
hyperexpand.py:648(FormulaCollection)                                           ->
__init__.py:2823(EggInfoDistribution)                                           ->
test_attrs_data.py:227(TestWriteException)                                      ->
plistlib.py:151(DumbXMLWriter)                                                  ->
__init__.py:491(CFunctionType)                                                  ->
gmpyfinitefield.py:6(GMPYFiniteField)                                           ->       1    0.000    0.000  gmpyintegerring.py:21(__init__)
sets.py:1111(RealFiniteSet)                                                     ->
inversekinematics.py:231(ArmVisibility)                                         ->
kinematicreachability.py:81(QuaternionKDTree)                                   ->
__init__.py:545(Filter)                                                         ->
test_dataset.py:749(TestCompound)                                               ->
_datasource.py:50(_FileOpeners)                                                 ->
numbers.py:1444(Half)                                                           ->
repr.py:8(Repr)                                                                 ->
__init__.py:173(c_long)                                                         ->
colorsys.py:17(<module>)                                                        ->
machar.py:17(MachAr)                                                            ->
errors.py:66(DistutilsByteCompileError)                                         ->
memmap.py:20(memmap)                                                            ->
test_dataset.py:792(TestEnum)                                                   ->
polysys.py:10(SolveFailed)                                                      ->
characteristiczero.py:5(CharacteristicZero)                                     ->
calendar.py:489(TimeEncoding)                                                   ->
miscellaneous.py:9(IdentityFunction)                                            ->
exponential.py:491(LambertW)                                                    ->
basic.py:1198(Atom)                                                             ->
nonlin.py:1270(KrylovJacobian)                                                  ->
test_dataset_getitem.py:106(TestScalarFloat)                                    ->
core.py:796(_DomainCheckInterval)                                               ->
case.py:34(_ExpectedFailure)                                                    ->
_import_tools.py:9(PackageLoader)                                               ->
errors.py:21(BoundaryError)                                                     ->
test_dimension_scales.py:136(TestDimensionsHighLevel)                           ->
doctest.py:1688(UnexpectedException)                                            ->
arpack.py:904(SpLuInv)                                                          ->
{_hashlib.openssl_sha384}                                                       ->
hyperexpand.py:881(ReduceOrder)                                                 ->
test_dataset.py:939(TestVlen)                                                   ->
calendar.py:21(IllegalMonthError)                                               ->
polynomials.py:173(assoc_legendre)                                              ->
__init__.py:230(c_byte)                                                         ->
posixpath.py:173(samestat)                                                      ->
index_tricks.py:223(AxisConcatenator)                                           ->
gamma_functions.py:180(uppergamma)                                              ->
numbers.py:1501(_as_mpf_val)                                                    ->
miscellaneous.py:38(MinMaxBase)                                                 ->
sets.py:1158(<genexpr>)                                                         ->
{method 'join' of 'unicode' objects}                                            ->
operations.py:372(args)                                                         ->
test_h5f.py:23(TestFileID)                                                      ->
miscellaneous.py:160(Max)                                                       ->
{numpy.core.multiarray.set_typeDict}                                            ->
python.py:11(PythonPrinter)                                                     ->
ImagePalette.py:25(ImagePalette)                                                ->
{numpy.core.multiarray.set_string_function}                                     ->
numbers.py:1633(ComplexInfinity)                                                ->
test_dataset.py:633(TestIter)                                                   ->
zipfile.py:262(ZipInfo)                                                         ->
function.py:52(ArgumentIndexError)                                              ->
nonlin.py:992(Anderson)                                                         ->
numbers.py:13(Number)                                                           ->
sets.py:410(AskAlgebraicHandler)                                                ->
complexes.py:322(conjugate)                                                     ->
line.py:691(Line)                                                               ->
arpack.py:288(ArpackError)                                                      ->
numbers.py:1850(EulerGamma)                                                     ->
doctest.py:2178(DocTestCase)                                                    ->
polyoptions.py:341(Field)                                                       ->
multinomial.py:1(<module>)                                                      ->
_parseaddr.py:172(AddrlistClass)                                                ->
polynomial.py:22(RankWarning)                                                   ->
ikfast_generator_cpp.py:665(getFKFunctionPreamble)                              ->
version.py:3(<module>)                                                          ->
polyutils.py:58(RankWarning)                                                    ->
ikfast.py:325(fmod)                                                             ->
polyoptions.py:16(Option)                                                       ->
inversekinematics.py:207(InverseKinematicsError)                                ->
inspect.py:631(BlockFinder)                                                     ->
nonlin.py:1212(ExcitingMixing)                                                  ->
__init__.py:94(Formatter)                                                       ->
ikfast_AST.py:788(SolverIKChainAxisAngle)                                       ->
shutil.py:34(SpecialFileError)                                                  ->
__init__.py:100(_SetuptoolsVersionMixin)                                        ->
factorials.py:192(RisingFactorial)                                              ->
cache.py:174(Memoizer)                                                          ->
hyperexpand.py:835(UnShiftB)                                                    ->
_internal.py:631(TooHardError)                                                  ->
ikfast_AST.py:599(__init__)                                                     ->
ImageFilter.py:167(UnsharpMask)                                                 ->
polyutils.py:66(PolyDomainError)                                                ->
memoization.py:8(decorator)                                                     ->
doctest.py:2077(Tester)                                                         ->
inversekinematics.py:633(<genexpr>)                                             ->       1    0.000    0.000  numeric.py:1835(array_str)
zipfile.py:20(BadZipfile)                                                       ->
complexes.py:196(_eval_is_zero)                                                 ->       1    0.000    0.000  basic.py:647(args)
openravepy_ext.py:114(std_exception)                                            ->
__init__.py:202(c_longdouble)                                                   ->
index_tricks.py:87(nd_grid)                                                     ->
polyoptions.py:631(Include)                                                     ->
polyerrors.py:46(EvaluationFailed)                                              ->
arpack.py:386(_SymmetricArpackParams)                                           ->
ikfast_AST.py:526(__init__)                                                     ->
function.py:57(FunctionClass)                                                   ->
extras.py:1332(MAxisConcatenator)                                               ->
polyoptions.py:671(Symbols)                                                     ->
polytools.py:3239(is_univariate)                                                ->       2    0.000    0.000  {len}
zeta_functions.py:49(dirichlet_eta)                                             ->
core.py:961(_MaskedBinaryOperation)                                             ->
bessel.py:349(yn)                                                               ->
grasping.py:204(GripperVisibility)                                              ->
function.py:576(WildFunction)                                                   ->
polynomials.py:70(chebyshevu)                                                   ->
hyperbolic.py:10(HyperbolicFunction)                                            ->
linalg.py:111(isComplexType)                                                    ->       2    0.000    0.000  {issubclass}
bessel.py:236(hankel2)                                                          ->
platform.py:390(_popen)                                                         ->
polyerrors.py:55(NotInvertible)                                                 ->
numbers.py:91(lucas)                                                            ->
memoization.py:1(recurrence_memo)                                               ->
test_file.py:465(TestFlush)                                                     ->
ccompiler.py:367(_get_cc_args)                                                  ->
threading.py:423(_Semaphore)                                                    ->
polyoptions.py:449(Split)                                                       ->
ikfast_AST.py:517(SolverStoreSolution)                                          ->
bdb.py:449(Breakpoint)                                                          ->
anneal.py:14(base_schedule)                                                     ->
numbers.py:1824(GoldenRatio)                                                    ->
__init__.py:820(StreamHandler)                                                  ->
complexes.py:12(re)                                                             ->
test_file.py:389(TestUnicode)                                                   ->       1    0.000    0.000  case.py:51(_id)
                                                                                         1    0.000    0.000  case.py:70(skipIf)
warnings.py:377(__exit__)                                                       ->
polyoptions.py:323(Order)                                                       ->
zipfile.py:1377(PyZipFile)                                                      ->
threading.py:1119(_DummyThread)                                                 ->
__init__.py:1737(EmptyProvider)                                                 ->
case.py:45(_UnexpectedSuccess)                                                  ->
rationalfield.py:7(RationalField)                                               ->
ctx_mp.py:1228(PrecisionManager)                                                ->
test_dataset.py:610(TestLen)                                                    ->
{strop.maketrans}                                                               ->
test_dataset.py:55(TestCreateShape)                                             ->
test_dataset.py:598(TestDtype)                                                  ->
Image.py:34(_imaging_not_installed)                                             ->
core.py:818(_DomainTan)                                                         ->
test_threads.py:22(TestErrorPrinting)                                           ->
shutil.py:31(Error)                                                             ->
plistlib.py:365(Data)                                                           ->
sets.py:252(ProductSet)                                                         ->
containers.py:12(Tuple)                                                         ->
_iotools.py:460(ConversionWarning)                                              ->
doctest.py:1707(DebugRunner)                                                    ->
iterative.py:66(set_docstring)                                                  ->
selections.py:231(SimpleSelection)                                              ->
complexes.py:157(sign)                                                          ->
errors.py:35(MessageDefect)                                                     ->
index_tricks.py:148(__init__)                                                   ->
assume.py:5(AssumptionsContext)                                                 ->
pretty_symbology.py:41(pretty_use_unicode)                                      ->
core.py:6289(__init__)                                                          ->
test_dataset.py:266(TestCreateGzip)                                             ->
{_hashlib.openssl_sha1}                                                         ->
polyerrors.py:86(GeneratorsError)                                               ->
decimal.py:224(ConversionSyntax)                                                ->
trigonometric.py:1353(atan2)                                                    ->
{delattr}                                                                       ->
polyerrors.py:116(OptionError)                                                  ->
_compat.py:37(metaclass)                                                        ->
polyoptions.py:56(OptionType)                                                   ->
delta_functions.py:136(Heaviside)                                               ->
polyoptions.py:613(Formal)                                                      ->
doctest.py:427(Example)                                                         ->
gamma_functions.py:101(lowergamma)                                              ->
numbers.py:1600(NaN)                                                            ->
pythonfinitefield.py:6(PythonFiniteField)                                       ->       1    0.000    0.000  pythonintegerring.py:20(__init__)
selections.py:315(FancySelection)                                               ->
epathtools.py:5(EPath)                                                          ->
test_file.py:28(TestFileOpen)                                                   ->
_datasource.py:74(__init__)                                                     ->
group.py:511(ExternalLink)                                                      ->
six.py:555(Iterator)                                                            ->
doctest.py:355(_OutputRedirectingPdb)                                           ->
mpmathcomplexdomain.py:5(MPmathComplexDomain)                                   ->
Shadow.py:212(PointerType)                                                      ->
ikfast_AST.py:643(SolverIKChainTranslation3D)                                   ->
cse_opts.py:25(Sub)                                                             ->
ikfast_AST.py:543(__init__)                                                     ->
polytools.py:3261(is_multivariate)                                              ->       2    0.000    0.000  {len}
optparse.py:1675(_match_abbrev)                                                 ->
cache.py:272(Memoizer_nocache)                                                  ->
__init__.py:73(StringTemplateStyle)                                             ->
zipfile.py:24(LargeZipFile)                                                     ->
_structures.py:17(Infinity)                                                     ->
factorials.py:255(FallingFactorial)                                             ->
polyoptions.py:584(Auto)                                                        ->
group.py:491(SoftLink)                                                          ->
optparse.py:1268(_init_parsing_state)                                           ->
gruntz.py:130(debug)                                                            ->
sets.py:342(AskImaginaryHandler)                                                ->
arpack.py:938(IterInv)                                                          ->
core.py:6271(_minimum_operation)                                                ->
version.py:46(InvalidVersion)                                                   ->
boolalg.py:144(Equivalent)                                                      ->
bessel.py:181(besselk)                                                          ->       1    0.000    0.000  numbers.py:1393(__neg__)
nonlin.py:1173(LinearMixing)                                                    ->
{_ctypes.set_conversion_mode}                                                   ->
field.py:6(Field)                                                               ->
test_datatype.py:12(TestVlen)                                                   ->
__init__.py:426(__init__)                                                       ->
complexes.py:299(arg)                                                           ->
bessel.py:117(bessely)                                                          ->
Shadow.py:105(_Optimization)                                                    ->
test_attrs_data.py:37(TestScalar)                                               ->
__init__.py:385(PyDLL)                                                          ->
bessel.py:54(besselj)                                                           ->
ikfast_IKFastSolver.py:155(Variable)                                            ->
__init__.py:582(Filterer)                                                       ->
log.py:14(Log)                                                                  ->
ikfast_AST.py:494(SolverFunction)                                               ->
test_group.py:185(TestOpen)                                                     ->
polyoptions.py:228(Expand)                                                      ->
__init__.py:976(append)                                                         ->
errors.py:63(DistutilsTemplateError)                                            ->
io.py:79(TextIOBase)                                                            ->
unicode_escape.py:28(StreamWriter)                                              ->
test_attrs_data.py:192(TestEmpty)                                               ->
__init__.py:582(IResourceProvider)                                              ->
test_dataset.py:134(TestCreateRequire)                                          ->
core.py:885(_MaskedUnaryOperation)                                              ->
test_datatype.py:36(TestCreation)                                               ->
umfpack.py:254(UmfpackContext)                                                  ->
optimization.py:597(MDNewton)                                                   ->
factorials.py:324(binomial)                                                     ->
printing.py:1(<module>)                                                         ->
ImageFilter.py:122(MaxFilter)                                                   ->
sympyfinitefield.py:6(SymPyFiniteField)                                         ->       1    0.000    0.000  sympyintegerring.py:16(__init__)
selections.py:185(PointSelection)                                               ->
arrayprint.py:712(DatetimeFormat)                                               ->
__init__.py:4(AskHandler)                                                       ->
sympify.py:8(SympifyError)                                                      ->
__init__.py:62(_CloseDatabase)                                                  ->
threading.py:255(_Condition)                                                    ->
core.py:6342(_frommethod)                                                       ->
ikfast_IKFastSolver.py:115(CannotSolveError)                                    ->
test_slicing.py:144(TestArraySlicing)                                           ->
{h5py._errors.silence_errors}                                                   ->
Shadow.py:433(CythonDotParallel)                                                ->
arrayprint.py:654(LongFloatFormat)                                              ->
__init__.py:240(c_char_p)                                                       ->
doctest.py:1536(OutputChecker)                                                  ->
visualfeedback.py:25(VisualFeedback)                                            ->
polynomials.py:24(PolynomialSequence)                                           ->
optparse.py:225(set_parser)                                                     ->
runtests.py:939(Reporter)                                                       ->
__init__.py:1709(DefaultProvider)                                               ->
dataset.py:137(AstypeContext)                                                   ->
doctest.py:2341(SkipDocTestCase)                                                ->
_internal.py:219(_missing_ctypes)                                               ->
numbers.py:1795(Pi)                                                             ->
threading.py:1049(_Timer)                                                       ->
ctx_mp.py:1223(PrecisionManager)                                                ->
test_attrs_data.py:84(TestTypes)                                                ->
delta_functions.py:8(DiracDelta)                                                ->
pyANN.py:19(pyann_exception)                                                    ->
hyper.py:29(TupleParametersBase)                                                ->
arrayprint.py:528(FloatFormat)                                                  ->
test_dataset.py:546(TestResize)                                                 ->
timeit.py:105(Timer)                                                            ->
feedparser.py:158(FeedParser)                                                   ->
gruntz.py:152(timeit)                                                           ->
ikfast_generator_cpp.py:95(atan2check)                                          ->
test_attrs.py:79(TestDelete)                                                    ->
nonlin.py:132(NoConvergence)                                                    ->
assumptions.py:5(CycleDetected)                                                 ->
tokenize.py:46(any)                                                             ->       1    0.000    0.000  tokenize.py:45(group)
gamma_functions.py:273(polygamma)                                               ->
__init__.py:257(c_bool)                                                         ->
optimization.py:288(Bisection)                                                  ->
test_attrs.py:144(TestMutableMapping)                                           ->
arrayprint.py:733(TimedeltaFormat)                                              ->
__init__.py:223(c_ubyte)                                                        ->
threading.py:1079(_MainThread)                                                  ->
io.py:76(BufferedIOBase)                                                        ->
__init__.py:2040(EggMetadata)                                                   ->
test_group.py:149(TestDelete)                                                   ->
test_file.py:478(TestRepr)                                                      ->
runtests.py:714(SymPyDocTestFinder)                                             ->
{method 'toordinal' of 'datetime.date' objects}                                 ->
__init__.py:198(c_double)                                                       ->
metaclass.py:30(MetaAutoReloader)                                               ->
errors.py:17(HeaderParseError)                                                  ->
__init__.py:169(c_ushort)                                                       ->
version.py:5(<module>)                                                          ->
polyerrors.py:49(RefinementFailed)                                              ->
arpack.py:924(LuInv)                                                            ->
polynomials.py:229(hermite)                                                     ->
groundtypes.py:58(__init__)                                                     ->
calculus.py:1(CalculusMethods)                                                  ->
ImageFilter.py:140(ModeFilter)                                                  ->
singleton.py:21(Singleton)                                                      ->
__init__.py:356(_FuncPtr)                                                       ->
decimal.py:250(DivisionImpossible)                                              ->
test_attrs_data.py:28(BaseAttrs)                                                ->
test_group.py:242(TestRepr)                                                     ->
hyperexpand.py:367(IndexQuadruple)                                              ->
test_dimension_scales.py:21(BaseDataset)                                        ->
__init__.py:225(LogRecord)                                                      ->
decimal.py:310(Subnormal)                                                       ->
metaclass.py:3(MetaInstanceTracker)                                             ->
facts.py:641(FactRules)                                                         ->
plistlib.py:322(Dict)                                                           ->
ImageFilter.py:57(BuiltinFilter)                                                ->
test_base.py:27(BaseTest)                                                       ->
ikfast_AST.py:758(SolverIKChainLookat3D)                                        ->
polyoptions.py:653(Gen)                                                         ->
ImageFilter.py:90(MedianFilter)                                                 ->
{_codecs.lookup}                                                                ->
matrices.py:20(ShapeError)                                                      ->
log.py:16(__init__)                                                             ->
core.py:138(MaskError)                                                          ->
{_hashlib.openssl_sha512}                                                       ->
base.py:300(ValuesViewHDF5)                                                     ->
decimal.py:183(Clamped)                                                         ->
iterables.py:139(preorder_traversal)                                            ->
arrayprint.py:695(ComplexFormat)                                                ->
base.py:322(ItemsViewHDF5)                                                      ->
lobpcg.py:85(CallableLinearOperator)                                            ->
optparse.py:953(_share_option_mappings)                                         ->
metaclass.py:18(InstanceTracker)                                                ->
polynomials.py:118(chebyshevu_root)                                             ->
factorials.py:149(MultiFactorial)                                               ->
errors.py:29(CharsetError)                                                      ->
sets.py:830(RealUnion)                                                          ->
compositedomain.py:6(CompositeDomain)                                           ->
polyutils.py:79(PolyBase)                                                       ->
unicode_escape.py:24(IncrementalDecoder)                                        ->
__init__.py:194(c_float)                                                        ->
urllib.py:955(addbase)                                                          ->
test_file.py:445(TestClose)                                                     ->
test_file.py:28(TestDealloc)                                                    ->
inference.py:106(KB)                                                            ->
ikfast_AST.py:617(SolverIKChainRotation3D)                                      ->
ikfast_AST.py:221(GetZeroThreshold)                                             ->
test_h5f.py:41(TestCacheConfig)                                                 ->
polyerrors.py:67(PolynomialError)                                               ->
version.py:32(Version)                                                          ->
calendar.py:71(__init__)                                                        ->
calendar.py:138(setfirstweekday)                                                ->
errors.py:29(DistutilsArgError)                                                 ->
coreerrors.py:6(NonCommutativeExpression)                                       ->
doctest.py:2696(_TestClass)                                                     ->
sre_parse.py:218(seek)                                                          ->
posixpath.py:104(splitdrive)                                                    ->
decimal.py:5438(_WorkRep)                                                       ->
bdb.py:10(BdbQuit)                                                              ->
errors.py:44(StartBoundaryNotFoundDefect)                                       ->
logic.py:342(Not)                                                               ->
test_objects.py:19(TestObjects)                                                 ->
nonlin.py:948(BroydenSecond)                                                    ->
arpack.py:603(_UnsymmetricArpackParams)                                         ->
ImageFilter.py:18(Filter)                                                       ->
test_dataset_getitem.py:51(TestEmpty)                                           ->
optparse.py:753(takes_value)                                                    ->
{math.sqrt}                                                                     ->
doctest.py:1669(DocTestFailure)                                                 ->
exponential.py:356(as_base_exp)                                                 ->
__init__.py:891(FileHandler)                                                    ->
_iotools.py:444(ConverterError)                                                 ->
__init__.py:1387(RootLogger)                                                    ->
polyoptions.py:41(Flag)                                                         ->
groundtypes.py:57(GMPYRationalType)                                             ->
core.py:870(_DomainGreaterEqual)                                                ->
limits.py:220(Limit)                                                            ->
test_slicing.py:225(TestEmptySlicing)                                           ->
ikfast_AST.py:722(SolverIKChainRay)                                             ->
errors.py:38(DistutilsOptionError)                                              ->
core.py:876(__init__)                                                           ->
interface.py:203(MatrixLinearOperator)                                          ->
test_dataset.py:384(TestCreateShuffle)                                          ->
decimal.py:3748(_ContextManager)                                                ->
_structures.py:49(NegativeInfinity)                                             ->
symbol.py:104(Dummy)                                                            ->
io.py:73(RawIOBase)                                                             ->
{pow}                                                                           ->
__init__.py:157(BraceMessage)                                                   ->
TaskManipulation.py:304(SwitchState)                                            ->
inspect.py:629(EndOfBlock)                                                      ->
test_base.py:36(TestName)                                                       ->
Shadow.py:205(CythonType)                                                       ->
{method 'disable' of '_lsprof.Profiler' objects}                                ->
str.py:487(StrReprPrinter)                                                      ->
test_dataset.py:910(TestAstype)                                                 ->
sets.py:379(RealSet)                                                            ->
index_tricks.py:452(CClass)                                                     ->
tokenize.py:179(Untokenizer)                                                    ->
Image.py:1722(ImageTransformHandler)                                            ->
{operator.abs}                                                                  ->
_globals.py:45(VisibleDeprecationWarning)                                       ->
__init__.py:969(__init__)                                                       ->
anneal.py:92(fast_sa)                                                           ->
test_group.py:290(TestContains)                                                 ->
ImageFilter.py:215(EDGE_ENHANCE)                                                ->
errors.py:33(DistutilsFileError)                                                ->
urllib.py:1004(addinfo)                                                         ->
tokenize.py:148(StopTokenizing)                                                 ->
__init__.py:65(StrFormatStyle)                                                  ->
__init__.py:177(c_ulong)                                                        ->
memoization.py:1(<module>)                                                      ->
Shadow.py:326(typedef)                                                          ->
pythonintegerring.py:20(__init__)                                               ->
boolalg.py:128(Implies)                                                         ->
six.py:430(Module_six_moves_urllib_response)                                    ->
sre_parse.py:224(isdigit)                                                       ->
test_group.py:965(TestMove)                                                     ->
group.py:481(HardLink)                                                          ->
{_hashlib.openssl_sha224}                                                       ->
polyerrors.py:43(ExtraneousFactors)                                             ->
anneal.py:115(cauchy_sa)                                                        ->
coreerrors.py:3(BaseCoreError)                                                  ->
_iotools.py:452(ConverterLockError)                                             ->
__init__.py:93(PEP440Warning)                                                   ->
test_attrs.py:162(TestVlen)                                                     ->
ikfast_AST.py:456(SolverFreeParameter)                                          ->
__init__.py:1114(ExtractionError)                                               ->
test_dataset.py:371(TestCreateSZIP)                                             ->
polyerrors.py:95(PolificationFailed)                                            ->
{method 'lstrip' of 'str' objects}                                              ->
runner.py:12(_WritelnDecorator)                                                 ->
sre_parse.py:216(tell)                                                          ->
decimal.py:160(DecimalException)                                                ->
bessel.py:299(jn)                                                               ->
decimal.py:261(DivisionUndefined)                                               ->
threading.py:57(_Verbose)                                                       ->
ring.py:6(Ring)                                                                 ->
test_attrs.py:125(TestCreate)                                                   ->
Shadow.py:198(CythonMetaType)                                                   ->
polyerrors.py:70(UnificationFailed)                                             ->
doctest.py:2431(DocFileCase)                                                    ->
__init__.py:8(CommonHandler)                                                    ->
optparse.py:944(_create_option_mappings)                                        ->
__init__.py:319(ResolutionError)                                                ->
tree.py:3(<module>)                                                             ->
indexed.py:111(IndexException)                                                  ->
core.py:90(MaskedArrayFutureWarning)                                            ->
boolalg.py:44(And)                                                              ->
hyperexpand.py:715(Operator)                                                    ->
mpmathcomplexdomain.py:10(__init__)                                             ->
errors.py:50(MisplacedEnvelopeHeaderDefect)                                     ->
{method '__exit__' of 'thread.lock' objects}                                    ->
index_tricks.py:352(RClass)                                                     ->
visibilitymodel.py:95(GripperVisibility)                                        ->
Image.py:1683(_ImageCrop)                                                       ->
odes.py:4(ODEMethods)                                                           ->
index_tricks.py:603(IndexExpression)                                            ->
ikfast_generator_cpp.py:1432(endPolynomialRoots)                                ->
<string>:2(<module>)                                                            ->
operations.py:285(ShortCircuit)                                                 ->
index_tricks.py:525(ndindex)                                                    ->
six.py:139(MovedAttribute)                                                      ->
ikfast_AST.py:670(SolverIKChainTranslationXY2D)                                 ->
optimization.py:5(OptimizationMethods)                                          ->
errors.py:25(MultipartConversionError)                                          ->
extras.py:215(_fromnxfunction)                                                  ->
polyerrors.py:9(ExactQuotientFailed)                                            ->
libmpf.py:43(ComplexResult)                                                     ->
__init__.py:235(c_char)                                                         ->
test_dataset.py:1062(TestLowOpen)                                               ->
boolalg.py:108(Nand)                                                            ->
errors.py:50(DistutilsPlatformError)                                            ->
test_dataset_swmr.py:45(TestDatasetSwmrRead)                                    ->
relational.py:170(Unequality)                                                   ->
utils.py:37(KnownFailureException)                                              ->
test_file.py:491(TestFilename)                                                  ->
test_group.py:272(TestLen)                                                      ->
six.py:173(__init__)                                                            ->
decimal.py:272(Inexact)                                                         ->
evalf.py:37(PrecisionExhausted)                                                 ->
metaclass.py:51(AutoReloader)                                                   ->
test_file.py:519(TestCloseInvalidatesOpenObjectIDs)                             ->
utils.py:1580(WarningMessage)                                                   ->
calendar.py:537(LocaleHTMLCalendar)                                             ->
numeric.py:2896(_unspecified)                                                   ->
test_group.py:34(BaseGroup)                                                     ->
identification.py:13(IdentificationMethods)                                     ->
test_slicing.py:247(TestZeroLengthSlicing)                                      ->
logic.py:104(__ne__)                                                            ->       4    0.000    0.000  {isinstance}
ikfast_generator_cpp.py:90(fmod)                                                ->
<string>:1(<module>)                                                            ->       1    0.000    0.000  <string>:1(ArgInfo)
                                                                                         1    0.000    0.000  <string>:1(ArgSpec)
                                                                                         1    0.000    0.000  <string>:1(Arguments)
                                                                                         1    0.000    0.000  <string>:1(Attribute)
                                                                                         1    0.000    0.000  <string>:1(DecimalTuple)
                                                                                         1    0.000    0.000  <string>:1(DefaultVerifyPaths)
                                                                                         1    0.000    0.000  <string>:1(Match)
                                                                                         1    0.000    0.000  <string>:1(Mismatch)
                                                                                         1    0.000    0.000  <string>:1(ModuleInfo)
                                                                                         1    0.000    0.000  <string>:1(ParseResult)
                                                                                         1    0.000    0.000  <string>:1(SplitResult)
                                                                                         1    0.000    0.000  <string>:1(TestResults)
                                                                                         1    0.000    0.000  <string>:1(Traceback)
                                                                                         1    0.000    0.000  <string>:1(_ASN1Object)
                                                                                         1    0.000    0.000  <string>:1(_Version)
                                                                                         1    0.000    0.000  <string>:1(manifest_mod)
                                                                                        23    0.000    0.000  assumptions.py:346(make__get_assumption)
                                                                                       196    0.000    0.005  basic.py:471(__repr__)
                                                                                         1    0.000    0.000  basic.py:475(__str__)
                                                                                         2    0.000    0.001  matrices.py:508(__str__)
test_dataset.py:311(TestCreateCompressionNumber)                                ->
codecs.py:340(__init__)                                                         ->
doctest.py:249(_SpoofOut)                                                       ->
test_dataset.py:511(TestAutoCreate)                                             ->
__init__.py:186(c_int)                                                          ->
test_dimension_scales.py:109(TestDimensionManager)                              ->
ctx_base.py:19(Context)                                                         ->
logic.py:287(And)                                                               ->
{method '__array_prepare__' of 'numpy.ndarray' objects}                         ->
base.py:391(MutableMappingHDF5)                                                 ->
test_group.py:364(TestIter)                                                     ->
{method '__enter__' of 'thread.lock' objects}                                   ->
__init__.py:252(c_void_p)                                                       ->
ikfast_IKFastSolver.py:135(IKFeasibilityError)                                  ->
pdb.py:18(Restart)                                                              ->
__init__.py:2015(PathMetadata)                                                  ->
numeric.py:55(ComplexWarning)                                                   ->
__init__.py:1010(Manager)                                                       ->
suite.py:299(_DebugResult)                                                      ->
polyerrors.py:37(HomomorphismFailed)                                            ->
__init__.py:397(UnknownExtra)                                                   ->
test_group.py:43(TestRepr)                                                      ->
ikfast_AST.py:540(SolverSequence)                                               ->
test_file.py:377(TestContextManager)                                            ->
arpack.py:315(_ArpackParams)                                                    ->
unicode_escape.py:31(StreamReader)                                              ->
utils.py:1841(IgnoreException)                                                  ->
gmpyintegerring.py:21(__init__)                                                 ->
core.py:130(MAError)                                                            ->
integerring.py:9(IntegerRing)                                                   ->
{method 'itervalues' of 'dict' objects}                                         ->
multidimensional.py:57(vectorize)                                               ->
base.py:14(SparseFormatWarning)                                                 ->
urlparse.py:121(SplitResult)                                                    ->
urllib.py:114(ContentTooShortError)                                             ->
polyerrors.py:92(MultivariatePolynomialError)                                   ->
six.py:86(_LazyDescr)                                                           ->
runtests.py:47(sys_normcase)                                                    ->
polyerrors.py:34(HeuristicGCDFailed)                                            ->
mpmathrealdomain.py:14(__init__)                                                ->
test_attrs.py:32(BaseAttrs)                                                     ->
version.py:52(_BaseVersion)                                                     ->
numbers.py:1312(RationalConstant)                                               ->
errors.py:87(UnknownFileError)                                                  ->
ctx_mp_python.py:600(make_mpc)                                                  ->       1    0.000    0.000  {built-in method __new__ of type object at 0x5653c9d8abc0}
core.py:6114(__array_finalize__)                                                ->
__init__.py:51(PercentStyle)                                                    ->
optimization.py:102(MNewton)                                                    ->
decimal.py:5692(_Log10Memoize)                                                  ->
decimal.py:195(InvalidOperation)                                                ->
hyperexpand.py:791(UnShiftA)                                                    ->
numeric.py:2900(errstate)                                                       ->
__init__.py:1745(__init__)                                                      ->
test_dataset.py:845(TestTrackTimes)                                             ->
errors.py:79(LibError)                                                          ->
codeprinter.py:5(AssignmentError)                                               ->
six.py:189(__get_module)                                                        ->
ImageFilter.py:248(FIND_EDGES)                                                  ->
info.py:50(<module>)                                                            ->
polynomials.py:40(chebyshevt)                                                   ->
integers.py:120(ceiling)                                                        ->
errors.py:13(MessageParseError)                                                 ->
matrices.py:986(<genexpr>)                                                      ->
arrayprint.py:634(IntegerFormat)                                                ->
test_dataset.py:925(TestScalarCompound)                                         ->
__init__.py:1688(EggProvider)                                                   ->
sympyintegerring.py:16(__init__)                                                ->
test_datatype.py:27(BaseType)                                                   ->
ImageFilter.py:237(EMBOSS)                                                      ->
test_h5p.py:48(TestFA)                                                          ->
polyerrors.py:58(NotReversible)                                                 ->
polyerrors.py:73(GeneratorsNeeded)                                              ->
test_dims_dimensionproxy.py:21(TestItems)                                       ->
gamma_functions.py:400(loggamma)                                                ->
test_group.py:734(TestExtLinkBugs)                                              ->
{intern}                                                                        ->
matrices.py:56(DeferredVector)                                                  ->
function.py:49(PoleError)                                                       ->
polyoptions.py:464(Gaussian)                                                    ->
relational.py:196(Inequality)                                                   ->
sets.py:165(AskIrrationalHandler)                                               ->
core.py:826(__init__)                                                           ->
hyperexpand.py:779(ShiftB)                                                      ->
utils.py:51(_set_function_name)                                                 ->
optimization.py:512(ANewton)                                                    ->
core.py:64(BasicType)                                                           ->
boolalg.py:61(Or)                                                               ->
polyerrors.py:3(BasePolynomialError)                                            ->
decimal.py:284(InvalidContext)                                                  ->
ImageFilter.py:193(CONTOUR)                                                     ->
{_hashlib.openssl_sha256}                                                       ->
test_group.py:112(TestDtypeAssignment)                                          ->
test_attrs_data.py:59(TestArray)                                                ->
test_dataset.py:180(TestCreateChunked)                                          ->
case.py:25(SkipTest)                                                            ->
test_attrs.py:98(TestUnicode)                                                   ->
Shadow.py:245(ArrayType)                                                        ->
errors.py:41(NoBoundaryInMultipartDefect)                                       ->
threading.py:1088(_set_daemon)                                                  ->
test_selections.py:61(TestScalarSliceRules)                                     ->
gmpyrationalfield.py:21(__init__)                                               ->
function.py:558(AppliedUndef)                                                   ->
arrayprint.py:684(LongComplexFormat)                                            ->
errors.py:83(LinkError)                                                         ->
test_dataset_swmr.py:86(TestDatasetSwmrWrite)                                   ->
threading.py:515(_BoundedSemaphore)                                             ->
test_dataset.py:397(TestCreateFletcher32)                                       ->
core.py:855(_DomainGreater)                                                     ->
ikfast_generator_cpp.py:100(RemoveAbsFn)                                        ->
test_dataset.py:884(TestRegionRefs)                                             ->
__init__.py:291(c_wchar)                                                        ->
pythonrationalfield.py:19(__init__)                                             ->
test_dataset.py:42(TestRepr)                                                    ->
openravepy_ext.py:98(openrave_exception)                                        ->
Shadow.py:273(UnionType)                                                        ->
bessel.py:209(hankel1)                                                          ->
nonlin.py:619(GenericBroyden)                                                   ->
openravepy_ext.py:52(TransformQuaternionsSaver)                                 ->
Image.py:1718(ImagePointHandler)                                                ->
ImageFilter.py:180(BLUR)                                                        ->
errors.py:76(CompileError)                                                      ->
info.py:104(<module>)                                                           ->
test_h5t.py:21(TestCompound)                                                    ->
boolalg.py:35(BooleanFunction)                                                  ->
boolalg.py:86(Not)                                                              ->
simpledomain.py:5(SimpleDomain)                                                 ->
extras.py:1398(mr_class)                                                        ->
test_h5p.py:70(TestPL)                                                          ->
test_dataset.py:33(BaseDataset)                                                 ->
umfpack.py:233(Struct)                                                          ->
calendar.py:502(LocaleTextCalendar)                                             ->
errors.py:55(DistutilsExecError)                                                ->
_globals.py:33(ModuleDeprecationWarning)                                        ->
errors.py:13(DistutilsError)                                                    ->
polyerrors.py:40(IsomorphismFailed)                                             ->
optimization.py:453(Ridder)                                                     ->
matrices.py:17(MatrixError)                                                     ->
ikfast_AST.py:8(SolverBase)                                                     ->
matrices.py:24(NonSquareMatrixError)                                            ->
core.py:2358(__init__)                                                          ->
Shadow.py:341(_FusedType)                                                       ->
test_group.py:603(TestVisit)                                                    ->
core.py:6214(_extrema_operation)                                                ->
test_dataset.py:409(TestCreateScaleOffset)                                      ->
polyoptions.py:46(BooleanOption)                                                ->
six.py:380(Module_six_moves_urllib_request)                                     ->
{sys.exit}                                                                      ->
_globals.py:56(_NoValue)                                                        ->
polyoptions.py:351(Greedy)                                                      ->
test_h5p.py:19(TestLibver)                                                      ->
errors.py:56(MultipartInvariantViolationDefect)                                 ->
__init__.py:408(register_loader_type)                                           ->
_endian.py:23(_swapped_meta)                                                    ->
optimization.py:56(Secant)                                                      ->
_import_tools.py:340(PackageLoaderDebug)                                        ->
polyerrors.py:52(CoercionFailed)                                                ->
openravepy_ext.py:128(runtime_error)                                            ->
six.py:229(_MovedItems)                                                         ->
__init__.py:503(BufferingFormatter)                                             ->
errors.py:46(DistutilsSetupError)                                               ->
nonlin.py:381(TerminationCondition)                                             ->
Shadow.py:184(_nogil)                                                           ->
polyoptions.py:538(Symmetric)                                                   ->
test_group.py:255(BaseMapping)                                                  ->
polyoptions.py:300(Sort)                                                        ->
boolalg.py:118(Nor)                                                             ->
ImageFilter.py:24(Kernel)                                                       ->
__init__.py:2056(register_finder)                                               ->
decimal.py:298(Rounded)                                                         ->
ikfast_AST.py:339(SolverConditionedSolution)                                    ->
__init__.py:288(c_wchar_p)                                                      ->
trigonometric.py:12(TrigonometricFunction)                                      ->
urllib.py:984(addclosehook)                                                     ->
anneal.py:128(boltzmann_sa)                                                     ->
__init__.py:1751(ZipManifests)                                                  ->
__init__.py:190(c_uint)                                                         ->
decimal.py:234(DivisionByZero)                                                  ->
errors.py:59(DistutilsInternalError)                                            ->
calendar.py:28(IllegalWeekdayError)                                             ->
test_group.py:125(TestRequire)                                                  ->
hyperexpand.py:197(Mod1)                                                        ->
arpack.py:968(IterOpInv)                                                        ->
uu.py:39(Error)                                                                 ->
test_attribute_create.py:21(TestArray)                                          ->
boolalg.py:162(ITE)                                                             ->
function.py:568(UndefinedFunction)                                              ->
polyerrors.py:61(NotAlgebraic)                                                  ->
numbers.py:1324(IntegerConstant)                                                ->
core.py:89(ClassRegistry)                                                       ->
calendar.py:52(__init__)                                                        ->
doctest.py:499(DocTest)                                                         ->
openravepy_ext.py:32(CollisionOptionsStateSaver)                                ->
core.py:835(_DomainSafeDivide)                                                  ->
__future__.py:74(_Feature)                                                      ->
plistlib.py:291(_InternalDict)                                                  ->
errors.py:20(DistutilsClassError)                                               ->
ikfast_generator_cpp.py:723(endChain)                                           ->
shutil.py:38(ExecError)                                                         ->
errors.py:70(CCompilerError)                                                    ->
ikfast_AST.py:308(SolverMatrixInverse)                                          ->
polyerrors.py:89(UnivariatePolynomialError)                                     ->
errors.py:47(FirstHeaderLineIsContinuationDefect)                               ->
errors.py:53(MalformedHeaderDefect)                                             ->
{method 'find_module' of 'imp.NullImporter' objects}                            ->
arpack.py:297(ArpackNoConvergence)                                              ->
six.py:62(__len__)                                                              ->
test_file.py:407(TestFileProperty)                                              ->
ImageMode.py:22(ModeDescriptor)                                                 ->
decimal.py:321(Overflow)                                                        ->
base.py:13(SparseWarning)                                                       ->
test_group.py:99(TestDatasetAssignment)                                         ->
test_file.py:507(TestBackwardsCompat)                                           ->
__init__.py:74(LazyImporter)                                                    ->
__init__.py:18(NullHandler)                                                     ->
libmpf.py:907(mpf_shift)                                                        ->
polyoptions.py:642(All)                                                         ->
polynomials.py:93(chebyshevt_root)                                              ->
runtests.py:865(SymPyDocTestRunner)                                             ->
factorials.py:7(CombinatorialFunction)                                          ->
integers.py:71(floor)                                                           ->
six.py:360(Module_six_moves_urllib_error)                                       ->
polyoptions.py:242(Gens)                                                        ->
polyerrors.py:76(ComputationFailed)                                             ->
ssl.py:331(Purpose)                                                             ->
errors.py:26(DistutilsGetoptError)                                              ->
libhyper.py:43(NoConvergence)                                                   ->
power.py:99(class_key)                                                          ->
__init__.py:1134(__init__)                                                      ->
six.py:320(Module_six_moves_urllib_parse)                                       ->
unixccompiler.py:251(library_option)                                            ->
interface.py:218(IdentityOperator)                                              ->
ImageFilter.py:226(EDGE_ENHANCE_MORE)                                           ->
test_group.py:533(TestGet)                                                      ->
stride_tricks.py:15(DummyArray)                                                 ->
exec_py2.py:1(<module>)                                                         ->
test_dataset.py:858(TestZeroShape)                                              ->
specifiers.py:25(InvalidSpecifier)                                              ->
libmpf.py:132(h_mask_big)                                                       ->
base.py:15(SparseEfficiencyWarning)                                             ->
anneal.py:142(_state)                                                           ->
decimal.py:359(Underflow)                                                       ->
pythonintegerring.py:40(from_ZZ_python)                                         ->
factorials.py:152(factorial2)                                                   ->
ImageFilter.py:283(SHARPEN)                                                     ->
six.py:451(Module_six_moves_urllib_robotparser)                                 ->
_parseaddr.py:452(AddressList)                                                  ->
tokenize.py:146(TokenError)                                                     ->
exceptions.py:3(GeometryError)                                                  ->
test_dataset.py:351(TestCreateLZF)                                              ->
test_group.py:421(TestPy3Dict)                                                  ->
ImageFilter.py:64(RankFilter)                                                   ->
info.py:167(<module>)                                                           ->
polyoptions.py:624(Polys)                                                       ->
info.py:14(<module>)                                                            ->
hyperexpand.py:767(ShiftA)                                                      ->
ikfast_AST.py:478(SolverRotation)                                               ->
test_file.py:133(TestModes)                                                     ->
sre_parse.py:139(__delitem__)                                                   ->
ImageFilter.py:106(MinFilter)                                                   ->
polyoptions.py:548(Strict)                                                      ->
errors.py:73(PreprocessError)                                                   ->
polyerrors.py:64(DomainError)                                                   ->
errors.py:16(DistutilsModuleError)                                              ->
ikfast_IKFastSolver.py:1071(checkSolvability)                                   ->
__init__.py:165(c_short)                                                        ->
Shadow.py:97(_EmptyDecoratorAndManager)                                         ->
info.py:18(<module>)                                                            ->
groundtypes.py:54(__init__)                                                     ->


